package glasses

import (
	"fmt"
	"github.com/FACorreiaa/glasses-management-platform/app/models"
	"github.com/FACorreiaa/glasses-management-platform/app/view/components"
	"strconv"
)

templ GlassesTable(a models.GlassesTable, form models.GlassesForm) {
	<div class="flex flex-col items-stretch shadow-lg overflow-hidden bg-white rounded-lg border border-gray-200">
		<div class="p-4 border-b border-gray-200">
			@components.InputGroupContainer() {
				<div class="flex items-center space-x-2 flex-grow mr-2">
					@components.InputSearch("Filter reference", "/glasses", "reference", "#searchResults")
					@components.InputSearch("Filter left sph", "/glasses", "left_sph", "#searchResults")
					@components.InputSearch("Filter right sph", "/glasses", "right_sph", "#searchResults")

				</div>
				// Add specific filters for prescription if needed, or a more generic search
				// Example: Simple combined text search
				// <div class="flex-grow mr-2">
				//     @components.InputSearch("Filter prescription...", "/glasses", "prescription_query", "#searchResults")
				// </div>
				<div class="flex-shrink-0">
					@GlassesInsertModal(form)
				</div>
			}
		</div>

		<div class="overflow-x-auto">
			<div class="inline-block min-w-full align-middle">
				<div class="overflow-hidden">
					<table class="min-w-full divide-y divide-gray-200">
						<thead class="bg-gray-50">
							<tr>
								for _, col := range a.Column {
									<th scope="col" class="px-4 py-3 text-left text-xs font-semibold text-gray-600 uppercase tracking-wider whitespace-nowrap">
										<div class="flex items-center">
											{ col.Title }
											if col.SortParam != "" {
												<a
													class="ml-1 text-gray-400 hover:text-gray-700"
													href={ templ.URL(fmt.Sprintf("/glasses?page=%d&orderBy=%s&sortBy=%s", a.Page, col.SortParam, col.SortParam)) }
													aria-label={fmt.Sprintf("Sort by %s", col.Title)}
												>
													@col.Icon
												</a>
											}
										</div>
									</th>
								}
								<th scope="col" class="relative px-4 py-3">
									<span class="sr-only">Actions</span>
								</th>
							</tr>
						</thead>
						<tbody id="searchResults" class="bg-white divide-y divide-gray-200">
							for _, glasses := range a.Glasses {
								<tr class="hover:bg-gray-50 transition-colors duration-150 ease-in-out">
									<td class="px-4 py-3 whitespace-nowrap text-sm font-medium text-blue-600 hover:text-blue-800">
										<a
											href={ templ.URL(fmt.Sprintf("/glasses/%s/details", glasses.GlassesID)) } 
											hx-boost="true"
											hx-target="#detailsSpace"  
											hx-swap="innerHTML"
											hx-trigger="click"
										>
											{ glasses.Reference }
										</a>
									</td>
									<td class="px-4 py-3 whitespace-nowrap text-sm text-gray-600">{ glasses.Brand }</td>
									<td class="px-4 py-3 whitespace-nowrap text-sm text-gray-600">{ glasses.Type }</td>
									<td class="px-4 py-3 whitespace-nowrap text-sm text-gray-600">{ glasses.Color }</td>

									// Left Eye Prescription
									<td class="px-4 py-3 whitespace-nowrap text-sm text-gray-600 text-center">
										if glasses.LeftPrescription.Sph != nil {
											{ fmt.Sprintf("%+.2f", *glasses.LeftPrescription.Sph) }
										} else {
											<span class="text-gray-400">-</span>
										}
									</td>
									<td class="px-4 py-3 whitespace-nowrap text-sm text-gray-600 text-center">
										if glasses.LeftPrescription.Cyl != nil {
											{ fmt.Sprintf("%+.2f", *glasses.LeftPrescription.Cyl) }
										} else {
											<span class="text-gray-400">-</span>
										}
									</td>
									<td class="px-4 py-3 whitespace-nowrap text-sm text-gray-600 text-center">
										if glasses.LeftPrescription.Axis != nil {
        									{ fmt.Sprintf("%.0f", *glasses.LeftPrescription.Axis) }
										} else {
											<span class="text-gray-400">-</span>
										}
									</td>
									<td class="px-4 py-3 whitespace-nowrap text-sm text-gray-600 text-center">
										if glasses.LeftPrescription.Add != nil {
											{ fmt.Sprintf("%+.2f", *glasses.LeftPrescription.Add) }
										} else {
											<span class="text-gray-400">-</span>
										}
									</td>

									// Right Eye Prescription
									<td class="px-4 py-3 whitespace-nowrap text-sm text-gray-600 text-center">
										if glasses.RightPrescription.Sph != nil {
											{ fmt.Sprintf("%+.2f", *glasses.RightPrescription.Sph) }
										} else {
											<span class="text-gray-400">-</span>
										}
									</td>
									<td class="px-4 py-3 whitespace-nowrap text-sm text-gray-600 text-center">
										if glasses.RightPrescription.Cyl != nil {
											{ fmt.Sprintf("%+.2f", *glasses.RightPrescription.Cyl) }
										} else {
											<span class="text-gray-400">-</span>
										}
									</td>
									<td class="px-4 py-3 whitespace-nowrap text-sm text-gray-600 text-center">
										if glasses.RightPrescription.Axis != nil {
											{ fmt.Sprintf("%+.2f", *glasses.RightPrescription.Axis) }
										} else {
											<span class="text-gray-400">-</span>
										}
									</td>
									<td class="px-4 py-3 whitespace-nowrap text-sm text-gray-600 text-center">
										if glasses.RightPrescription.Add != nil {
											{ fmt.Sprintf("%+.2f", *glasses.RightPrescription.Add) }
										} else {
											<span class="text-gray-400">-</span>
										}
									</td>

									<td class="px-4 py-3 whitespace-nowrap text-sm text-gray-600">
										if glasses.IsInStock {
											<span class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-green-100 text-green-800">
												In Stock
											</span>
										} else {
											<span class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-red-100 text-red-800">
												Out of Stock
											</span>
										}
									</td>
									<td class="px-4 py-3 whitespace-normal text-sm text-gray-600 max-w-xs truncate">{ glasses.Feature }</td> // Allow wrapping/truncating for features
									<td class="px-4 py-3 whitespace-nowrap text-sm text-gray-500">{ glasses.CreatedAt.Format("Jan 02, 2006") }</td>
									<td class="px-4 py-3 whitespace-nowrap text-right text-sm font-medium space-x-2">
										// Action buttons can go here
										<a href={ templ.URL(fmt.Sprintf("/glasses/%s/edit", glasses.GlassesID)) } class="text-indigo-600 hover:text-indigo-900" title="Edit">
											<i class="fas fa-pencil-alt"></i> // Example using Font Awesome
											<span class="sr-only">Edit</span>
										</a>
										if glasses.IsInStock {
											<button
												hx-post={ fmt.Sprintf("/customer/glasses/%s/send", glasses.GlassesID) }  
												hx-confirm="Are you sure you want to mark these glasses as sent?"
												hx-target="closest tr" 
												hx-swap="outerHTML"  
												class="text-green-600 hover:text-green-900"
												title="Mark as Sent"
											>
												<i class="fas fa-paper-plane"></i>
												<span class="sr-only">Mark as Sent</span>
											</button>
										}
										<button
											hx-delete={ fmt.Sprintf("/glasses/%s", glasses.GlassesID) }
											hx-confirm="Are you sure you want to delete these glasses?"
											hx-target="closest tr"
											hx-swap="outerHTML"
											class="text-red-600 hover:text-red-900"
											title="Delete"
										>
											<i class="fas fa-trash-alt"></i>
											<span class="sr-only">Delete</span>
										</button>
									</td>
								</tr>
							}
							if len(a.Glasses) == 0 {
								<tr>
    								<td colspan={ strconv.Itoa(len(a.Column) + 1) } class="px-4 py-6 text-center text-sm text-gray-500">
										No glasses found matching your criteria.
									</td>
								</tr>
							}
						</tbody>
					</table>
				</div>
			</div>
		</div>

		if a.LastPage > 1 {
			<div class="p-4 border-t border-gray-200">
				@components.PaginatorComponent(
					"/glasses", // Base path
					fmt.Sprintf("/glasses?page=%d&orderBy=%s&sortBy=%s", a.PrevPage, a.OrderParam, a.SortParam),
					strconv.Itoa(a.Page),
					fmt.Sprintf("/glasses?page=%d&orderBy=%s&sortBy=%s", a.NextPage, a.OrderParam, a.SortParam),
					fmt.Sprintf("/glasses?page=%d&orderBy=%s&sortBy=%s", a.LastPage, a.OrderParam, a.SortParam),
					strconv.Itoa(a.LastPage),
					a.OrderParam,
					a.SortParam)
			</div>
		}
		
		<div id="detailsSpace" class="mt-4 p-4 border-t border-gray-200">
			<!-- Details loaded via HTMX will appear here -->
		</div>
	</div>
}