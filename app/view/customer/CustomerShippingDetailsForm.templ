package customer

import (
	"github.com/FACorreiaa/glasses-management-platform/app/models"
	"github.com/FACorreiaa/glasses-management-platform/app/view/components"
)

templ CustomerShipingDetailsForm(form models.CustomerShippingForm) {
	<section class="w-full bg-white py-8">
		<div class="mx-auto max-w-7xl sm:px-4 lg:px-8">
			<h2 class="mb-4 text-3xl font-extrabold text-gray-900 xl:text-4xl px-4">Send glasses</h2>
			<div class="flex flex-col lg:flex-row">
				<form method="post" class="w-full space-y-4">
					<div class="flex flex-wrap ">
						<div class="w-full md:w-1/2 px-4 mb-4">
							<label class="block font-medium text-gray-900 mb-1" for="name">Name</label>
							<input
								type="text"
								class="block w-full px-4 py-2 mt-1 text-base placeholder-gray-400 bg-gray-100 rounded-lg focus:outline-none "
								placeholder="Insert customer nme"
								name="name"
								autocomplete="name"
								id="name"
								required
								value={ form.Values["Name"] }
							/>
						</div>
						<div class="w-full md:w-1/2 px-4 mb-4">
							<label class="block font-medium text-gray-900 mb-1" for="brand">Card number</label>
							<input
								type="text"
								class="block w-full px-4 py-2 mt-1 text-base placeholder-gray-400 bg-gray-100 rounded-lg focus:outline-none "
								placeholder="Insert card ID number"
								name="card_id_number"
								autocomplete="text"
								id="brand"
								required
								value={ form.Values["CardID"] }
							/>
							if form.FieldErrors["card_id_number"] != "" {
								<p class="text-error">{ form.FieldErrors["card_id_number"] }</p>
							}
						</div>
					</div>
					<div class="flex flex-wrap ">
						<div class="w-full md:w-1/2 px-4 mb-4">
							<label class="block font-medium text-gray-900 mb-1" for="left-eye">Address</label>
							<input
								type="text"
								class="block w-full px-4 py-2 mt-1 text-base placeholder-gray-400 bg-gray-100 rounded-lg focus:outline-none "
								placeholder="Insert address"
								name="adress"
								autocomplete="adress"
								id="address"
								value={ form.Values["Address"] }
							/>
						</div>
						<div class="w-full md:w-1/2 px-4 mb-4">
							<label class="block font-medium text-gray-900 mb-1" for="right-eye">Address details</label>
							<input
								type="text"
								class="block w-full px-4 py-2 mt-1 text-base placeholder-gray-400 bg-gray-100 rounded-lg focus:outline-none "
								placeholder="Door number, company, avenue..."
								name="address_details"
								autocomplete="address_details"
								value={ form.Values["AddressDetails"] }
							/>
						</div>
					</div>
					<div class="grid grid-cols-1 md:grid-cols-3 gap-4">
						<div class="w-full col-span-1 px-4 mb-4">
							<label class="block font-medium text-gray-900 mb-1" for="color">City</label>
							<input
								type="text"
								class="block w-full px-4 py-2 mt-1 text-base placeholder-gray-400 bg-gray-100 rounded-lg focus:outline-none "
								placeholder="Insert city"
								name="city"
								autocomplete="city"
								id="city"
								value={ form.Values["City"] }
							/>
						</div>
						<div class="w-full col-span-1 px-4 mb-4">
							<label class="block font-medium text-gray-900 mb-1" for="type">Country</label>
							<input
								type="text"
								class="block w-full px-4 py-2 mt-1 text-base placeholder-gray-400 bg-gray-100 rounded-lg focus:outline-none "
								placeholder="Insert country"
								name="country"
								autocomplete="country"
								id="country"
								value={ form.Values["Country"] }
							/>
						</div>
						<div class="w-full col-span-1 px-4 mb-4">
							<label class="block font-medium text-gray-900 mb-1" for="type">Continent</label>
							<input
								type="text"
								class="block w-full px-4 py-2 mt-1 text-base placeholder-gray-400 bg-gray-100 rounded-lg focus:outline-none "
								placeholder="Insert continent"
								name="continent"
								autocomplete="continent"
								id="continent"
								value={ form.Values["Continent"] }
							/>
						</div>
					</div>
					<div class="flex flex-wrap ">
						<div class="w-full md:w-1/2 px-4 mb-4">
							<label class="block font-medium text-gray-900 mb-1" for="color">Postal code</label>
							<input
								type="text"
								class="block w-full px-4 py-2 mt-1 text-base placeholder-gray-400 bg-gray-100 rounded-lg focus:outline-none "
								placeholder="Insert postal code"
								name="postal_code"
								autocomplete="postal_code"
								id="postal_code"
								value={ form.Values["PostalCode"] }
							/>
						</div>
						<div class="w-full md:w-1/2 px-4 mb-4">
							<label class="block font-medium text-gray-900 mb-1" for="type">Phone number</label>
							<input
								type="text"
								class="block w-full px-4 py-2 mt-1 text-base placeholder-gray-400 bg-gray-100 rounded-lg focus:outline-none "
								placeholder="Insert phone number"
								name="phone_number"
								autocomplete="phone_number"
								id="phone_number"
								value={ form.Values["PhoneNumber"] }
							/>
						</div>
					</div>
					<div class="flex flex-wrap ">
						<div class="w-full md:w-1/2 px-4 mb-4">
							<label class="block font-medium text-gray-900 mb-1" for="color">Email</label>
							<input
								type="email"
								class="block w-full px-4 py-2 mt-1 text-base placeholder-gray-400 bg-gray-100 rounded-lg focus:outline-none "
								placeholder="Insert email"
								name="email"
								autocomplete="email"
								id="email"
								value={ form.Values["Email"] }
							/>
						</div>
					</div>
					<div class="flex flex-wrap ">
						<div class="w-full md:w-1/2 px-4 mb-4">
							@components.ButtonReturnComponent(templ.SafeURL("/glasses"))
						</div>
						<div class="w-full md:w-1/2 px-4 mb-4">
							@components.ButtonInsertComponent("Insert")
						</div>
					</div>
				</form>
			</div>
		</div>
	</section>
	<script>
		document.addEventListener("submit", function(event) {
			const form = event.target;
			if (form.getAttribute('method') === 'post') {
				const successMessage = document.getElementById("success-message");

				// Display the success message
				if (successMessage) {
					successMessage.textContent = "Item inserted successfully!";
					successMessage.style.display = "block";

					// Hide the success message after 3 seconds
					setTimeout(() => {
						successMessage.style.display = "none";
					}, 3000);

					// Trigger custom event to handle additional logic if necessary
					const glassesAddedEvent = new Event("glassesAdded");
					document.dispatchEvent(glassesAddedEvent);
				}
			}
		});
	</script>
}
