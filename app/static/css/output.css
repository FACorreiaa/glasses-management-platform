/*
! tailwindcss v3.4.4 | MIT License | https://tailwindcss.com
*//*
1. Prevent padding and border from affecting element width. (https://github.com/mozdevs/cssremedy/issues/4)
2. Allow adding a border to an element by just adding a border-width. (https://github.com/tailwindcss/tailwindcss/pull/116)
*/

*,
::before,
::after {
  box-sizing: border-box; /* 1 */
  border-width: 0; /* 2 */
  border-style: solid; /* 2 */
  border-color: currentColor; /* 2 */
}

::before,
::after {
  --tw-content: '';
}

/*
1. Use a consistent sensible line-height in all browsers.
2. Prevent adjustments of font size after orientation changes in iOS.
3. Use a more readable tab size.
4. Use the user's configured `sans` font-family by default.
5. Use the user's configured `sans` font-feature-settings by default.
6. Use the user's configured `sans` font-variation-settings by default.
7. Disable tap highlights on iOS
*/

html,
:host {
  line-height: 1.5; /* 1 */
  -webkit-text-size-adjust: 100%; /* 2 */
  -moz-tab-size: 4; /* 3 */
  -o-tab-size: 4;
     tab-size: 4; /* 3 */
  font-family: Graphik, sans-serif; /* 4 */
  font-feature-settings: normal; /* 5 */
  font-variation-settings: normal; /* 6 */
  -webkit-tap-highlight-color: transparent; /* 7 */
}

/*
1. Remove the margin in all browsers.
2. Inherit line-height from `html` so users can set them as a class directly on the `html` element.
*/

body {
  margin: 0; /* 1 */
  line-height: inherit; /* 2 */
}

/*
1. Add the correct height in Firefox.
2. Correct the inheritance of border color in Firefox. (https://bugzilla.mozilla.org/show_bug.cgi?id=190655)
3. Ensure horizontal rules are visible by default.
*/

hr {
  height: 0; /* 1 */
  color: inherit; /* 2 */
  border-top-width: 1px; /* 3 */
}

/*
Add the correct text decoration in Chrome, Edge, and Safari.
*/

abbr:where([title]) {
  -webkit-text-decoration: underline dotted;
          text-decoration: underline dotted;
}

/*
Remove the default font size and weight for headings.
*/

h1,
h2,
h3,
h4,
h5,
h6 {
  font-size: inherit;
  font-weight: inherit;
}

/*
Reset links to optimize for opt-in styling instead of opt-out.
*/

a {
  color: inherit;
  text-decoration: inherit;
}

/*
Add the correct font weight in Edge and Safari.
*/

b,
strong {
  font-weight: bolder;
}

/*
1. Use the user's configured `mono` font-family by default.
2. Use the user's configured `mono` font-feature-settings by default.
3. Use the user's configured `mono` font-variation-settings by default.
4. Correct the odd `em` font sizing in all browsers.
*/

code,
kbd,
samp,
pre {
  font-family: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace; /* 1 */
  font-feature-settings: normal; /* 2 */
  font-variation-settings: normal; /* 3 */
  font-size: 1em; /* 4 */
}

/*
Add the correct font size in all browsers.
*/

small {
  font-size: 80%;
}

/*
Prevent `sub` and `sup` elements from affecting the line height in all browsers.
*/

sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}

sub {
  bottom: -0.25em;
}

sup {
  top: -0.5em;
}

/*
1. Remove text indentation from table contents in Chrome and Safari. (https://bugs.chromium.org/p/chromium/issues/detail?id=999088, https://bugs.webkit.org/show_bug.cgi?id=201297)
2. Correct table border color inheritance in all Chrome and Safari. (https://bugs.chromium.org/p/chromium/issues/detail?id=935729, https://bugs.webkit.org/show_bug.cgi?id=195016)
3. Remove gaps between table borders by default.
*/

table {
  text-indent: 0; /* 1 */
  border-color: inherit; /* 2 */
  border-collapse: collapse; /* 3 */
}

/*
1. Change the font styles in all browsers.
2. Remove the margin in Firefox and Safari.
3. Remove default padding in all browsers.
*/

button,
input,
optgroup,
select,
textarea {
  font-family: inherit; /* 1 */
  font-feature-settings: inherit; /* 1 */
  font-variation-settings: inherit; /* 1 */
  font-size: 100%; /* 1 */
  font-weight: inherit; /* 1 */
  line-height: inherit; /* 1 */
  letter-spacing: inherit; /* 1 */
  color: inherit; /* 1 */
  margin: 0; /* 2 */
  padding: 0; /* 3 */
}

/*
Remove the inheritance of text transform in Edge and Firefox.
*/

button,
select {
  text-transform: none;
}

/*
1. Correct the inability to style clickable types in iOS and Safari.
2. Remove default button styles.
*/

button,
input:where([type='button']),
input:where([type='reset']),
input:where([type='submit']) {
  -webkit-appearance: button; /* 1 */
  background-color: transparent; /* 2 */
  background-image: none; /* 2 */
}

/*
Use the modern Firefox focus style for all focusable elements.
*/

:-moz-focusring {
  outline: auto;
}

/*
Remove the additional `:invalid` styles in Firefox. (https://github.com/mozilla/gecko-dev/blob/2f9eacd9d3d995c937b4251a5557d95d494c9be1/layout/style/res/forms.css#L728-L737)
*/

:-moz-ui-invalid {
  box-shadow: none;
}

/*
Add the correct vertical alignment in Chrome and Firefox.
*/

progress {
  vertical-align: baseline;
}

/*
Correct the cursor style of increment and decrement buttons in Safari.
*/

::-webkit-inner-spin-button,
::-webkit-outer-spin-button {
  height: auto;
}

/*
1. Correct the odd appearance in Chrome and Safari.
2. Correct the outline style in Safari.
*/

[type='search'] {
  -webkit-appearance: textfield; /* 1 */
  outline-offset: -2px; /* 2 */
}

/*
Remove the inner padding in Chrome and Safari on macOS.
*/

::-webkit-search-decoration {
  -webkit-appearance: none;
}

/*
1. Correct the inability to style clickable types in iOS and Safari.
2. Change font properties to `inherit` in Safari.
*/

::-webkit-file-upload-button {
  -webkit-appearance: button; /* 1 */
  font: inherit; /* 2 */
}

/*
Add the correct display in Chrome and Safari.
*/

summary {
  display: list-item;
}

/*
Removes the default spacing and border for appropriate elements.
*/

blockquote,
dl,
dd,
h1,
h2,
h3,
h4,
h5,
h6,
hr,
figure,
p,
pre {
  margin: 0;
}

fieldset {
  margin: 0;
  padding: 0;
}

legend {
  padding: 0;
}

ol,
ul,
menu {
  list-style: none;
  margin: 0;
  padding: 0;
}

/*
Reset default styling for dialogs.
*/
dialog {
  padding: 0;
}

/*
Prevent resizing textareas horizontally by default.
*/

textarea {
  resize: vertical;
}

/*
1. Reset the default placeholder opacity in Firefox. (https://github.com/tailwindlabs/tailwindcss/issues/3300)
2. Set the default placeholder color to the user's configured gray 400 color.
*/

input::-moz-placeholder, textarea::-moz-placeholder {
  opacity: 1; /* 1 */
  color: #9ca3af; /* 2 */
}

input::placeholder,
textarea::placeholder {
  opacity: 1; /* 1 */
  color: #9ca3af; /* 2 */
}

/*
Set the default cursor for buttons.
*/

button,
[role="button"] {
  cursor: pointer;
}

/*
Make sure disabled buttons don't get the pointer cursor.
*/
:disabled {
  cursor: default;
}

/*
1. Make replaced elements `display: block` by default. (https://github.com/mozdevs/cssremedy/issues/14)
2. Add `vertical-align: middle` to align replaced elements more sensibly by default. (https://github.com/jensimmons/cssremedy/issues/14#issuecomment-634934210)
   This can trigger a poorly considered lint error in some tools but is included by design.
*/

img,
svg,
video,
canvas,
audio,
iframe,
embed,
object {
  display: block; /* 1 */
  vertical-align: middle; /* 2 */
}

/*
Constrain images and videos to the parent width and preserve their intrinsic aspect ratio. (https://github.com/mozdevs/cssremedy/issues/14)
*/

img,
video {
  max-width: 100%;
  height: auto;
}

/* Make elements with the HTML hidden attribute stay hidden by default */
[hidden] {
  display: none;
}

[type='text'],input:where(:not([type])),[type='email'],[type='url'],[type='password'],[type='number'],[type='date'],[type='datetime-local'],[type='month'],[type='search'],[type='tel'],[type='time'],[type='week'],[multiple],textarea,select {
  -webkit-appearance: none;
     -moz-appearance: none;
          appearance: none;
  background-color: #fff;
  border-color: #6b7280;
  border-width: 1px;
  border-radius: 0px;
  padding-top: 0.5rem;
  padding-right: 0.75rem;
  padding-bottom: 0.5rem;
  padding-left: 0.75rem;
  font-size: 1rem;
  line-height: 1.5rem;
  --tw-shadow: 0 0 #0000;
}

[type='text']:focus, input:where(:not([type])):focus, [type='email']:focus, [type='url']:focus, [type='password']:focus, [type='number']:focus, [type='date']:focus, [type='datetime-local']:focus, [type='month']:focus, [type='search']:focus, [type='tel']:focus, [type='time']:focus, [type='week']:focus, [multiple]:focus, textarea:focus, select:focus {
  outline: 2px solid transparent;
  outline-offset: 2px;
  --tw-ring-inset: var(--tw-empty,/*!*/ /*!*/);
  --tw-ring-offset-width: 0px;
  --tw-ring-offset-color: #fff;
  --tw-ring-color: #2563eb;
  --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
  --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(1px + var(--tw-ring-offset-width)) var(--tw-ring-color);
  box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  border-color: #2563eb;
}

input::-moz-placeholder, textarea::-moz-placeholder {
  color: #6b7280;
  opacity: 1;
}

input::placeholder,textarea::placeholder {
  color: #6b7280;
  opacity: 1;
}

::-webkit-datetime-edit-fields-wrapper {
  padding: 0;
}

::-webkit-date-and-time-value {
  min-height: 1.5em;
  text-align: inherit;
}

::-webkit-datetime-edit {
  display: inline-flex;
}

::-webkit-datetime-edit,::-webkit-datetime-edit-year-field,::-webkit-datetime-edit-month-field,::-webkit-datetime-edit-day-field,::-webkit-datetime-edit-hour-field,::-webkit-datetime-edit-minute-field,::-webkit-datetime-edit-second-field,::-webkit-datetime-edit-millisecond-field,::-webkit-datetime-edit-meridiem-field {
  padding-top: 0;
  padding-bottom: 0;
}

select {
  background-image: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' fill='none' viewBox='0 0 20 20'%3e%3cpath stroke='%236b7280' stroke-linecap='round' stroke-linejoin='round' stroke-width='1.5' d='M6 8l4 4 4-4'/%3e%3c/svg%3e");
  background-position: right 0.5rem center;
  background-repeat: no-repeat;
  background-size: 1.5em 1.5em;
  padding-right: 2.5rem;
  -webkit-print-color-adjust: exact;
          print-color-adjust: exact;
}

[multiple],[size]:where(select:not([size="1"])) {
  background-image: initial;
  background-position: initial;
  background-repeat: unset;
  background-size: initial;
  padding-right: 0.75rem;
  -webkit-print-color-adjust: unset;
          print-color-adjust: unset;
}

[type='checkbox'],[type='radio'] {
  -webkit-appearance: none;
     -moz-appearance: none;
          appearance: none;
  padding: 0;
  -webkit-print-color-adjust: exact;
          print-color-adjust: exact;
  display: inline-block;
  vertical-align: middle;
  background-origin: border-box;
  -webkit-user-select: none;
     -moz-user-select: none;
          user-select: none;
  flex-shrink: 0;
  height: 1rem;
  width: 1rem;
  color: #2563eb;
  background-color: #fff;
  border-color: #6b7280;
  border-width: 1px;
  --tw-shadow: 0 0 #0000;
}

[type='checkbox'] {
  border-radius: 0px;
}

[type='radio'] {
  border-radius: 100%;
}

[type='checkbox']:focus,[type='radio']:focus {
  outline: 2px solid transparent;
  outline-offset: 2px;
  --tw-ring-inset: var(--tw-empty,/*!*/ /*!*/);
  --tw-ring-offset-width: 2px;
  --tw-ring-offset-color: #fff;
  --tw-ring-color: #2563eb;
  --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
  --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(2px + var(--tw-ring-offset-width)) var(--tw-ring-color);
  box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
}

[type='checkbox']:checked,[type='radio']:checked {
  border-color: transparent;
  background-color: currentColor;
  background-size: 100% 100%;
  background-position: center;
  background-repeat: no-repeat;
}

[type='checkbox']:checked {
  background-image: url("data:image/svg+xml,%3csvg viewBox='0 0 16 16' fill='white' xmlns='http://www.w3.org/2000/svg'%3e%3cpath d='M12.207 4.793a1 1 0 010 1.414l-5 5a1 1 0 01-1.414 0l-2-2a1 1 0 011.414-1.414L6.5 9.086l4.293-4.293a1 1 0 011.414 0z'/%3e%3c/svg%3e");
}

@media (forced-colors: active)  {

  [type='checkbox']:checked {
    -webkit-appearance: auto;
       -moz-appearance: auto;
            appearance: auto;
  }
}

[type='radio']:checked {
  background-image: url("data:image/svg+xml,%3csvg viewBox='0 0 16 16' fill='white' xmlns='http://www.w3.org/2000/svg'%3e%3ccircle cx='8' cy='8' r='3'/%3e%3c/svg%3e");
}

@media (forced-colors: active)  {

  [type='radio']:checked {
    -webkit-appearance: auto;
       -moz-appearance: auto;
            appearance: auto;
  }
}

[type='checkbox']:checked:hover,[type='checkbox']:checked:focus,[type='radio']:checked:hover,[type='radio']:checked:focus {
  border-color: transparent;
  background-color: currentColor;
}

[type='checkbox']:indeterminate {
  background-image: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' fill='none' viewBox='0 0 16 16'%3e%3cpath stroke='white' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M4 8h8'/%3e%3c/svg%3e");
  border-color: transparent;
  background-color: currentColor;
  background-size: 100% 100%;
  background-position: center;
  background-repeat: no-repeat;
}

@media (forced-colors: active)  {

  [type='checkbox']:indeterminate {
    -webkit-appearance: auto;
       -moz-appearance: auto;
            appearance: auto;
  }
}

[type='checkbox']:indeterminate:hover,[type='checkbox']:indeterminate:focus {
  border-color: transparent;
  background-color: currentColor;
}

[type='file'] {
  background: unset;
  border-color: inherit;
  border-width: 0;
  border-radius: 0;
  padding: 0;
  font-size: unset;
  line-height: inherit;
}

[type='file']:focus {
  outline: 1px solid ButtonText;
  outline: 1px auto -webkit-focus-ring-color;
}

:where(:root),:root:has(input.theme-controller[value=light]:checked),[data-theme=light] {
  color-scheme: light;
  --color-base-100: oklch(100% 0 0);
  --color-base-200: oklch(98% 0 0);
  --color-base-300: oklch(95% 0 0);
  --color-base-content: oklch(21% 0.006 285.885);
  --color-primary: oklch(45% 0.24 277.023);
  --color-primary-content: oklch(93% 0.034 272.788);
  --color-secondary: oklch(65% 0.241 354.308);
  --color-secondary-content: oklch(94% 0.028 342.258);
  --color-accent: oklch(77% 0.152 181.912);
  --color-accent-content: oklch(38% 0.063 188.416);
  --color-neutral: oklch(14% 0.005 285.823);
  --color-neutral-content: oklch(92% 0.004 286.32);
  --color-info: oklch(74% 0.16 232.661);
  --color-info-content: oklch(29% 0.066 243.157);
  --color-success: oklch(76% 0.177 163.223);
  --color-success-content: oklch(37% 0.077 168.94);
  --color-warning: oklch(82% 0.189 84.429);
  --color-warning-content: oklch(41% 0.112 45.904);
  --color-error: oklch(71% 0.194 13.428);
  --color-error-content: oklch(27% 0.105 12.094);
  --radius-selector: 0.5rem;
  --radius-field: 0.25rem;
  --radius-box: 0.5rem;
  --size-selector: 0.25rem;
  --size-field: 0.25rem;
  --border: 1px;
  --depth: 1;
  --noise: 0;
}

@media (prefers-color-scheme: dark) {

  :root {
    color-scheme: dark;
    --color-base-100: oklch(25.33% 0.016 252.42);
    --color-base-200: oklch(23.26% 0.014 253.1);
    --color-base-300: oklch(21.15% 0.012 254.09);
    --color-base-content: oklch(97.807% 0.029 256.847);
    --color-primary: oklch(58% 0.233 277.117);
    --color-primary-content: oklch(96% 0.018 272.314);
    --color-secondary: oklch(65% 0.241 354.308);
    --color-secondary-content: oklch(94% 0.028 342.258);
    --color-accent: oklch(77% 0.152 181.912);
    --color-accent-content: oklch(38% 0.063 188.416);
    --color-neutral: oklch(14% 0.005 285.823);
    --color-neutral-content: oklch(92% 0.004 286.32);
    --color-info: oklch(74% 0.16 232.661);
    --color-info-content: oklch(29% 0.066 243.157);
    --color-success: oklch(76% 0.177 163.223);
    --color-success-content: oklch(37% 0.077 168.94);
    --color-warning: oklch(82% 0.189 84.429);
    --color-warning-content: oklch(41% 0.112 45.904);
    --color-error: oklch(71% 0.194 13.428);
    --color-error-content: oklch(27% 0.105 12.094);
    --radius-selector: 0.5rem;
    --radius-field: 0.25rem;
    --radius-box: 0.5rem;
    --size-selector: 0.25rem;
    --size-field: 0.25rem;
    --border: 1px;
    --depth: 1;
    --noise: 0;
  }
}

:root:has(input.theme-controller[value=light]:checked),[data-theme=light] {
  color-scheme: light;
  --color-base-100: oklch(100% 0 0);
  --color-base-200: oklch(98% 0 0);
  --color-base-300: oklch(95% 0 0);
  --color-base-content: oklch(21% 0.006 285.885);
  --color-primary: oklch(45% 0.24 277.023);
  --color-primary-content: oklch(93% 0.034 272.788);
  --color-secondary: oklch(65% 0.241 354.308);
  --color-secondary-content: oklch(94% 0.028 342.258);
  --color-accent: oklch(77% 0.152 181.912);
  --color-accent-content: oklch(38% 0.063 188.416);
  --color-neutral: oklch(14% 0.005 285.823);
  --color-neutral-content: oklch(92% 0.004 286.32);
  --color-info: oklch(74% 0.16 232.661);
  --color-info-content: oklch(29% 0.066 243.157);
  --color-success: oklch(76% 0.177 163.223);
  --color-success-content: oklch(37% 0.077 168.94);
  --color-warning: oklch(82% 0.189 84.429);
  --color-warning-content: oklch(41% 0.112 45.904);
  --color-error: oklch(71% 0.194 13.428);
  --color-error-content: oklch(27% 0.105 12.094);
  --radius-selector: 0.5rem;
  --radius-field: 0.25rem;
  --radius-box: 0.5rem;
  --size-selector: 0.25rem;
  --size-field: 0.25rem;
  --border: 1px;
  --depth: 1;
  --noise: 0;
}

:root:has(input.theme-controller[value=dark]:checked),[data-theme=dark] {
  color-scheme: dark;
  --color-base-100: oklch(25.33% 0.016 252.42);
  --color-base-200: oklch(23.26% 0.014 253.1);
  --color-base-300: oklch(21.15% 0.012 254.09);
  --color-base-content: oklch(97.807% 0.029 256.847);
  --color-primary: oklch(58% 0.233 277.117);
  --color-primary-content: oklch(96% 0.018 272.314);
  --color-secondary: oklch(65% 0.241 354.308);
  --color-secondary-content: oklch(94% 0.028 342.258);
  --color-accent: oklch(77% 0.152 181.912);
  --color-accent-content: oklch(38% 0.063 188.416);
  --color-neutral: oklch(14% 0.005 285.823);
  --color-neutral-content: oklch(92% 0.004 286.32);
  --color-info: oklch(74% 0.16 232.661);
  --color-info-content: oklch(29% 0.066 243.157);
  --color-success: oklch(76% 0.177 163.223);
  --color-success-content: oklch(37% 0.077 168.94);
  --color-warning: oklch(82% 0.189 84.429);
  --color-warning-content: oklch(41% 0.112 45.904);
  --color-error: oklch(71% 0.194 13.428);
  --color-error-content: oklch(27% 0.105 12.094);
  --radius-selector: 0.5rem;
  --radius-field: 0.25rem;
  --radius-box: 0.5rem;
  --size-selector: 0.25rem;
  --size-field: 0.25rem;
  --border: 1px;
  --depth: 1;
  --noise: 0;
}

@property --radialprogress {
  syntax: "<percentage>";
  inherits: true;
  initial-value: 0%;
}

:root {
  scrollbar-color: color-mix(in oklch, currentColor 35%, #0000) #0000;
}

:root:has( .modal-open, .modal[open], .modal:target, .modal-toggle:checked, .drawer:not([class*="drawer-open"]) > .drawer-toggle:checked ) {
  overflow: hidden;
}

:root, [data-theme] {
  background-color: var(--root-bg, var(--color-base-100));
  color: var(--color-base-content);
}

:root {
  --fx-noise: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg'%3E%3Cfilter id='a'%3E%3CfeTurbulence type='fractalNoise' baseFrequency='1.34' numOctaves='4' stitchTiles='stitch'%3E%3C/feTurbulence%3E%3C/filter%3E%3Crect width='100%25' height='100%25' filter='url(%23a)' opacity='0.2'%3E%3C/rect%3E%3C/svg%3E");
}

:where( :root:has( .modal-open, .modal[open], .modal:target, .modal-toggle:checked, .drawer:not(.drawer-open) > .drawer-toggle:checked ) ) {
  scrollbar-gutter: stable;
  background-image: linear-gradient(var(--color-base-100), var(--color-base-100));
  --root-bg: color-mix(in srgb, var(--color-base-100), oklch(0% 0 0) 40%);
}

*, ::before, ::after {
  --tw-border-spacing-x: 0;
  --tw-border-spacing-y: 0;
  --tw-translate-x: 0;
  --tw-translate-y: 0;
  --tw-rotate: 0;
  --tw-skew-x: 0;
  --tw-skew-y: 0;
  --tw-scale-x: 1;
  --tw-scale-y: 1;
  --tw-pan-x:  ;
  --tw-pan-y:  ;
  --tw-pinch-zoom:  ;
  --tw-scroll-snap-strictness: proximity;
  --tw-gradient-from-position:  ;
  --tw-gradient-via-position:  ;
  --tw-gradient-to-position:  ;
  --tw-ordinal:  ;
  --tw-slashed-zero:  ;
  --tw-numeric-figure:  ;
  --tw-numeric-spacing:  ;
  --tw-numeric-fraction:  ;
  --tw-ring-inset:  ;
  --tw-ring-offset-width: 0px;
  --tw-ring-offset-color: #fff;
  --tw-ring-color: rgb(59 130 246 / 0.5);
  --tw-ring-offset-shadow: 0 0 #0000;
  --tw-ring-shadow: 0 0 #0000;
  --tw-shadow: 0 0 #0000;
  --tw-shadow-colored: 0 0 #0000;
  --tw-blur:  ;
  --tw-brightness:  ;
  --tw-contrast:  ;
  --tw-grayscale:  ;
  --tw-hue-rotate:  ;
  --tw-invert:  ;
  --tw-saturate:  ;
  --tw-sepia:  ;
  --tw-drop-shadow:  ;
  --tw-backdrop-blur:  ;
  --tw-backdrop-brightness:  ;
  --tw-backdrop-contrast:  ;
  --tw-backdrop-grayscale:  ;
  --tw-backdrop-hue-rotate:  ;
  --tw-backdrop-invert:  ;
  --tw-backdrop-opacity:  ;
  --tw-backdrop-saturate:  ;
  --tw-backdrop-sepia:  ;
  --tw-contain-size:  ;
  --tw-contain-layout:  ;
  --tw-contain-paint:  ;
  --tw-contain-style:  ;
}

::backdrop {
  --tw-border-spacing-x: 0;
  --tw-border-spacing-y: 0;
  --tw-translate-x: 0;
  --tw-translate-y: 0;
  --tw-rotate: 0;
  --tw-skew-x: 0;
  --tw-skew-y: 0;
  --tw-scale-x: 1;
  --tw-scale-y: 1;
  --tw-pan-x:  ;
  --tw-pan-y:  ;
  --tw-pinch-zoom:  ;
  --tw-scroll-snap-strictness: proximity;
  --tw-gradient-from-position:  ;
  --tw-gradient-via-position:  ;
  --tw-gradient-to-position:  ;
  --tw-ordinal:  ;
  --tw-slashed-zero:  ;
  --tw-numeric-figure:  ;
  --tw-numeric-spacing:  ;
  --tw-numeric-fraction:  ;
  --tw-ring-inset:  ;
  --tw-ring-offset-width: 0px;
  --tw-ring-offset-color: #fff;
  --tw-ring-color: rgb(59 130 246 / 0.5);
  --tw-ring-offset-shadow: 0 0 #0000;
  --tw-ring-shadow: 0 0 #0000;
  --tw-shadow: 0 0 #0000;
  --tw-shadow-colored: 0 0 #0000;
  --tw-blur:  ;
  --tw-brightness:  ;
  --tw-contrast:  ;
  --tw-grayscale:  ;
  --tw-hue-rotate:  ;
  --tw-invert:  ;
  --tw-saturate:  ;
  --tw-sepia:  ;
  --tw-drop-shadow:  ;
  --tw-backdrop-blur:  ;
  --tw-backdrop-brightness:  ;
  --tw-backdrop-contrast:  ;
  --tw-backdrop-grayscale:  ;
  --tw-backdrop-hue-rotate:  ;
  --tw-backdrop-invert:  ;
  --tw-backdrop-opacity:  ;
  --tw-backdrop-saturate:  ;
  --tw-backdrop-sepia:  ;
  --tw-contain-size:  ;
  --tw-contain-layout:  ;
  --tw-contain-paint:  ;
  --tw-contain-style:  ;
}
.container {
  width: 100%;
  margin-right: auto;
  margin-left: auto;
  padding-right: 2rem;
  padding-left: 2rem;
}
@media (min-width: 1400px) {

  .container {
    max-width: 1400px;
  }
}
.prose {
  color: var(--tw-prose-body);
  max-width: 65ch;
}
.prose :where(p):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  margin-top: 1.25em;
  margin-bottom: 1.25em;
}
.prose :where([class~="lead"]):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  color: var(--tw-prose-lead);
  font-size: 1.25em;
  line-height: 1.6;
  margin-top: 1.2em;
  margin-bottom: 1.2em;
}
.prose :where(a):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  color: var(--tw-prose-links);
  text-decoration: underline;
  font-weight: 500;
}
.prose :where(strong):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  color: var(--tw-prose-bold);
  font-weight: 600;
}
.prose :where(a strong):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  color: inherit;
}
.prose :where(blockquote strong):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  color: inherit;
}
.prose :where(thead th strong):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  color: inherit;
}
.prose :where(ol):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  list-style-type: decimal;
  margin-top: 1.25em;
  margin-bottom: 1.25em;
  padding-inline-start: 1.625em;
}
.prose :where(ol[type="A"]):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  list-style-type: upper-alpha;
}
.prose :where(ol[type="a"]):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  list-style-type: lower-alpha;
}
.prose :where(ol[type="A" s]):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  list-style-type: upper-alpha;
}
.prose :where(ol[type="a" s]):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  list-style-type: lower-alpha;
}
.prose :where(ol[type="I"]):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  list-style-type: upper-roman;
}
.prose :where(ol[type="i"]):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  list-style-type: lower-roman;
}
.prose :where(ol[type="I" s]):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  list-style-type: upper-roman;
}
.prose :where(ol[type="i" s]):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  list-style-type: lower-roman;
}
.prose :where(ol[type="1"]):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  list-style-type: decimal;
}
.prose :where(ul):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  list-style-type: disc;
  margin-top: 1.25em;
  margin-bottom: 1.25em;
  padding-inline-start: 1.625em;
}
.prose :where(ol > li):not(:where([class~="not-prose"],[class~="not-prose"] *))::marker {
  font-weight: 400;
  color: var(--tw-prose-counters);
}
.prose :where(ul > li):not(:where([class~="not-prose"],[class~="not-prose"] *))::marker {
  color: var(--tw-prose-bullets);
}
.prose :where(dt):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  color: var(--tw-prose-headings);
  font-weight: 600;
  margin-top: 1.25em;
}
.prose :where(hr):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  border-color: var(--tw-prose-hr);
  border-top-width: 1px;
  margin-top: 3em;
  margin-bottom: 3em;
}
.prose :where(blockquote):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  font-weight: 500;
  font-style: italic;
  color: var(--tw-prose-quotes);
  border-inline-start-width: 0.25rem;
  border-inline-start-color: var(--tw-prose-quote-borders);
  quotes: "\201C""\201D""\2018""\2019";
  margin-top: 1.6em;
  margin-bottom: 1.6em;
  padding-inline-start: 1em;
}
.prose :where(blockquote p:first-of-type):not(:where([class~="not-prose"],[class~="not-prose"] *))::before {
  content: open-quote;
}
.prose :where(blockquote p:last-of-type):not(:where([class~="not-prose"],[class~="not-prose"] *))::after {
  content: close-quote;
}
.prose :where(h1):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  color: var(--tw-prose-headings);
  font-weight: 800;
  font-size: 2.25em;
  margin-top: 0;
  margin-bottom: 0.8888889em;
  line-height: 1.1111111;
}
.prose :where(h1 strong):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  font-weight: 900;
  color: inherit;
}
.prose :where(h2):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  color: var(--tw-prose-headings);
  font-weight: 700;
  font-size: 1.5em;
  margin-top: 2em;
  margin-bottom: 1em;
  line-height: 1.3333333;
}
.prose :where(h2 strong):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  font-weight: 800;
  color: inherit;
}
.prose :where(h3):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  color: var(--tw-prose-headings);
  font-weight: 600;
  font-size: 1.25em;
  margin-top: 1.6em;
  margin-bottom: 0.6em;
  line-height: 1.6;
}
.prose :where(h3 strong):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  font-weight: 700;
  color: inherit;
}
.prose :where(h4):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  color: var(--tw-prose-headings);
  font-weight: 600;
  margin-top: 1.5em;
  margin-bottom: 0.5em;
  line-height: 1.5;
}
.prose :where(h4 strong):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  font-weight: 700;
  color: inherit;
}
.prose :where(img):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  margin-top: 2em;
  margin-bottom: 2em;
}
.prose :where(picture):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  display: block;
  margin-top: 2em;
  margin-bottom: 2em;
}
.prose :where(video):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  margin-top: 2em;
  margin-bottom: 2em;
}
.prose :where(kbd):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  font-weight: 500;
  font-family: inherit;
  color: var(--tw-prose-kbd);
  box-shadow: 0 0 0 1px rgb(var(--tw-prose-kbd-shadows) / 10%), 0 3px 0 rgb(var(--tw-prose-kbd-shadows) / 10%);
  font-size: 0.875em;
  border-radius: 0.3125rem;
  padding-top: 0.1875em;
  padding-inline-end: 0.375em;
  padding-bottom: 0.1875em;
  padding-inline-start: 0.375em;
}
.prose :where(code):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  color: var(--tw-prose-code);
  font-weight: 600;
  font-size: 0.875em;
}
.prose :where(code):not(:where([class~="not-prose"],[class~="not-prose"] *))::before {
  content: "`";
}
.prose :where(code):not(:where([class~="not-prose"],[class~="not-prose"] *))::after {
  content: "`";
}
.prose :where(a code):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  color: inherit;
}
.prose :where(h1 code):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  color: inherit;
}
.prose :where(h2 code):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  color: inherit;
  font-size: 0.875em;
}
.prose :where(h3 code):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  color: inherit;
  font-size: 0.9em;
}
.prose :where(h4 code):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  color: inherit;
}
.prose :where(blockquote code):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  color: inherit;
}
.prose :where(thead th code):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  color: inherit;
}
.prose :where(pre):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  color: var(--tw-prose-pre-code);
  background-color: var(--tw-prose-pre-bg);
  overflow-x: auto;
  font-weight: 400;
  font-size: 0.875em;
  line-height: 1.7142857;
  margin-top: 1.7142857em;
  margin-bottom: 1.7142857em;
  border-radius: 0.375rem;
  padding-top: 0.8571429em;
  padding-inline-end: 1.1428571em;
  padding-bottom: 0.8571429em;
  padding-inline-start: 1.1428571em;
}
.prose :where(pre code):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  background-color: transparent;
  border-width: 0;
  border-radius: 0;
  padding: 0;
  font-weight: inherit;
  color: inherit;
  font-size: inherit;
  font-family: inherit;
  line-height: inherit;
}
.prose :where(pre code):not(:where([class~="not-prose"],[class~="not-prose"] *))::before {
  content: none;
}
.prose :where(pre code):not(:where([class~="not-prose"],[class~="not-prose"] *))::after {
  content: none;
}
.prose :where(table):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  width: 100%;
  table-layout: auto;
  text-align: start;
  margin-top: 2em;
  margin-bottom: 2em;
  font-size: 0.875em;
  line-height: 1.7142857;
}
.prose :where(thead):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  border-bottom-width: 1px;
  border-bottom-color: var(--tw-prose-th-borders);
}
.prose :where(thead th):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  color: var(--tw-prose-headings);
  font-weight: 600;
  vertical-align: bottom;
  padding-inline-end: 0.5714286em;
  padding-bottom: 0.5714286em;
  padding-inline-start: 0.5714286em;
}
.prose :where(tbody tr):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  border-bottom-width: 1px;
  border-bottom-color: var(--tw-prose-td-borders);
}
.prose :where(tbody tr:last-child):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  border-bottom-width: 0;
}
.prose :where(tbody td):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  vertical-align: baseline;
}
.prose :where(tfoot):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  border-top-width: 1px;
  border-top-color: var(--tw-prose-th-borders);
}
.prose :where(tfoot td):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  vertical-align: top;
}
.prose :where(figure > *):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  margin-top: 0;
  margin-bottom: 0;
}
.prose :where(figcaption):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  color: var(--tw-prose-captions);
  font-size: 0.875em;
  line-height: 1.4285714;
  margin-top: 0.8571429em;
}
.prose {
  --tw-prose-body: #374151;
  --tw-prose-headings: #111827;
  --tw-prose-lead: #4b5563;
  --tw-prose-links: #111827;
  --tw-prose-bold: #111827;
  --tw-prose-counters: #6b7280;
  --tw-prose-bullets: #d1d5db;
  --tw-prose-hr: #e5e7eb;
  --tw-prose-quotes: #111827;
  --tw-prose-quote-borders: #e5e7eb;
  --tw-prose-captions: #6b7280;
  --tw-prose-kbd: #111827;
  --tw-prose-kbd-shadows: 17 24 39;
  --tw-prose-code: #111827;
  --tw-prose-pre-code: #e5e7eb;
  --tw-prose-pre-bg: #1f2937;
  --tw-prose-th-borders: #d1d5db;
  --tw-prose-td-borders: #e5e7eb;
  --tw-prose-invert-body: #d1d5db;
  --tw-prose-invert-headings: #fff;
  --tw-prose-invert-lead: #9ca3af;
  --tw-prose-invert-links: #fff;
  --tw-prose-invert-bold: #fff;
  --tw-prose-invert-counters: #9ca3af;
  --tw-prose-invert-bullets: #4b5563;
  --tw-prose-invert-hr: #374151;
  --tw-prose-invert-quotes: #f3f4f6;
  --tw-prose-invert-quote-borders: #374151;
  --tw-prose-invert-captions: #9ca3af;
  --tw-prose-invert-kbd: #fff;
  --tw-prose-invert-kbd-shadows: 255 255 255;
  --tw-prose-invert-code: #fff;
  --tw-prose-invert-pre-code: #d1d5db;
  --tw-prose-invert-pre-bg: rgb(0 0 0 / 50%);
  --tw-prose-invert-th-borders: #4b5563;
  --tw-prose-invert-td-borders: #374151;
  font-size: 1rem;
  line-height: 1.75;
}
.prose :where(picture > img):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  margin-top: 0;
  margin-bottom: 0;
}
.prose :where(li):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  margin-top: 0.5em;
  margin-bottom: 0.5em;
}
.prose :where(ol > li):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  padding-inline-start: 0.375em;
}
.prose :where(ul > li):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  padding-inline-start: 0.375em;
}
.prose :where(.prose > ul > li p):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  margin-top: 0.75em;
  margin-bottom: 0.75em;
}
.prose :where(.prose > ul > li > p:first-child):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  margin-top: 1.25em;
}
.prose :where(.prose > ul > li > p:last-child):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  margin-bottom: 1.25em;
}
.prose :where(.prose > ol > li > p:first-child):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  margin-top: 1.25em;
}
.prose :where(.prose > ol > li > p:last-child):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  margin-bottom: 1.25em;
}
.prose :where(ul ul, ul ol, ol ul, ol ol):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  margin-top: 0.75em;
  margin-bottom: 0.75em;
}
.prose :where(dl):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  margin-top: 1.25em;
  margin-bottom: 1.25em;
}
.prose :where(dd):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  margin-top: 0.5em;
  padding-inline-start: 1.625em;
}
.prose :where(hr + *):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  margin-top: 0;
}
.prose :where(h2 + *):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  margin-top: 0;
}
.prose :where(h3 + *):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  margin-top: 0;
}
.prose :where(h4 + *):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  margin-top: 0;
}
.prose :where(thead th:first-child):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  padding-inline-start: 0;
}
.prose :where(thead th:last-child):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  padding-inline-end: 0;
}
.prose :where(tbody td, tfoot td):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  padding-top: 0.5714286em;
  padding-inline-end: 0.5714286em;
  padding-bottom: 0.5714286em;
  padding-inline-start: 0.5714286em;
}
.prose :where(tbody td:first-child, tfoot td:first-child):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  padding-inline-start: 0;
}
.prose :where(tbody td:last-child, tfoot td:last-child):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  padding-inline-end: 0;
}
.prose :where(figure):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  margin-top: 2em;
  margin-bottom: 2em;
}
.prose :where(.prose > :first-child):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  margin-top: 0;
}
.prose :where(.prose > :last-child):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  margin-bottom: 0;
}
.footer {
  display: grid;
  width: 100%;
  grid-auto-flow: row;
  place-items: start;
  -moz-column-gap: calc(0.25rem * 4);
       column-gap: calc(0.25rem * 4);
  row-gap: calc(0.25rem * 10);
  font-size: 0.875rem;
  line-height: 1.25rem;
}
.footer > * {
  display: grid;
  place-items: start;
  gap: calc(0.25rem * 2);
}
.footer.footer-center {
  grid-auto-flow: column dense;
  place-items: center;
  text-align: center;
}
.footer.footer-center > * {
  place-items: center;
}
.footer-horizontal {
  grid-auto-flow: column;
}
.footer-horizontal.footer-center {
  grid-auto-flow: row dense;
}
.footer-vertical {
  grid-auto-flow: row;
}
.footer-vertical.footer-center {
  grid-auto-flow: column dense;
}
.skeleton {
  border-radius: var(--radius-box);
  background-color: var(--color-base-300);
}
@media (prefers-reduced-motion: reduce) {

  .skeleton {
    transition-duration: 15s;
  }
}
.skeleton {
  will-change: background-position;
  animation: skeleton 1.8s ease-in-out infinite;
  background-image: linear-gradient( 105deg, #0000 0% 40%, var(--color-base-100) 50%, #0000 60% 100% );
  background-size: 200% auto;
  background-repeat: no-repeat;
  background-position-x: -50%;
}
@keyframes skeleton {

  0% {
    background-position: 150%;
  }

  100% {
    background-position: -50%;
  }
}
.progress {
  position: relative;
  height: calc(0.25rem * 2);
  width: 100%;
  -webkit-appearance: none;
     -moz-appearance: none;
          appearance: none;
  overflow: hidden;
  border-radius: var(--radius-box);
  background-color: color-mix(in oklab, currentColor 20%, transparent);
  color: var(--color-base-content);
}
.progress:indeterminate {
  background-image: repeating-linear-gradient( 90deg, currentColor -1%, currentColor 10%, #0000 10%, #0000 90% );
  background-size: 200%;
  background-position-x: 15%;
  animation: progress 5s ease-in-out infinite;
}
@supports (-moz-appearance: none) {

  .progress:indeterminate::-moz-progress-bar {
    background-color: transparent;
    background-image: repeating-linear-gradient( 90deg, currentColor -1%, currentColor 10%, #0000 10%, #0000 90% );
    background-size: 200%;
    background-position-x: 15%;
    animation: progress 5s ease-in-out infinite;
  }

  .progress::-moz-progress-bar {
    border-radius: var(--radius-box);
    background-color: currentColor;
  }
}
@supports (-webkit-appearance: none) {

  .progress::-webkit-progress-bar {
    border-radius: var(--radius-box);
    background-color: transparent;
  }

  .progress::-webkit-progress-value {
    border-radius: var(--radius-box);
    background-color: currentColor;
  }
}
@keyframes progress {

  50% {
    background-position-x: -115%;
  }
}
.swap {
  position: relative;
  display: inline-grid;
  cursor: pointer;
  place-content: center;
  vertical-align: middle;
  webkit-user-select: none;
  -webkit-user-select: none;
     -moz-user-select: none;
          user-select: none;
}
.swap input {
  -webkit-appearance: none;
     -moz-appearance: none;
          appearance: none;
  border: none;
}
.swap > * {
  grid-column-start: 1;
  grid-row-start: 1;
  transition-property: transform, rotate, opacity;
  transition-duration: 0.2s;
  transition-timing-function: cubic-bezier(0, 0, 0.2, 1);
}
.swap .swap-on, .swap .swap-indeterminate, .swap input:indeterminate ~ .swap-on {
  opacity: 0%;
}
.swap input:is(:checked, :indeterminate) ~ .swap-off {
  opacity: 0%;
}
.swap input:checked ~ .swap-on, .swap input:indeterminate ~ .swap-indeterminate {
  opacity: 100%;
}
.swap-active .swap-off {
  opacity: 0%;
}
.swap-active .swap-on {
  opacity: 100%;
}
.swap-rotate .swap-on, .swap-rotate input:indeterminate ~ .swap-on {
  rotate: 45deg;
}
.swap-rotate input:is(:checked, :indeterminate) ~ .swap-on, .swap-rotate.swap-active .swap-on {
  rotate: 0deg;
}
.swap-rotate input:is(:checked, :indeterminate) ~ .swap-off, .swap-rotate.swap-active .swap-off {
  rotate: calc(45deg * -1);
}
.swap-flip {
  transform-style: preserve-3d;
  perspective: 20rem;
}
.swap-flip .swap-on, .swap-flip .swap-indeterminate, .swap-flip input:indeterminate ~ .swap-on {
  transform: rotateY(180deg);
  backface-visibility: hidden;
  opacity: 100%;
}
.swap-flip input:is(:checked, :indeterminate) ~ .swap-on, .swap-flip.swap-active .swap-on {
  transform: rotateY(0deg);
}
.swap-flip input:is(:checked, :indeterminate) ~ .swap-off, .swap-flip.swap-active .swap-off {
  transform: rotateY(-180deg);
  backface-visibility: hidden;
  opacity: 100%;
}
:where(.btn) {
  width: unset;
}
.btn {
  display: inline-flex;
  flex-shrink: 0;
  cursor: pointer;
  flex-wrap: nowrap;
  align-items: center;
  justify-content: center;
  gap: calc(0.25rem * 1.5);
  text-align: center;
  vertical-align: middle;
  outline-offset: 2px;
  webkit-user-select: none;
  -webkit-user-select: none;
     -moz-user-select: none;
          user-select: none;
  padding-inline: var(--btn-p);
  color: var(--btn-fg);
  --tw-prose-links: var(--btn-fg);
  height: var(--size);
  font-size: var(--fontsize, 0.875rem);
  font-weight: 600;
  outline-color: var(--btn-color, var(--color-base-content));
  transition-property: color, background-color, border-color, box-shadow;
  transition-timing-function: cubic-bezier(0, 0, 0.2, 1);
  transition-duration: 0.2s;
  border-start-start-radius: var(--join-ss, var(--radius-field));
  border-start-end-radius: var(--join-se, var(--radius-field));
  border-end-start-radius: var(--join-es, var(--radius-field));
  border-end-end-radius: var(--join-ee, var(--radius-field));
  background-color: var(--btn-bg);
  background-size: auto, calc(var(--noise) * 100%);
  background-image: none, var(--btn-noise);
  border-width: var(--border);
  border-style: solid;
  border-color: var(--btn-border);
  text-shadow: 0 0.5px oklch(100% 0 0 / calc(var(--depth) * 0.15));
  box-shadow: 0 0.5px 0 0.5px oklch(100% 0 0 / calc(var(--depth) * 6%)) inset, var(--btn-shadow);
  --size: calc(var(--size-field, 0.25rem) * 10);
  --btn-bg: var(--btn-color, var(--color-base-200));
  --btn-fg: var(--color-base-content);
  --btn-p: 1rem;
  --btn-border: color-mix(in oklab, var(--btn-bg), #000 calc(var(--depth) * 5%));
  --btn-shadow: 0 3px 2px -2px color-mix(in oklab, var(--btn-bg) calc(var(--depth) * 30%), #0000),
    0 4px 3px -2px color-mix(in oklab, var(--btn-bg) calc(var(--depth) * 30%), #0000);
  --btn-noise: var(--fx-noise);
}
.prose .btn {
  text-decoration-line: none;
}
@media (hover: hover) {

  .btn:hover {
    --btn-bg: color-mix(in oklab, var(--btn-color, var(--color-base-200)), #000 7%);
  }
}
.btn:focus-visible {
  outline-width: 2px;
  outline-style: solid;
}
.btn:active:not(.btn-active) {
  translate: 0 0.5px;
  --btn-bg: color-mix(in oklab, var(--btn-color, var(--color-base-200)), #000 5%);
  --btn-border: color-mix(in oklab, var(--btn-color, var(--color-base-200)), #000 7%);
  --btn-shadow: 0 0 0 0 oklch(0% 0 0/0), 0 0 0 0 oklch(0% 0 0/0);
}
.btn:is(:disabled, [disabled], .btn-disabled):not(.btn-link, .btn-ghost) {
  background-color: color-mix(in oklab, var(--color-base-content) 10%, transparent);
  box-shadow: none;
}
.btn:is(:disabled, [disabled], .btn-disabled) {
  pointer-events: none;
  --btn-border: #0000;
  --btn-noise: none;
  --btn-fg: color-mix(in oklch, var(--color-base-content) 20%, #0000);
}
@media (hover: hover) {

  .btn:is(:disabled, [disabled], .btn-disabled):hover {
    pointer-events: none;
    background-color: color-mix(in oklab, var(--color-neutral) 20%, transparent);
    --btn-border: #0000;
    --btn-fg: color-mix(in oklch, var(--color-base-content) 20%, #0000);
  }
}
.btn:is(input[type="checkbox"], input[type="radio"]) {
  -webkit-appearance: none;
     -moz-appearance: none;
          appearance: none;
}
.btn:is(input[type="checkbox"], input[type="radio"])::after {
  content: attr(aria-label);
}
.btn:where(input:checked:not(.filter .btn)) {
  --btn-color: var(--color-primary);
  --btn-fg: var(--color-primary-content);
  isolation: isolate;
}
.btn-active {
  --btn-bg: color-mix(in oklab, var(--btn-color, var(--color-base-200)), #000 7%);
  --btn-shadow: 0 0 0 0 oklch(0% 0 0/0), 0 0 0 0 oklch(0% 0 0/0);
  isolation: isolate;
}
.btn-primary {
  --btn-color: var(--color-primary);
  --btn-fg: var(--color-primary-content);
}
.btn-secondary {
  --btn-color: var(--color-secondary);
  --btn-fg: var(--color-secondary-content);
}
.btn-accent {
  --btn-color: var(--color-accent);
  --btn-fg: var(--color-accent-content);
}
.btn-info {
  --btn-color: var(--color-info);
  --btn-fg: var(--color-info-content);
}
.btn-success {
  --btn-color: var(--color-success);
  --btn-fg: var(--color-success-content);
}
.btn-warning {
  --btn-color: var(--color-warning);
  --btn-fg: var(--color-warning-content);
}
.btn-error {
  --btn-color: var(--color-error);
  --btn-fg: var(--color-error-content);
}
.btn-ghost:not(.btn-active, :hover, :active:focus, :focus-visible) {
  --btn-shadow: "";
  --btn-bg: #0000;
  --btn-border: #0000;
  --btn-noise: none;
}
.btn-ghost:not(.btn-active, :hover, :active:focus, :focus-visible):not(:disabled, [disabled], .btn-disabled) {
  outline-color: currentColor;
  --btn-fg: currentColor;
}
.btn-link {
  text-decoration-line: underline;
  outline-color: currentColor;
  --btn-border: #0000;
  --btn-bg: #0000;
  --btn-fg: var(--color-primary);
  --btn-noise: none;
  --btn-shadow: "";
}
.btn-link:is(.btn-active, :hover, :active:focus, :focus-visible) {
  text-decoration-line: underline;
  --btn-border: #0000;
  --btn-bg: #0000;
}
.btn-outline:not( .btn-active, :hover, :active:focus, :focus-visible, :disabled, [disabled], .btn-disabled, :checked ) {
  --btn-shadow: "";
  --btn-bg: #0000;
  --btn-fg: var(--btn-color);
  --btn-border: var(--btn-color);
  --btn-noise: none;
}
.btn-xs {
  --fontsize: 0.6875rem;
  --btn-p: 0.5rem;
  --size: calc(var(--size-field, 0.25rem) * 6);
}
.btn-sm {
  --fontsize: 0.75rem;
  --btn-p: 0.75rem;
  --size: calc(var(--size-field, 0.25rem) * 8);
}
.btn-lg {
  --fontsize: 1.125rem;
  --btn-p: 1.25rem;
  --size: calc(var(--size-field, 0.25rem) * 12);
}
.filter {
  display: flex;
  flex-wrap: wrap;
}
.filter input[type="radio"] {
  width: auto;
}
.filter input {
  overflow: hidden;
  opacity: 100%;
  scale: 1;
  transition: margin 0.1s, opacity 0.3s, padding 0.3s, border-width 0.1s;
}
.filter input:not(:last-child) {
  margin-inline-end: calc(0.25rem * 1);
}
.filter input.filter-reset {
  aspect-ratio: 1 / 1;
}
.filter input.filter-reset::after {
  content: "×";
}
.filter:not(:has(input:checked:not(.filter-reset))) .filter-reset, .filter:not(:has(input:checked:not(.filter-reset))) input[type="reset"] {
  scale: 0;
  border-width: 0;
  margin-inline: calc(0.25rem * 0);
  width: calc(0.25rem * 0);
  padding-inline: calc(0.25rem * 0);
  opacity: 0%;
}
.filter:has(input:checked:not(.filter-reset)) input:not(:checked, .filter-reset, input[type="reset"]) {
  scale: 0;
  border-width: 0;
  margin-inline: calc(0.25rem * 0);
  width: calc(0.25rem * 0);
  padding-inline: calc(0.25rem * 0);
  opacity: 0%;
}
.badge {
  display: inline-flex;
  align-items: center;
  justify-content: center;
  gap: calc(0.25rem * 2);
  border-radius: var(--radius-selector);
  vertical-align: middle;
  color: var(--badge-fg);
  border: var(--border) solid var(--badge-color, var(--color-base-200));
  font-size: 0.875rem;
  width: -moz-fit-content;
  width: fit-content;
  padding-inline: calc(0.25rem * 3 - var(--border));
  background-size: auto, calc(var(--noise) * 100%);
  background-image: none, var(--fx-noise);
  background-color: var(--badge-bg);
  --badge-bg: var(--badge-color, var(--color-base-100));
  --badge-fg: var(--color-base-content);
  --size: calc(var(--size-selector, 0.25rem) * 6);
  height: var(--size);
}
.badge.badge-outline {
  --badge-fg: var(--badge-color);
  --badge-bg: #0000;
  background-image: none;
}
.badge.badge-dash {
  --badge-fg: var(--badge-color);
  --badge-bg: #0000;
  border-style: dashed;
  background-image: none;
}
.badge.badge-soft {
  color: var(--badge-color, var(--color-base-content));
  background-color: color-mix( in oklab, var(--badge-color, var(--color-base-content)) 8%, var(--color-base-100) );
  border-color: color-mix( in oklab, var(--badge-color, var(--color-base-content)) 10%, var(--color-base-100) );
  background-image: none;
}
.input {
  cursor: text;
  border: var(--border) solid #0000;
  position: relative;
  display: inline-flex;
  flex-shrink: 1;
  -webkit-appearance: none;
     -moz-appearance: none;
          appearance: none;
  align-items: center;
  gap: calc(0.25rem * 2);
  background-color: var(--color-base-100);
  padding-inline: calc(0.25rem * 3);
  vertical-align: middle;
  white-space: nowrap;
  width: clamp(3rem, 20rem, 100%);
  height: var(--size);
  font-size: 0.875rem;
  border-start-start-radius: var(--join-ss, var(--radius-field));
  border-start-end-radius: var(--join-se, var(--radius-field));
  border-end-start-radius: var(--join-es, var(--radius-field));
  border-end-end-radius: var(--join-ee, var(--radius-field));
  border-color: var(--input-color);
  box-shadow: 0 1px color-mix(in oklab, var(--input-color) calc(var(--depth) * 10%), #0000) inset, 0 -1px oklch(100% 0 0 / calc(var(--depth) * 0.1)) inset;
  --size: calc(var(--size-field, 0.25rem) * 10);
  --input-color: color-mix(in oklab, var(--color-base-content) 20%, #0000);
}
.input:where(input) {
  display: inline-flex;
}
.input :where(input) {
  display: inline-flex;
  height: 100%;
  width: 100%;
  -webkit-appearance: none;
     -moz-appearance: none;
          appearance: none;
  background-color: transparent;
  border: none;
}
.input :where(input):focus, .input :where(input):focus-within {
  --tw-outline-style: none;
  outline-style: none;
}
@media (forced-colors: active) {

  .input :where(input):focus, .input :where(input):focus-within {
    outline: 2px solid transparent;
    outline-offset: 2px;
  }
}
.input :where(input[type="date"]) {
  display: inline-block;
}
.input:focus, .input:focus-within {
  --input-color: var(--color-base-content);
  box-shadow: 0 1px color-mix(in oklab, var(--input-color) calc(var(--depth) * 10%), #0000);
  outline: 2px solid var(--input-color);
  outline-offset: 2px;
  isolation: isolate;
}
.input:has(> input[disabled]), .input:is(:disabled, [disabled]) {
  cursor: not-allowed;
  border-color: var(--color-base-200);
  background-color: var(--color-base-200);
  color: color-mix(in oklab, var(--color-base-content) 40%, transparent);
}
.input:has(> input[disabled])::-moz-placeholder, .input:is(:disabled, [disabled])::-moz-placeholder {
  color: color-mix(in oklab, var(--color-base-content) 20%, transparent);
}
.input:has(> input[disabled])::placeholder, .input:is(:disabled, [disabled])::placeholder {
  color: color-mix(in oklab, var(--color-base-content) 20%, transparent);
}
.input:has(> input[disabled]), .input:is(:disabled, [disabled]) {
  box-shadow: none;
}
.input:has(> input[disabled]) > input[disabled] {
  cursor: not-allowed;
}
.input::-webkit-date-and-time-value {
  text-align: inherit;
}
.input[type="number"]::-webkit-inner-spin-button {
  margin-block: calc(0.25rem * -3);
  margin-inline-end: calc(0.25rem * -3);
}
.input::-webkit-calendar-picker-indicator {
  position: absolute;
  inset-inline-end: 0.75em;
}
.input-sm {
  --size: calc(var(--size-field, 0.25rem) * 8);
  font-size: 0.75rem;
}
.input-sm[type="number"]::-webkit-inner-spin-button {
  margin-block: calc(0.25rem * -2);
  margin-inline-end: calc(0.25rem * -3);
}
.input-md {
  --size: calc(var(--size-field, 0.25rem) * 10);
  font-size: 0.875rem;
}
.input-md[type="number"]::-webkit-inner-spin-button {
  margin-block: calc(0.25rem * -3);
  margin-inline-end: calc(0.25rem * -3);
}
.drawer-content {
  grid-column-start: 2;
  grid-row-start: 1;
  min-width: calc(0.25rem * 0);
}
.drawer-side {
  pointer-events: none;
  visibility: hidden;
  position: fixed;
  inset-inline-start: calc(0.25rem * 0);
  top: calc(0.25rem * 0);
  grid-column-start: 1;
  grid-row-start: 1;
  display: grid;
  width: 100%;
  grid-template-columns: repeat(1, minmax(0, 1fr));
  grid-template-rows: repeat(1, minmax(0, 1fr));
  align-items: flex-start;
  justify-items: start;
  overflow-x: hidden;
  overflow-y: hidden;
  overscroll-behavior: contain;
  opacity: 0%;
  transition: opacity 0.2s ease-out 0.1s allow-discrete, visibility 0.3s ease-out 0.1s allow-discrete;
  height: 100vh;
  height: 100dvh;
}
.drawer-side > .drawer-overlay {
  position: sticky;
  top: calc(0.25rem * 0);
  cursor: pointer;
  place-self: stretch;
  background-color: oklch(0% 0 0 / 40%);
}
.drawer-side > * {
  grid-column-start: 1;
  grid-row-start: 1;
}
.drawer-side > *:not(.drawer-overlay) {
  will-change: transform;
  transition: translate 0.3s ease-out;
  translate: -100%;
}
[dir="rtl"] .drawer-side > *:not(.drawer-overlay) {
  translate: 100%;
}
.drawer-toggle {
  position: fixed;
  height: calc(0.25rem * 0);
  width: calc(0.25rem * 0);
  -webkit-appearance: none;
     -moz-appearance: none;
          appearance: none;
  opacity: 0%;
}
.drawer-toggle:checked ~ .drawer-side {
  pointer-events: auto;
  visibility: visible;
  overflow-y: auto;
  opacity: 100%;
}
.drawer-toggle:checked ~ .drawer-side > *:not(.drawer-overlay) {
  translate: 0%;
}
.drawer-toggle:focus-visible ~ .drawer-content label.drawer-button {
  outline: 2px solid;
  outline-offset: 2px;
}
.drawer-end {
  grid-auto-columns: auto max-content;
}
.drawer-end > .drawer-toggle ~ .drawer-content {
  grid-column-start: 1;
}
.drawer-end > .drawer-toggle ~ .drawer-side {
  grid-column-start: 2;
  justify-items: end;
}
.drawer-end > .drawer-toggle ~ .drawer-side > *:not(.drawer-overlay) {
  translate: 100%;
}
[dir="rtl"] .drawer-end > .drawer-toggle ~ .drawer-side > *:not(.drawer-overlay) {
  translate: -100%;
}
.drawer-end > .drawer-toggle:checked ~ .drawer-side > *:not(.drawer-overlay) {
  translate: 0%;
}
.drawer-open > .drawer-side {
  overflow-y: auto;
}
.drawer-open > .drawer-toggle {
  display: none;
}
.drawer-open > .drawer-toggle ~ .drawer-side {
  pointer-events: auto;
  visibility: visible;
  position: sticky;
  display: block;
  width: auto;
  overscroll-behavior: auto;
  opacity: 100%;
}
.drawer-open > .drawer-toggle ~ .drawer-side > .drawer-overlay {
  cursor: default;
  background-color: transparent;
}
.drawer-open > .drawer-toggle ~ .drawer-side > *:not(.drawer-overlay) {
  translate: 0%;
}
[dir="rtl"] .drawer-open > .drawer-toggle ~ .drawer-side > *:not(.drawer-overlay) {
  translate: 0%;
}
.drawer-open > .drawer-toggle:checked ~ .drawer-side {
  pointer-events: auto;
  visibility: visible;
}
.avatar-group {
  display: flex;
  overflow: hidden;
}
.avatar-group :where(.avatar) {
  overflow: hidden;
  border-radius: calc(infinity * 1px);
  border: 4px solid var(--color-base-100);
}
.avatar {
  position: relative;
  display: inline-flex;
  vertical-align: middle;
}
.avatar > div {
  display: block;
  aspect-ratio: 1 / 1;
  overflow: hidden;
}
.avatar img {
  height: 100%;
  width: 100%;
  -o-object-fit: cover;
     object-fit: cover;
}
.radio {
  position: relative;
  flex-shrink: 0;
  cursor: pointer;
  -webkit-appearance: none;
     -moz-appearance: none;
          appearance: none;
  border-radius: calc(infinity * 1px);
  padding: calc(0.25rem * 1);
  vertical-align: middle;
  border: var(--border) solid var(--input-color, color-mix(in srgb, currentColor 20%, #0000));
  box-shadow: 0 1px oklch(0% 0 0 / calc(var(--depth) * 0.1)) inset;
  --size: calc(var(--size-selector, 0.25rem) * 6);
  width: var(--size);
  height: var(--size);
  color: var(--input-color, currentColor);
}
.radio:before {
  display: block;
  width: 100%;
  height: 100%;
  border-radius: calc(infinity * 1px);
  --tw-content: "";
  content: var(--tw-content);
  background-size: auto, calc(var(--noise) * 100%);
  background-image: none, var(--fx-noise);
}
.radio:focus-visible {
  outline: 2px solid currentColor;
}
.radio:checked, .radio[aria-checked="true"] {
  animation: radio 0.2s ease-out;
  border-color: currentColor;
  background-color: var(--color-base-100);
}
.radio:checked:before, .radio[aria-checked="true"]:before {
  background-color: currentColor;
  box-shadow: 0 -1px oklch(0% 0 0 / calc(var(--depth) * 0.1)) inset, 0 8px 0 -4px oklch(100% 0 0 / calc(var(--depth) * 0.1)) inset, 0 1px oklch(0% 0 0 / calc(var(--depth) * 0.1));
}
@media (forced-colors: active) {

  .radio:checked:before, .radio[aria-checked="true"]:before {
    outline-style: var(--tw-outline-style);
    outline-width: 1px;
    outline-offset: calc(1px * -1);
  }
}
@media print {

  .radio:checked:before, .radio[aria-checked="true"]:before {
    outline: 0.25rem solid;
    outline-offset: -1rem;
  }
}
.radio:disabled {
  cursor: not-allowed;
  opacity: 20%;
}
@keyframes radio {

  0% {
    padding: 5px;
  }

  50% {
    padding: 3px;
  }
}
.label {
  display: inline-flex;
  align-items: center;
  gap: calc(0.25rem * 1.5);
  white-space: nowrap;
  color: color-mix(in oklab, currentColor 60%, transparent);
}
.label:has(input) {
  cursor: pointer;
}
.label:is(.input > *, .select > *) {
  display: flex;
  height: calc(100% - 0.5rem);
  align-items: center;
  padding-inline: calc(0.25rem * 3);
  white-space: nowrap;
  font-size: inherit;
}
.label:is(.input > *, .select > *):first-child {
  margin-inline-start: calc(0.25rem * -3);
  margin-inline-end: calc(0.25rem * 3);
  border-inline-end: var(--border) solid color-mix(in oklab, currentColor 10%, #0000);
}
.label:is(.input > *, .select > *):last-child {
  margin-inline-start: calc(0.25rem * 3);
  margin-inline-end: calc(0.25rem * -3);
  border-inline-start: var(--border) solid color-mix(in oklab, currentColor 10%, #0000);
}
.floating-label:has(.input-sm, .select-sm, .textarea-sm) span {
  font-size: 0.75rem;
  top: calc(var(--size-field, 0.25rem) * 8 / 2);
}
.floating-label:has(.input-md, .select-md, .textarea-md) span {
  font-size: 0.875rem;
  top: calc(var(--size-field, 0.25rem) * 10 / 2);
}
.link {
  cursor: pointer;
  text-decoration-line: underline;
}
.link:focus {
  --tw-outline-style: none;
  outline-style: none;
}
@media (forced-colors: active) {

  .link:focus {
    outline: 2px solid transparent;
    outline-offset: 2px;
  }
}
.link:focus-visible {
  outline: 2px solid currentColor;
  outline-offset: 2px;
}
.card {
  position: relative;
  display: flex;
  flex-direction: column;
  border-radius: var(--radius-box);
  outline-width: 2px;
  transition: outline 0.2s ease-in-out;
  outline: 0 solid #0000;
  outline-offset: 2px;
}
.card:focus {
  --tw-outline-style: none;
  outline-style: none;
}
@media (forced-colors: active) {

  .card:focus {
    outline: 2px solid transparent;
    outline-offset: 2px;
  }
}
.card:focus-visible {
  outline-color: currentColor;
}
.card :where(figure:first-child) {
  overflow: hidden;
  border-start-start-radius: inherit;
  border-start-end-radius: inherit;
  border-end-start-radius: unset;
  border-end-end-radius: unset;
}
.card :where(figure:last-child) {
  overflow: hidden;
  border-start-start-radius: unset;
  border-start-end-radius: unset;
  border-end-start-radius: inherit;
  border-end-end-radius: inherit;
}
.card:where(.card-border) {
  border: var(--border) solid var(--color-base-200);
}
.card:where(.card-dash) {
  border: var(--border) dashed var(--color-base-200);
}
.card.image-full {
  display: grid;
}
.card.image-full > * {
  grid-column-start: 1;
  grid-row-start: 1;
}
.card.image-full > .card-body {
  position: relative;
  color: var(--color-neutral-content);
}
.card.image-full :where(figure) {
  overflow: hidden;
  border-radius: inherit;
}
.card.image-full > figure img {
  height: 100%;
  -o-object-fit: cover;
     object-fit: cover;
  filter: brightness(28%);
}
.card figure {
  display: flex;
  align-items: center;
  justify-content: center;
}
.card:has(> input:is(input[type="checkbox"], input[type="radio"])) {
  cursor: pointer;
  -webkit-user-select: none;
     -moz-user-select: none;
          user-select: none;
}
.card:has(> :checked) {
  outline: 2px solid currentColor;
}
.card-title {
  display: flex;
  align-items: center;
  gap: calc(0.25rem * 2);
  font-size: var(--cardtitle-fs, 1.125rem);
  font-weight: 600;
}
.card-body {
  display: flex;
  flex: auto;
  flex-direction: column;
  gap: calc(0.25rem * 2);
  padding: var(--card-p, 1.5rem);
  font-size: var(--card-fs, 0.875rem);
}
.card-body :where(p) {
  flex-grow: 1;
}
.card-xs .card-body {
  --card-p: 0.5rem;
  --card-fs: 0.6875rem;
}
.card-xs .card-title {
  --cardtitle-fs: 0.875rem;
}
.card-sm .card-body {
  --card-p: 1rem;
  --card-fs: 0.75rem;
}
.card-sm .card-title {
  --cardtitle-fs: 1rem;
}
.card-md .card-body {
  --card-p: 1.5rem;
  --card-fs: 0.875rem;
}
.card-md .card-title {
  --cardtitle-fs: 1.125rem;
}
.card-lg .card-body {
  --card-p: 2rem;
  --card-fs: 1rem;
}
.card-lg .card-title {
  --cardtitle-fs: 1.25rem;
}
.card-xl .card-body {
  --card-p: 2.5rem;
  --card-fs: 1.125rem;
}
.card-xl .card-title {
  --cardtitle-fs: 1.375rem;
}
.status {
  display: inline-block;
  aspect-ratio: 1 / 1;
  width: calc(0.25rem * 2);
  height: calc(0.25rem * 2);
  border-radius: var(--radius-selector);
  background-color: color-mix(in oklab, var(--color-base-content) 20%, transparent);
  background-position: center;
  background-repeat: no-repeat;
  vertical-align: middle;
  color: color-mix(in srgb, #000 30%, transparent);
}
@supports (color: color-mix(in lab, red, red)) {

  .status {
    color: color-mix(in oklab, var(--color-black) 30%, transparent);
  }
}
.status {
  background-image: radial-gradient( circle at 35% 30%, oklch(1 0 0 / calc(var(--depth) * 0.5)), #0000 );
  box-shadow: 0 2px 3px -1px color-mix(in oklab, currentColor calc(var(--depth) * 100%), #0000);
}
.steps {
  display: inline-grid;
  grid-auto-flow: column;
  overflow: hidden;
  overflow-x: auto;
  counter-reset: step;
  grid-auto-columns: 1fr;
}
.steps .step {
  display: grid;
  grid-template-columns: repeat(1, minmax(0, 1fr));
  grid-template-columns: auto;
  grid-template-rows: repeat(2, minmax(0, 1fr));
  grid-template-rows: 40px 1fr;
  place-items: center;
  text-align: center;
  min-width: 4rem;
  --step-bg: var(--color-base-300);
  --step-fg: var(--color-base-content);
}
.steps .step:before {
  top: calc(0.25rem * 0);
  grid-column-start: 1;
  grid-row-start: 1;
  height: calc(0.25rem * 2);
  width: 100%;
  border: 1px solid;
  color: var(--step-bg);
  background-color: var(--step-bg);
  --tw-content: "";
  content: var(--tw-content);
  margin-inline-start: -100%;
}
.steps .step > .step-icon, .steps .step:not(:has(.step-icon)):after {
  content: counter(step);
  counter-increment: step;
  z-index: 1;
  color: var(--step-fg);
  background-color: var(--step-bg);
  border: 1px solid var(--step-bg);
  position: relative;
  grid-column-start: 1;
  grid-row-start: 1;
  display: grid;
  height: calc(0.25rem * 8);
  width: calc(0.25rem * 8);
  place-items: center;
  place-self: center;
  border-radius: calc(infinity * 1px);
}
.steps .step:first-child:before {
  content: none;
}
.steps .step[data-content]:after {
  content: attr(data-content);
}
.steps .step-neutral + .step-neutral:before, .steps .step-neutral:after, .steps .step-neutral > .step-icon {
  --step-bg: var(--color-neutral);
  --step-fg: var(--color-neutral-content);
}
.steps .step-primary + .step-primary:before, .steps .step-primary:after, .steps .step-primary > .step-icon {
  --step-bg: var(--color-primary);
  --step-fg: var(--color-primary-content);
}
.steps .step-secondary + .step-secondary:before, .steps .step-secondary:after, .steps .step-secondary > .step-icon {
  --step-bg: var(--color-secondary);
  --step-fg: var(--color-secondary-content);
}
.steps .step-accent + .step-accent:before, .steps .step-accent:after, .steps .step-accent > .step-icon {
  --step-bg: var(--color-accent);
  --step-fg: var(--color-accent-content);
}
.steps .step-info + .step-info:before, .steps .step-info:after, .steps .step-info > .step-icon {
  --step-bg: var(--color-info);
  --step-fg: var(--color-info-content);
}
.steps .step-success + .step-success:before, .steps .step-success:after, .steps .step-success > .step-icon {
  --step-bg: var(--color-success);
  --step-fg: var(--color-success-content);
}
.steps .step-warning + .step-warning:before, .steps .step-warning:after, .steps .step-warning > .step-icon {
  --step-bg: var(--color-warning);
  --step-fg: var(--color-warning-content);
}
.steps .step-error + .step-error:before, .steps .step-error:after, .steps .step-error > .step-icon {
  --step-bg: var(--color-error);
  --step-fg: var(--color-error-content);
}
.steps-horizontal {
  grid-auto-columns: 1fr;
  display: inline-grid;
  grid-auto-flow: column;
  overflow: hidden;
  overflow-x: auto;
}
.steps-horizontal .step {
  display: grid;
  grid-template-columns: repeat(1, minmax(0, 1fr));
  grid-template-columns: auto;
  grid-template-rows: repeat(2, minmax(0, 1fr));
  grid-template-rows: 40px 1fr;
  place-items: center;
  text-align: center;
  min-width: 4rem;
}
.steps-horizontal .step:before {
  height: calc(0.25rem * 2);
  width: 100%;
  translate: 0;
  content: "";
  margin-inline-start: -100%;
}
[dir="rtl"] .steps-horizontal .step:before {
  translate: 0;
}
.steps-vertical {
  grid-auto-rows: 1fr;
  grid-auto-flow: row;
}
.steps-vertical .step {
  display: grid;
  grid-template-columns: repeat(2, minmax(0, 1fr));
  grid-template-columns: 40px 1fr;
  grid-template-rows: repeat(1, minmax(0, 1fr));
  grid-template-rows: auto;
  gap: 0.5rem;
  min-height: 4rem;
  justify-items: start;
}
.steps-vertical .step:before {
  height: 100%;
  width: calc(0.25rem * 2);
  translate: -50% -50%;
  margin-inline-start: 50%;
}
[dir="rtl"] .steps-vertical .step:before {
  translate: 50% -50%;
}
.tab {
  position: relative;
  display: inline-flex;
  cursor: pointer;
  -webkit-appearance: none;
     -moz-appearance: none;
          appearance: none;
  flex-wrap: wrap;
  align-items: center;
  justify-content: center;
  text-align: center;
  webkit-user-select: none;
  -webkit-user-select: none;
     -moz-user-select: none;
          user-select: none;
}
@media (hover: hover) {

  .tab:hover {
    color: var(--color-base-content);
  }
}
.tab {
  --tab-p: 1rem;
  --tab-bg: var(--color-base-100);
  --tab-border-color: var(--color-base-300);
  --tab-radius-ss: 0;
  --tab-radius-se: 0;
  --tab-radius-es: 0;
  --tab-radius-ee: 0;
  --tab-order: 0;
  --tab-radius-min: calc(0.75rem - var(--border));
  border-color: #0000;
  order: var(--tab-order);
  height: calc(var(--size-field, 0.25rem) * 10);
  font-size: 0.875rem;
  padding-inline-start: var(--tab-p);
  padding-inline-end: var(--tab-p);
}
.tab:is(input[type="radio"]) {
  min-width: -moz-fit-content;
  min-width: fit-content;
}
.tab:is(input[type="radio"]):after {
  content: attr(aria-label);
}
.tab:is(label) {
  position: relative;
}
.tab:is(label) input {
  position: absolute;
  inset: calc(0.25rem * 0);
  cursor: pointer;
  -webkit-appearance: none;
     -moz-appearance: none;
          appearance: none;
  opacity: 0%;
}
.tab:checked + .tab-content, .tab:is(label:has(:checked)) + .tab-content, .tab:is(.tab-active, [aria-selected="true"]) + .tab-content {
  display: block;
  height: 100%;
}
.tab:not(:checked, label:has(:checked), :hover, .tab-active, [aria-selected="true"]) {
  color: color-mix(in oklab, var(--color-base-content) 50%, transparent);
}
.tab:not(input):empty {
  flex-grow: 1;
  cursor: default;
}
.tab:focus {
  --tw-outline-style: none;
  outline-style: none;
}
@media (forced-colors: active) {

  .tab:focus {
    outline: 2px solid transparent;
    outline-offset: 2px;
  }
}
.tab:focus-visible, .tab:is(label:has(:checked:focus-visible)) {
  outline: 2px solid currentColor;
  outline-offset: -5px;
}
.tab[disabled] {
  pointer-events: none;
  opacity: 40%;
}
.tab-disabled {
  pointer-events: none;
  opacity: 40%;
}
.tabs-border .tab {
  --tab-border-color: #0000 #0000 var(--tab-border-color) #0000;
  position: relative;
  border-radius: var(--radius-field);
}
.tabs-border .tab:before {
  --tw-content: "";
  content: var(--tw-content);
  background-color: var(--tab-border-color);
  transition: background-color 0.2s ease;
  width: 80%;
  height: 3px;
  border-radius: var(--radius-field);
  bottom: 0;
  left: 10%;
  position: absolute;
}
.tabs-border .tab:is(.tab-active, [aria-selected="true"]):not(.tab-disabled, [disabled]):before, .tabs-border .tab:is(input:checked):before, .tabs-border .tab:is(label:has(:checked)):before {
  --tab-border-color: currentColor;
  border-top: 3px solid;
}
.tabs-lift {
  --tabs-height: auto;
  --tabs-direction: row;
}
.tabs-lift > .tab {
  --tab-border: 0 0 var(--border) 0;
  --tab-radius-ss: min(var(--radius-field), var(--tab-radius-min));
  --tab-radius-se: min(var(--radius-field), var(--tab-radius-min));
  --tab-radius-es: 0;
  --tab-radius-ee: 0;
  --tab-paddings: var(--border) var(--tab-p) 0 var(--tab-p);
  --tab-border-colors: #0000 #0000 var(--tab-border-color) #0000;
  --tab-corner-width: calc(100% + min(var(--radius-field), var(--tab-radius-min)) * 2);
  --tab-corner-height: min(var(--radius-field), var(--tab-radius-min));
  --tab-corner-position: top left, top right;
  border-width: var(--tab-border);
  border-start-start-radius: var(--tab-radius-ss);
  border-start-end-radius: var(--tab-radius-se);
  border-end-start-radius: var(--tab-radius-es);
  border-end-end-radius: var(--tab-radius-ee);
  padding: var(--tab-paddings);
  border-color: var(--tab-border-colors);
}
.tabs-lift > .tab:is(.tab-active, [aria-selected="true"]):not(.tab-disabled, [disabled]), .tabs-lift > .tab:is(input:checked, label:has(:checked)) {
  --tab-border: var(--border) var(--border) 0 var(--border);
  --tab-border-colors: var(--tab-border-color) var(--tab-border-color) #0000
        var(--tab-border-color);
  --tab-paddings: 0 calc(var(--tab-p) - var(--border)) var(--border)
        calc(var(--tab-p) - var(--border));
  --tab-inset: auto auto 0 auto;
  --tab-grad: calc(69% - var(--border));
  --radius-start: radial-gradient(
        circle at top left,
        #0000 var(--tab-grad),
        var(--tab-border-color) calc(var(--tab-grad) + 0.25px),
        var(--tab-border-color) calc(var(--tab-grad) + var(--border)),
        var(--tab-bg) calc(var(--tab-grad) + var(--border) + 0.25px)
      );
  --radius-end: radial-gradient(
        circle at top right,
        #0000 var(--tab-grad),
        var(--tab-border-color) calc(var(--tab-grad) + 0.25px),
        var(--tab-border-color) calc(var(--tab-grad) + var(--border)),
        var(--tab-bg) calc(var(--tab-grad) + var(--border) + 0.25px)
      );
  background-color: var(--tab-bg);
}
.tabs-lift > .tab:is(.tab-active, [aria-selected="true"]):not(.tab-disabled, [disabled]):before, .tabs-lift > .tab:is(input:checked, label:has(:checked)):before {
  z-index: 1;
  content: "";
  display: block;
  position: absolute;
  width: var(--tab-corner-width);
  height: var(--tab-corner-height);
  background-position: var(--tab-corner-position);
  background-image: var(--radius-start), var(--radius-end);
  background-size: min(var(--radius-field), var(--tab-radius-min)) min(var(--radius-field), var(--tab-radius-min));
  background-repeat: no-repeat;
  inset: var(--tab-inset);
}
.tabs-lift > .tab:is(.tab-active, [aria-selected="true"]):not(.tab-disabled, [disabled]):first-child:before, .tabs-lift > .tab:is(input:checked, label:has(:checked)):first-child:before {
  --radius-start: none;
}
[dir="rtl"] .tabs-lift > .tab:is(.tab-active, [aria-selected="true"]):not(.tab-disabled, [disabled]):first-child:before, [dir="rtl"] .tabs-lift > .tab:is(input:checked, label:has(:checked)):first-child:before {
  transform: rotateY(180deg);
}
.tabs-lift > .tab:is(.tab-active, [aria-selected="true"]):not(.tab-disabled, [disabled]):last-child:before, .tabs-lift > .tab:is(input:checked, label:has(:checked)):last-child:before {
  --radius-end: none;
}
[dir="rtl"] .tabs-lift > .tab:is(.tab-active, [aria-selected="true"]):not(.tab-disabled, [disabled]):last-child:before, [dir="rtl"] .tabs-lift > .tab:is(input:checked, label:has(:checked)):last-child:before {
  transform: rotateY(180deg);
}
.tabs-lift:has(.tab-content) > .tab:first-child:not(.tab-active, [aria-selected="true"]) {
  --tab-border-colors: var(--tab-border-color) var(--tab-border-color) #0000
          var(--tab-border-color);
}
.tabs-lift .tab-content {
  --tabcontent-margin: calc(-1 * var(--border)) 0 0 0;
  --tabcontent-radius-ss: 0;
  --tabcontent-radius-se: var(--radius-box);
  --tabcontent-radius-es: var(--radius-box);
  --tabcontent-radius-ee: var(--radius-box);
}
.tabs-lift :checked + .tab-content:nth-child(1), .tabs-lift :checked + .tab-content:nth-child(n + 3), .tabs-lift label:has(:checked) + .tab-content:nth-child(1), .tabs-lift label:has(:checked) + .tab-content:nth-child(n + 3), .tabs-lift :is(.tab-active, [aria-selected="true"]) + .tab-content:nth-child(1), .tabs-lift :is(.tab-active, [aria-selected="true"]) + .tab-content:nth-child(n + 3) {
  --tabcontent-radius-ss: var(--radius-box);
}
.tabs-top {
  --tabs-height: auto;
  --tabs-direction: row;
}
.tabs-top .tab {
  --tab-order: 0;
  --tab-border: 0 0 var(--border) 0;
  --tab-radius-ss: min(var(--radius-field), var(--tab-radius-min));
  --tab-radius-se: min(var(--radius-field), var(--tab-radius-min));
  --tab-radius-es: 0;
  --tab-radius-ee: 0;
  --tab-paddings: var(--border) var(--tab-p) 0 var(--tab-p);
  --tab-border-colors: #0000 #0000 var(--tab-border-color) #0000;
  --tab-corner-width: calc(100% + min(var(--radius-field), var(--tab-radius-min)) * 2);
  --tab-corner-height: min(var(--radius-field), var(--tab-radius-min));
  --tab-corner-position: top left, top right;
}
.tabs-top .tab:is(.tab-active, [aria-selected="true"]):not(.tab-disabled, [disabled]), .tabs-top .tab:is(input:checked), .tabs-top .tab:is(label:has(:checked)) {
  --tab-border: var(--border) var(--border) 0 var(--border);
  --tab-border-colors: var(--tab-border-color) var(--tab-border-color) #0000
        var(--tab-border-color);
  --tab-paddings: 0 calc(var(--tab-p) - var(--border)) var(--border)
        calc(var(--tab-p) - var(--border));
  --tab-inset: auto auto 0 auto;
  --radius-start: radial-gradient(
        circle at top left,
        #0000 var(--tab-grad),
        var(--tab-border-color) calc(var(--tab-grad) + 0.25px),
        var(--tab-border-color) calc(var(--tab-grad) + var(--border)),
        var(--tab-bg) calc(var(--tab-grad) + var(--border) + 0.25px)
      );
  --radius-end: radial-gradient(
        circle at top right,
        #0000 var(--tab-grad),
        var(--tab-border-color) calc(var(--tab-grad) + 0.25px),
        var(--tab-border-color) calc(var(--tab-grad) + var(--border)),
        var(--tab-bg) calc(var(--tab-grad) + var(--border) + 0.25px)
      );
}
.tabs-top:has(.tab-content) > .tab:first-child:not(.tab-active, [aria-selected="true"]) {
  --tab-border-colors: var(--tab-border-color) var(--tab-border-color) #0000
          var(--tab-border-color);
}
.tabs-top .tab-content {
  --tabcontent-order: 1;
  --tabcontent-margin: calc(-1 * var(--border)) 0 0 0;
  --tabcontent-radius-ss: 0;
  --tabcontent-radius-se: var(--radius-box);
  --tabcontent-radius-es: var(--radius-box);
  --tabcontent-radius-ee: var(--radius-box);
}
.tabs-top :checked + .tab-content:nth-child(1), .tabs-top :checked + .tab-content:nth-child(n + 3), .tabs-top label:has(:checked) + .tab-content:nth-child(1), .tabs-top label:has(:checked) + .tab-content:nth-child(n + 3), .tabs-top :is(.tab-active, [aria-selected="true"]) + .tab-content:nth-child(1), .tabs-top :is(.tab-active, [aria-selected="true"]) + .tab-content:nth-child(n + 3) {
  --tabcontent-radius-ss: var(--radius-box);
}
.tabs-bottom {
  --tabs-height: auto;
  --tabs-direction: row;
}
.tabs-bottom .tab {
  --tab-order: 1;
  --tab-border: var(--border) 0 0 0;
  --tab-radius-ss: 0;
  --tab-radius-se: 0;
  --tab-radius-es: min(var(--radius-field), var(--tab-radius-min));
  --tab-radius-ee: min(var(--radius-field), var(--tab-radius-min));
  --tab-border-colors: var(--tab-border-color) #0000 #0000 #0000;
  --tab-paddings: 0 var(--tab-p) var(--border) var(--tab-p);
  --tab-corner-width: calc(100% + min(var(--radius-field), var(--tab-radius-min)) * 2);
  --tab-corner-height: min(var(--radius-field), var(--tab-radius-min));
  --tab-corner-position: top left, top right;
}
.tabs-bottom .tab:is(.tab-active, [aria-selected="true"]):not(.tab-disabled, [disabled]), .tabs-bottom .tab:is(input:checked), .tabs-bottom .tab:is(label:has(:checked)) {
  --tab-border: 0 var(--border) var(--border) var(--border);
  --tab-border-colors: #0000 var(--tab-border-color) var(--tab-border-color)
        var(--tab-border-color);
  --tab-paddings: var(--border) calc(var(--tab-p) - var(--border)) 0
        calc(var(--tab-p) - var(--border));
  --tab-inset: 0 auto auto auto;
  --radius-start: radial-gradient(
        circle at bottom left,
        #0000 var(--tab-grad),
        var(--tab-border-color) calc(var(--tab-grad) + 0.25px),
        var(--tab-border-color) calc(var(--tab-grad) + var(--border)),
        var(--tab-bg) calc(var(--tab-grad) + var(--border) + 0.25px)
      );
  --radius-end: radial-gradient(
        circle at bottom right,
        #0000 var(--tab-grad),
        var(--tab-border-color) calc(var(--tab-grad) + 0.25px),
        var(--tab-border-color) calc(var(--tab-grad) + var(--border)),
        var(--tab-bg) calc(var(--tab-grad) + var(--border) + 0.25px)
      );
}
.tabs-bottom:has(.tab-content) > .tab:first-child:not(.tab-active, [aria-selected="true"]) {
  --tab-border-colors: #0000 var(--tab-border-color) var(--tab-border-color)
          var(--tab-border-color);
}
.tabs-bottom .tab-content {
  --tabcontent-order: 0;
  --tabcontent-margin: 0 0 calc(-1 * var(--border)) 0;
  --tabcontent-radius-ss: var(--radius-box);
  --tabcontent-radius-se: var(--radius-box);
  --tabcontent-radius-es: 0;
  --tabcontent-radius-ee: var(--radius-box);
}
.tabs-bottom :checked + .tab-content:not(:nth-child(2)), .tabs-bottom :is(label:has(:checked)) + .tab-content:not(:nth-child(2)), .tabs-bottom :is(.tab-active, [aria-selected="true"]) + .tab-content:not(:nth-child(2)) {
  --tabcontent-radius-es: var(--radius-box);
}
.tabs-box {
  background-color: var(--color-base-200);
  padding: calc(0.25rem * 1);
  border-radius: calc( var(--radius-field) + min(0.25rem, calc(var(--radius-field) + var(--radius-field) + var(--radius-field))) );
  box-shadow: 0 -0.5px oklch(100% 0 0 / calc(var(--depth) * 0.1)) inset, 0 0.5px oklch(0% 0 0 / calc(var(--depth) * 0.05)) inset;
}
.tabs-box .tab {
  border-radius: var(--radius-field);
  border-style: none;
}
.tabs-box .tab:focus-visible, .tabs-box .tab:is(label:has(:checked:focus-visible)) {
  outline-offset: 2px;
}
.tabs-box :is(.tab-active, [aria-selected="true"]):not(.tab-disabled, [disabled]), .tabs-box :is(input:checked), .tabs-box :is(label:has(:checked)) {
  background-color: var(--tab-bg, var(--color-base-100));
  box-shadow: 0 1px oklch(100% 0 0 / calc(var(--depth) * 0.1)) inset, 0 1px 1px -1px color-mix(in oklab, var(--color-neutral) calc(var(--depth) * 50%), #0000), 0 1px 6px -4px color-mix(in oklab, var(--color-neutral) calc(var(--depth) * 100%), #0000);
}
@media (forced-colors: active) {

  .tabs-box :is(.tab-active, [aria-selected="true"]):not(.tab-disabled, [disabled]), .tabs-box :is(input:checked), .tabs-box :is(label:has(:checked)) {
    border: 1px solid;
  }
}
.tab-content {
  order: 1;
  order: var(--tabcontent-order);
  display: none;
  border-color: transparent;
  --tabcontent-radius-ss: 0;
  --tabcontent-radius-se: 0;
  --tabcontent-radius-es: 0;
  --tabcontent-radius-ee: 0;
  --tabcontent-order: 1;
  width: 100%;
  margin: var(--tabcontent-margin);
  border-width: var(--border);
  border-start-start-radius: var(--tabcontent-radius-ss);
  border-start-end-radius: var(--tabcontent-radius-se);
  border-end-start-radius: var(--tabcontent-radius-es);
  border-end-end-radius: var(--tabcontent-radius-ee);
}
.tabs-xs :where(.tab) {
  height: calc(var(--size-field, 0.25rem) * 6);
  font-size: 0.75rem;
  --tab-p: 0.375rem;
  --tab-radius-min: calc(0.5rem - var(--border));
}
.tabs-sm :where(.tab) {
  height: calc(var(--size-field, 0.25rem) * 8);
  font-size: 0.875rem;
  --tab-p: 0.5rem;
  --tab-radius-min: calc(0.5rem - var(--border));
}
.tabs-md :where(.tab) {
  height: calc(var(--size-field, 0.25rem) * 10);
  font-size: 0.875rem;
  --tab-p: 0.75rem;
  --tab-radius-min: calc(0.75rem - var(--border));
}
.tabs-lg :where(.tab) {
  height: calc(var(--size-field, 0.25rem) * 12);
  font-size: 1.125rem;
  --tab-p: 1rem;
  --tab-radius-min: calc(1.5rem - var(--border));
}
.tabs-xl :where(.tab) {
  height: calc(var(--size-field, 0.25rem) * 14);
  font-size: 1.125rem;
  --tab-p: 1.25rem;
  --tab-radius-min: calc(2rem - var(--border));
}
.dropdown {
  position: relative;
  display: inline-block;
  position-area: var(--anchor-v, bottom) var(--anchor-h, span-right);
}
.dropdown > *:not(summary):focus {
  --tw-outline-style: none;
  outline-style: none;
}
@media (forced-colors: active) {

  .dropdown > *:not(summary):focus {
    outline: 2px solid transparent;
    outline-offset: 2px;
  }
}
.dropdown .dropdown-content {
  position: absolute;
}
.dropdown:not(details, .dropdown-open, .dropdown-hover:hover, :focus-within) .dropdown-content {
  display: none;
  transform-origin: top;
  opacity: 0%;
  scale: 95%;
}
.dropdown[popover], .dropdown .dropdown-content {
  z-index: 999;
  animation: dropdown 0.2s;
  transition-property: opacity, scale, display;
  transition-behavior: allow-discrete;
  transition-duration: 0.2s;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
}
.dropdown {

  @starting-style {

    &[popover], .dropdown-content {
      scale: 95%;
      opacity: 0;
    }
  }
}
.dropdown.dropdown-open > [tabindex]:first-child, .dropdown:not(.dropdown-hover):focus > [tabindex]:first-child, .dropdown:focus-within > [tabindex]:first-child {
  pointer-events: none;
}
.dropdown.dropdown-open .dropdown-content, .dropdown:not(.dropdown-hover):focus .dropdown-content, .dropdown:focus-within .dropdown-content {
  opacity: 100%;
}
.dropdown.dropdown-hover:hover .dropdown-content {
  opacity: 100%;
  scale: 100%;
}
.dropdown:is(details) summary::-webkit-details-marker {
  display: none;
}
.dropdown.dropdown-open .dropdown-content, .dropdown:focus .dropdown-content, .dropdown:focus-within .dropdown-content {
  scale: 100%;
}
.dropdown:where([popover]) {
  background: #0000;
}
.dropdown[popover] {
  position: fixed;
  color: inherit;
}
@supports not (position-area: bottom) {

  .dropdown[popover] {
    margin: auto;
  }

  .dropdown[popover].dropdown-open:not(:popover-open) {
    display: none;
    transform-origin: top;
    opacity: 0%;
    scale: 95%;
  }

  .dropdown[popover]::backdrop {
    background-color: color-mix(in oklab, #000 30%, #0000);
  }
}
.dropdown[popover]:not(.dropdown-open, :popover-open) {
  display: none;
  transform-origin: top;
  opacity: 0%;
  scale: 95%;
}
.dropdown-start {
  --anchor-h: span-right;
}
.dropdown-start :where(.dropdown-content) {
  inset-inline-end: auto;
}
.dropdown-start.dropdown-left {
  --anchor-h: left;
  --anchor-v: span-bottom;
}
.dropdown-start.dropdown-left .dropdown-content {
  top: calc(0.25rem * 0);
  bottom: auto;
}
.dropdown-start.dropdown-right {
  --anchor-h: right;
  --anchor-v: span-bottom;
}
.dropdown-start.dropdown-right .dropdown-content {
  top: calc(0.25rem * 0);
  bottom: auto;
}
.dropdown-center {
  --anchor-h: center;
}
.dropdown-center :where(.dropdown-content) {
  inset-inline-end: calc(1/2 * 100%);
  translate: 50% 0;
}
.dropdown-center.dropdown-left {
  --anchor-h: left;
  --anchor-v: center;
}
.dropdown-center.dropdown-left .dropdown-content {
  top: auto;
  bottom: calc(1/2 * 100%);
  translate: 0 50%;
}
.dropdown-center.dropdown-right {
  --anchor-h: right;
  --anchor-v: center;
}
.dropdown-center.dropdown-right .dropdown-content {
  top: auto;
  bottom: calc(1/2 * 100%);
  translate: 0 50%;
}
.dropdown-end {
  --anchor-h: span-left;
}
.dropdown-end :where(.dropdown-content) {
  inset-inline-end: calc(0.25rem * 0);
  translate: 0 0;
}
.dropdown-end.dropdown-left {
  --anchor-h: left;
  --anchor-v: span-top;
}
.dropdown-end.dropdown-left .dropdown-content {
  top: auto;
  bottom: calc(0.25rem * 0);
}
.dropdown-end.dropdown-right {
  --anchor-h: right;
  --anchor-v: span-top;
}
.dropdown-end.dropdown-right .dropdown-content {
  top: auto;
  bottom: calc(0.25rem * 0);
}
.dropdown-left {
  --anchor-h: left;
  --anchor-v: span-bottom;
}
.dropdown-left .dropdown-content {
  inset-inline-end: 100%;
  top: calc(0.25rem * 0);
  bottom: auto;
  transform-origin: right;
}
.dropdown-right {
  --anchor-h: right;
  --anchor-v: span-bottom;
}
.dropdown-right .dropdown-content {
  inset-inline-start: 100%;
  top: calc(0.25rem * 0);
  bottom: auto;
  transform-origin: left;
}
.dropdown-bottom {
  --anchor-v: bottom;
}
.dropdown-bottom .dropdown-content {
  top: 100%;
  bottom: auto;
  transform-origin: top;
}
.dropdown-top {
  --anchor-v: top;
}
.dropdown-top .dropdown-content {
  top: auto;
  bottom: 100%;
  transform-origin: bottom;
}
@keyframes dropdown {

  0% {
    opacity: 0;
  }
}
.list {
  display: flex;
  flex-direction: column;
  font-size: 0.875rem;
}
.list :where(.list-row) {
  --list-grid-cols: minmax(0, auto) 1fr;
  position: relative;
  display: grid;
  grid-auto-flow: column;
  gap: calc(0.25rem * 4);
  border-radius: var(--radius-box);
  padding: calc(0.25rem * 4);
  word-break: break-word;
  grid-template-columns: var(--list-grid-cols);
}
.list :where(.list-row):has(.list-col-grow:nth-child(1)) {
  --list-grid-cols: 1fr;
}
.list :where(.list-row):has(.list-col-grow:nth-child(2)) {
  --list-grid-cols: minmax(0, auto) 1fr;
}
.list :where(.list-row):has(.list-col-grow:nth-child(3)) {
  --list-grid-cols: minmax(0, auto) minmax(0, auto) 1fr;
}
.list :where(.list-row):has(.list-col-grow:nth-child(4)) {
  --list-grid-cols: minmax(0, auto) minmax(0, auto) minmax(0, auto) 1fr;
}
.list :where(.list-row):has(.list-col-grow:nth-child(5)) {
  --list-grid-cols: minmax(0, auto) minmax(0, auto) minmax(0, auto) minmax(0, auto) 1fr;
}
.list :where(.list-row):has(.list-col-grow:nth-child(6)) {
  --list-grid-cols: minmax(0, auto) minmax(0, auto) minmax(0, auto) minmax(0, auto)
        minmax(0, auto) 1fr;
}
.list :where(.list-row) :not(.list-col-wrap) {
  grid-row-start: 1;
}
.list > :not(:last-child).list-row:after, .list > :not(:last-child) .list-row:after {
  content: "";
  border-bottom: var(--border) solid;
  inset-inline: var(--radius-box);
  position: absolute;
  bottom: calc(0.25rem * 0);
  border-color: color-mix(in oklab, var(--color-base-content) 5%, transparent);
}
.list-col-wrap {
  grid-row-start: 2;
}
.table {
  font-size: 0.875rem;
  position: relative;
  width: 100%;
  border-radius: var(--radius-box);
  text-align: left;
}
.table:where(:dir(rtl), [dir="rtl"], [dir="rtl"] *) {
  text-align: right;
}
@media (hover: hover) {

  .table tr.row-hover:hover, .table tr.row-hover:nth-child(even):hover {
    background-color: var(--color-base-200);
  }
}
.table :where(th, td) {
  padding-inline: calc(0.25rem * 4);
  padding-block: calc(0.25rem * 3);
  vertical-align: middle;
}
.table :where(thead, tfoot) {
  white-space: nowrap;
  color: color-mix(in oklab, var(--color-base-content) 60%, transparent);
  font-size: 0.875rem;
  font-weight: 600;
}
.table :where(tfoot) {
  border-top: var(--border) solid color-mix(in oklch, var(--color-base-content) 5%, #0000);
}
.table :where(.table-pin-rows thead tr) {
  position: sticky;
  top: calc(0.25rem * 0);
  z-index: 1;
  background-color: var(--color-base-100);
}
.table :where(.table-pin-rows tfoot tr) {
  position: sticky;
  bottom: calc(0.25rem * 0);
  z-index: 1;
  background-color: var(--color-base-100);
}
.table :where(.table-pin-cols tr th) {
  position: sticky;
  right: calc(0.25rem * 0);
  left: calc(0.25rem * 0);
  background-color: var(--color-base-100);
}
.table :where(thead tr, tbody tr:not(:last-child)) {
  border-bottom: var(--border) solid color-mix(in oklch, var(--color-base-content) 5%, #0000);
}
.table-zebra tbody tr:nth-child(even) {
  background-color: var(--color-base-200);
}
.table-zebra tbody tr:nth-child(even) :where(.table-pin-cols tr th) {
  background-color: var(--color-base-200);
}
@media (hover: hover) {

  .table-zebra tbody tr.row-hover:hover, .table-zebra tbody tr.row-hover:nth-child(even):hover {
    background-color: var(--color-base-300);
  }
}
.table-xs :not(thead, tfoot) tr {
  font-size: 0.6875rem;
}
.table-xs :where(th, td) {
  padding-inline: calc(0.25rem * 2);
  padding-block: calc(0.25rem * 1);
}
.collapse:not(td, tr, colgroup) {
  visibility: visible;
}
.collapse {
  position: relative;
  display: grid;
  overflow: hidden;
  border-radius: var(--radius-box, 1rem);
  width: 100%;
  grid-template-rows: max-content 0fr;
  transition: grid-template-rows 0.2s;
}
.collapse > input:is([type="checkbox"], [type="radio"]) {
  grid-column-start: 1;
  grid-row-start: 1;
  -webkit-appearance: none;
     -moz-appearance: none;
          appearance: none;
  opacity: 0;
  z-index: 1;
  width: 100%;
  padding: 1rem;
  padding-inline-end: 3rem;
  min-height: 3.75rem;
  transition: background-color 0.2s ease-out;
}
.collapse:is([open], :focus:not(.collapse-close)), .collapse:not(.collapse-close):has(> input:is([type="checkbox"], [type="radio"]):checked) {
  grid-template-rows: max-content 1fr;
}
.collapse:is([open], :focus:not(.collapse-close)) > .collapse-content, .collapse:not(.collapse-close) > :where(input:is([type="checkbox"], [type="radio"]):checked ~ .collapse-content) {
  visibility: visible;
  min-height: -moz-fit-content;
  min-height: fit-content;
}
.collapse:focus-visible, .collapse:has(> input:is([type="checkbox"], [type="radio"]):focus-visible) {
  outline-color: var(--color-base-content);
  outline-style: solid;
  outline-width: 2px;
  outline-offset: 2px;
}
.collapse:not(.collapse-close) > input[type="checkbox"], .collapse:not(.collapse-close) > input[type="radio"]:not(:checked), .collapse:not(.collapse-close) > .collapse-title {
  cursor: pointer;
}
.collapse:focus:not(.collapse-close, .collapse[open]) > .collapse-title {
  cursor: unset;
}
.collapse:is([open], :focus:not(.collapse-close)) > :where(.collapse-content), .collapse:not(.collapse-close) > :where(input:is([type="checkbox"], [type="radio"]):checked ~ .collapse-content) {
  padding-bottom: 1rem;
  transition: padding 0.2s ease-out, background-color 0.2s ease-out;
}
.collapse:is([open]).collapse-arrow > .collapse-title:after {
  transform: translateY(-50%) rotate(225deg);
}
.collapse.collapse-open.collapse-arrow > .collapse-title:after {
  transform: translateY(-50%) rotate(225deg);
}
.collapse.collapse-open.collapse-plus > .collapse-title:after {
  content: "−";
}
.collapse.collapse-arrow:focus:not(.collapse-close) > .collapse-title:after {
  transform: translateY(-50%) rotate(225deg);
}
.collapse.collapse-arrow:not(.collapse-close) > input:is([type="checkbox"], [type="radio"]):checked ~ .collapse-title:after {
  transform: translateY(-50%) rotate(225deg);
}
.collapse[open].collapse-plus > .collapse-title:after {
  content: "−";
}
.collapse.collapse-plus:focus:not(.collapse-close) > .collapse-title:after {
  content: "−";
}
.collapse.collapse-plus:not(.collapse-close) > input:is([type="checkbox"], [type="radio"]):checked ~ .collapse-title:after {
  content: "−";
}
.collapse-title, .collapse-content {
  grid-column-start: 1;
  grid-row-start: 1;
}
.collapse-content {
  visibility: hidden;
  grid-column-start: 1;
  grid-row-start: 2;
  min-height: 0;
  transition: visibility 0.2s;
  transition: padding 0.2s ease-out, background-color 0.2s ease-out;
  padding-left: 1rem;
  padding-right: 1rem;
  cursor: unset;
}
.collapse:is(details) {
  width: 100%;
}
.collapse:is(details) summary {
  position: relative;
  display: block;
}
.collapse:is(details) summary::-webkit-details-marker {
  display: none;
}
.collapse:is(details) summary {
  outline: none;
}
.collapse-arrow > .collapse-title:after {
  position: absolute;
  display: block;
  height: 0.5rem;
  width: 0.5rem;
  transform: translateY(-100%) rotate(45deg);
  transition-property: all;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 0.2s;
  top: 1.9rem;
  inset-inline-end: 1.4rem;
  content: "";
  transform-origin: 75% 75%;
  box-shadow: 2px 2px;
  pointer-events: none;
}
.collapse-plus > .collapse-title:after {
  position: absolute;
  display: block;
  height: 0.5rem;
  width: 0.5rem;
  transition-property: all;
  transition-duration: 300ms;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  top: 0.9rem;
  inset-inline-end: 1.4rem;
  content: "+";
  pointer-events: none;
}
.collapse-title {
  position: relative;
  width: 100%;
  padding: 1rem;
  padding-inline-end: 3rem;
  min-height: 3.75rem;
  transition: background-color 0.2s ease-out;
}
.collapse-open {
  grid-template-rows: max-content 1fr;
}
.collapse-open > .collapse-content {
  visibility: visible;
  min-height: -moz-fit-content;
  min-height: fit-content;
  padding-bottom: 1rem;
  transition: padding 0.2sease-out, background-color 0.2sease-out;
}
.checkbox {
  border: var(--border) solid var(--input-color, color-mix(in oklab, var(--color-base-content) 20%, #0000));
  position: relative;
  flex-shrink: 0;
  cursor: pointer;
  -webkit-appearance: none;
     -moz-appearance: none;
          appearance: none;
  border-radius: var(--radius-selector);
  padding: calc(0.25rem * 1);
  vertical-align: middle;
  color: var(--color-base-content);
  box-shadow: 0 1px oklch(0% 0 0 / calc(var(--depth) * 0.1)) inset, 0 0 #0000 inset, 0 0 #0000;
  transition: background-color 0.2s, box-shadow 0.2s;
  --size: calc(var(--size-selector, 0.25rem) * 6);
  width: var(--size);
  height: var(--size);
  background-size: auto, calc(var(--noise) * 100%);
  background-image: none, var(--fx-noise);
}
.checkbox:before {
  --tw-content: "";
  content: var(--tw-content);
  display: block;
  width: 100%;
  height: 100%;
  rotate: 45deg;
  background-color: currentColor;
  opacity: 0%;
  transition: clip-path 0.3s, opacity 0.1s, rotate 0.3s, translate 0.3s;
  transition-delay: 0.1s;
  clip-path: polygon(20% 100%, 20% 80%, 50% 80%, 50% 80%, 70% 80%, 70% 100%);
  box-shadow: 0px 3px 0 0px oklch(100% 0 0 / calc(var(--depth) * 0.1)) inset;
  font-size: 1rem;
  line-height: 0.75;
}
.checkbox:focus-visible {
  outline: 2px solid var(--input-color, currentColor);
  outline-offset: 2px;
}
.checkbox:checked, .checkbox[aria-checked="true"] {
  background-color: var(--input-color, #0000);
  box-shadow: 0 0 #0000 inset, 0 8px 0 -4px oklch(100% 0 0 / calc(var(--depth) * 0.1)) inset, 0 1px oklch(0% 0 0 / calc(var(--depth) * 0.1));
}
.checkbox:checked:before, .checkbox[aria-checked="true"]:before {
  clip-path: polygon(20% 100%, 20% 80%, 50% 80%, 50% 0%, 70% 0%, 70% 100%);
  opacity: 100%;
}
@media (forced-colors: active) {

  .checkbox:checked:before, .checkbox[aria-checked="true"]:before {
    rotate: 0deg;
    background-color: transparent;
    --tw-content: "✔︎";
    clip-path: none;
  }
}
@media print {

  .checkbox:checked:before, .checkbox[aria-checked="true"]:before {
    rotate: 0deg;
    background-color: transparent;
    --tw-content: "✔︎";
    clip-path: none;
  }
}
.checkbox:indeterminate:before {
  rotate: 0deg;
  opacity: 100%;
  translate: 0 -35%;
  clip-path: polygon(20% 100%, 20% 80%, 50% 80%, 50% 80%, 80% 80%, 80% 100%);
}
.checkbox:disabled {
  cursor: not-allowed;
  opacity: 20%;
}
.rating {
  position: relative;
  display: inline-flex;
  vertical-align: middle;
}
.rating input {
  border: none;
  -webkit-appearance: none;
     -moz-appearance: none;
          appearance: none;
}
.rating :where(*) {
  animation: rating 0.25s ease-out;
  height: calc(0.25rem * 6);
  width: calc(0.25rem * 6);
  border-radius: 0;
  background-color: var(--color-base-content);
  opacity: 20%;
}
.rating :where(*):is(input) {
  cursor: pointer;
}
.rating .rating-hidden {
  width: calc(0.25rem * 2);
  background-color: transparent;
}
.rating input[type="radio"]:checked {
  background-image: none;
}
.rating *:checked, .rating *[aria-checked="true"], .rating *[aria-current="true"], .rating *:has(~ *:checked, ~ *[aria-checked="true"], ~ *[aria-current="true"]) {
  opacity: 100%;
}
.rating *:focus-visible {
  transition: scale 0.2s ease-out;
  scale: 1.1;
}
.rating *:active:focus {
  animation: none;
  scale: 1.1;
}
.rating.rating-xs :where(*:not(.rating-hidden)) {
  width: calc(0.25rem * 4);
  height: calc(0.25rem * 4);
}
.rating.rating-sm :where(*:not(.rating-hidden)) {
  width: calc(0.25rem * 5);
  height: calc(0.25rem * 5);
}
.rating.rating-md :where(*:not(.rating-hidden)) {
  width: calc(0.25rem * 6);
  height: calc(0.25rem * 6);
}
.rating.rating-lg :where(*:not(.rating-hidden)) {
  width: calc(0.25rem * 7);
  height: calc(0.25rem * 7);
}
.rating.rating-xl :where(*:not(.rating-hidden)) {
  width: calc(0.25rem * 8);
  height: calc(0.25rem * 8);
}
.rating-half :where(*:not(.rating-hidden)) {
  width: calc(0.25rem * 3);
}
.rating-half.rating-xs *:not(.rating-hidden) {
  width: calc(0.25rem * 2);
}
.rating-half.rating-sm *:not(.rating-hidden) {
  width: calc(0.25rem * 2.5);
}
.rating-half.rating-md *:not(.rating-hidden) {
  width: calc(0.25rem * 3);
}
.rating-half.rating-lg *:not(.rating-hidden) {
  width: .875rem;
}
.rating-half.rating-xl *:not(.rating-hidden) {
  width: calc(0.25rem * 4);
}
@keyframes rating {

  0%, 40% {
    scale: 1.1;
    filter: brightness(1.05) contrast(1.05);
  }
}
.toggle {
  border: var(--border) solid currentColor;
  color: var(--input-color);
  position: relative;
  display: inline-grid;
  flex-shrink: 0;
  cursor: pointer;
  -webkit-appearance: none;
     -moz-appearance: none;
          appearance: none;
  place-content: center;
  vertical-align: middle;
  webkit-user-select: none;
  -webkit-user-select: none;
     -moz-user-select: none;
          user-select: none;
  grid-template-columns: 0fr 1fr 1fr;
  --radius-selector-max: calc(
    var(--radius-selector) + var(--radius-selector) + var(--radius-selector)
  );
  border-radius: calc( var(--radius-selector) + min(var(--toggle-p), var(--radius-selector-max)) + min(var(--border), var(--radius-selector-max)) );
  padding: var(--toggle-p);
  box-shadow: 0 1px color-mix(in oklab, currentColor calc(var(--depth) * 10%), #0000) inset;
  transition: color 0.3s, grid-template-columns 0.2s;
  --input-color: color-mix(in oklab, var(--color-base-content) 50%, #0000);
  --toggle-p: 0.1875rem;
  --size: calc(var(--size-selector, 0.25rem) * 6);
  width: calc((var(--size) * 2) - (var(--border) + var(--toggle-p)) * 2);
  height: var(--size);
}
.toggle > * {
  z-index: 1;
  grid-column: span 1 / span 1;
  grid-column-start: 2;
  grid-row-start: 1;
  height: 100%;
  cursor: pointer;
  -webkit-appearance: none;
     -moz-appearance: none;
          appearance: none;
  background-color: transparent;
  padding: calc(0.25rem * 0.5);
  transition: opacity 0.2s, rotate 0.4s;
  border: none;
}
.toggle > *:focus {
  --tw-outline-style: none;
  outline-style: none;
}
@media (forced-colors: active) {

  .toggle > *:focus {
    outline: 2px solid transparent;
    outline-offset: 2px;
  }
}
.toggle > *:nth-child(2) {
  color: var(--color-base-100);
  rotate: 0deg;
}
.toggle > *:nth-child(3) {
  color: var(--color-base-100);
  opacity: 0%;
  rotate: -15deg;
}
.toggle:has(:checked) > :nth-child(2) {
  opacity: 0%;
  rotate: 15deg;
}
.toggle:has(:checked) > :nth-child(3) {
  opacity: 100%;
  rotate: 0deg;
}
.toggle:before {
  position: relative;
  inset-inline-start: calc(0.25rem * 0);
  grid-column-start: 2;
  grid-row-start: 1;
  aspect-ratio: 1 / 1;
  height: 100%;
  border-radius: var(--radius-selector);
  background-color: currentColor;
  translate: 0;
  --tw-content: "";
  content: var(--tw-content);
  transition: background-color 0.1s, translate 0.2s, inset-inline-start 0.2s;
  box-shadow: 0 -1px oklch(0% 0 0 / calc(var(--depth) * 0.1)) inset, 0 8px 0 -4px oklch(100% 0 0 / calc(var(--depth) * 0.1)) inset, 0 1px color-mix(in oklab, currentColor calc(var(--depth) * 10%), #0000);
  background-size: auto, calc(var(--noise) * 100%);
  background-image: none, var(--fx-noise);
}
@media (forced-colors: active) {

  .toggle:before {
    outline-style: var(--tw-outline-style);
    outline-width: 1px;
    outline-offset: calc(1px * -1);
  }
}
@media print {

  .toggle:before {
    outline: 0.25rem solid;
    outline-offset: -1rem;
  }
}
.toggle:focus-visible, .toggle:has(:focus-visible) {
  outline: 2px solid currentColor;
  outline-offset: 2px;
}
.toggle:checked, .toggle[aria-checked="true"], .toggle:has(> input:checked) {
  grid-template-columns: 1fr 1fr 0fr;
  background-color: var(--color-base-100);
  --input-color: var(--color-base-content);
}
.toggle:checked:before, .toggle[aria-checked="true"]:before, .toggle:has(> input:checked):before {
  background-color: currentColor;
}
.toggle:checked, .toggle[aria-checked="true"], .toggle:has(> input:checked) {

  @starting-style {

    &:before {
      opacity: 0;
    }
  }
}
.toggle:indeterminate {
  grid-template-columns: 0.5fr 1fr 0.5fr;
}
.toggle:disabled {
  cursor: not-allowed;
  opacity: 30%;
}
.toggle:disabled:before {
  background-color: transparent;
  border: var(--border) solid currentColor;
}
.textarea {
  border: var(--border) solid #0000;
  min-height: calc(0.25rem * 20);
  flex-shrink: 1;
  -webkit-appearance: none;
     -moz-appearance: none;
          appearance: none;
  border-radius: var(--radius-field);
  background-color: var(--color-base-100);
  padding-block: calc(0.25rem * 2);
  vertical-align: middle;
  width: clamp(3rem, 20rem, 100%);
  padding-inline-start: 0.75rem;
  padding-inline-end: 0.75rem;
  font-size: 0.875rem;
  border-color: var(--input-color);
  box-shadow: 0 1px color-mix(in oklab, var(--input-color) calc(var(--depth) * 10%), #0000) inset, 0 -1px oklch(100% 0 0 / calc(var(--depth) * 0.1)) inset;
  --input-color: color-mix(in oklab, var(--color-base-content) 20%, #0000);
}
.textarea textarea {
  -webkit-appearance: none;
     -moz-appearance: none;
          appearance: none;
  background-color: transparent;
  border: none;
}
.textarea textarea:focus, .textarea textarea:focus-within {
  --tw-outline-style: none;
  outline-style: none;
}
@media (forced-colors: active) {

  .textarea textarea:focus, .textarea textarea:focus-within {
    outline: 2px solid transparent;
    outline-offset: 2px;
  }
}
.textarea:focus, .textarea:focus-within {
  --input-color: var(--color-base-content);
  box-shadow: 0 1px color-mix(in oklab, var(--input-color) calc(var(--depth) * 10%), #0000);
  outline: 2px solid var(--input-color);
  outline-offset: 2px;
  isolation: isolate;
}
.textarea:has(> textarea[disabled]), .textarea:is(:disabled, [disabled]) {
  cursor: not-allowed;
  border-color: var(--color-base-200);
  background-color: var(--color-base-200);
  color: color-mix(in oklab, var(--color-base-content) 40%, transparent);
}
.textarea:has(> textarea[disabled])::-moz-placeholder, .textarea:is(:disabled, [disabled])::-moz-placeholder {
  color: color-mix(in oklab, var(--color-base-content) 20%, transparent);
}
.textarea:has(> textarea[disabled])::placeholder, .textarea:is(:disabled, [disabled])::placeholder {
  color: color-mix(in oklab, var(--color-base-content) 20%, transparent);
}
.textarea:has(> textarea[disabled]), .textarea:is(:disabled, [disabled]) {
  box-shadow: none;
}
.textarea:has(> textarea[disabled]) > textarea[disabled] {
  cursor: not-allowed;
}
.textarea-sm {
  font-size: 0.75rem;
}
.textarea-md {
  font-size: 0.875rem;
}
.mockup-browser {
  position: relative;
  overflow: hidden;
  overflow-x: auto;
  border-radius: var(--radius-box);
}
.mockup-browser pre[data-prefix]:before {
  content: attr(data-prefix);
  display: inline-block;
  text-align: right;
}
.mockup-browser .mockup-browser-toolbar {
  margin-block: calc(0.25rem * 3);
  display: inline-flex;
  width: 100%;
  align-items: center;
  padding-right: 1.4em;
}
.mockup-browser .mockup-browser-toolbar:where(:dir(rtl), [dir="rtl"], [dir="rtl"] *) {
  flex-direction: row-reverse;
}
.mockup-browser .mockup-browser-toolbar:before {
  content: "";
  margin-right: 4.8rem;
  display: inline-block;
  aspect-ratio: 1 / 1;
  height: calc(0.25rem * 3);
  border-radius: calc(infinity * 1px);
  opacity: 30%;
  box-shadow: 1.4em 0, 2.8em 0, 4.2em 0;
}
.mockup-browser .mockup-browser-toolbar .input {
  margin-inline: auto;
  display: flex;
  height: 100%;
  align-items: center;
  gap: calc(0.25rem * 2);
  overflow: hidden;
  background-color: var(--color-base-200);
  text-overflow: ellipsis;
  white-space: nowrap;
  font-size: 0.75rem;
  direction: ltr;
}
.mockup-browser .mockup-browser-toolbar .input:before {
  content: "";
  width: calc(0.25rem * 4);
  height: calc(0.25rem * 4);
  opacity: 30%;
  background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 16 16' fill='currentColor' class='size-4'%3E%3Cpath fill-rule='evenodd' d='M9.965 11.026a5 5 0 1 1 1.06-1.06l2.755 2.754a.75.75 0 1 1-1.06 1.06l-2.755-2.754ZM10.5 7a3.5 3.5 0 1 1-7 0 3.5 3.5 0 0 1 7 0Z' clip-rule='evenodd' /%3E%3C/svg%3E%0A");
}
.mockup-phone {
  display: inline-grid;
  justify-items: center;
  border: 6px solid #6b6b6b;
  border-radius: 65px;
  background-color: #000;
  padding: 11px;
  overflow: hidden;
}
.kbd {
  display: inline-flex;
  align-items: center;
  justify-content: center;
  border-radius: var(--radius-field);
  background-color: var(--color-base-200);
  vertical-align: middle;
  padding-left: 0.5em;
  padding-right: 0.5em;
  border: var(--border) solid color-mix(in srgb, var(--color-base-content) 20%, #0000);
  border-bottom: calc(var(--border) + 1px) solid color-mix(in srgb, var(--color-base-content) 20%, #0000);
  --size: calc(var(--size-selector, 0.25rem) * 6);
  font-size: 0.875rem;
  height: var(--size);
  min-width: var(--size);
}
.toast {
  position: fixed;
  inset-inline-start: auto;
  inset-inline-end: calc(0.25rem * 0);
  top: auto;
  bottom: calc(0.25rem * 0);
  margin: calc(0.25rem * 4);
  display: flex;
  min-width: -moz-fit-content;
  min-width: fit-content;
  flex-direction: column;
  gap: calc(0.25rem * 2);
  background-color: transparent;
  white-space: nowrap;
  translate: var(--toast-x, 0) var(--toast-y, 0);
}
.toast > * {
  animation: toast 0.25s ease-out;
}
.toast:where(.toast-start) {
  inset-inline-start: calc(0.25rem * 0);
  inset-inline-end: auto;
  --toast-x: 0;
}
.toast:where(.toast-center) {
  inset-inline-start: calc(1/2 * 100%);
  inset-inline-end: calc(1/2 * 100%);
  --toast-x: -50%;
}
.toast:where(.toast-end) {
  inset-inline-start: auto;
  inset-inline-end: calc(0.25rem * 0);
  --toast-x: 0;
}
.toast:where(.toast-bottom) {
  top: auto;
  bottom: calc(0.25rem * 0);
  --toast-y: 0;
}
.toast:where(.toast-middle) {
  top: calc(1/2 * 100%);
  bottom: auto;
  --toast-y: -50%;
}
.toast:where(.toast-top) {
  top: calc(0.25rem * 0);
  bottom: auto;
  --toast-y: 0;
}
@keyframes toast {

  0% {
    scale: 0.9;
    opacity: 0;
  }

  100% {
    scale: 1;
    opacity: 1;
  }
}
.menu {
  display: flex;
  width: -moz-fit-content;
  width: fit-content;
  flex-direction: column;
  flex-wrap: wrap;
  padding: calc(0.25rem * 2);
  --menu-active-fg: var(--color-neutral-content);
  --menu-active-bg: var(--color-neutral);
  font-size: 0.875rem;
}
.menu :where(li ul) {
  position: relative;
  margin-inline-start: calc(0.25rem * 4);
  padding-inline-start: calc(0.25rem * 2);
  white-space: nowrap;
}
.menu :where(li ul):before {
  position: absolute;
  inset-inline-start: calc(0.25rem * 0);
  top: calc(0.25rem * 3);
  bottom: calc(0.25rem * 3);
  background-color: var(--color-base-content);
  opacity: 10%;
  width: var(--border);
  content: "";
}
.menu :where(li > .menu-dropdown:not(.menu-dropdown-show)) {
  display: none;
}
.menu :where(li:not(.menu-title) > *:not(ul, details, .menu-title, .btn)), .menu :where(li:not(.menu-title) > details > summary:not(.menu-title)) {
  display: grid;
  grid-auto-flow: column;
  align-content: flex-start;
  align-items: center;
  gap: calc(0.25rem * 2);
  border-radius: var(--radius-field);
  padding-inline: calc(0.25rem * 3);
  padding-block: calc(0.25rem * 1.5);
  text-align: start;
  transition-property: color, background-color, box-shadow;
  transition-duration: 0.2s;
  transition-timing-function: cubic-bezier(0, 0, 0.2, 1);
  grid-auto-columns: minmax(auto, max-content) auto max-content;
  text-wrap: balance;
  -webkit-user-select: none;
     -moz-user-select: none;
          user-select: none;
}
.menu :where(li > details > summary) {
  --tw-outline-style: none;
  outline-style: none;
}
@media (forced-colors: active) {

  .menu :where(li > details > summary) {
    outline: 2px solid transparent;
    outline-offset: 2px;
  }
}
.menu :where(li > details > summary)::-webkit-details-marker {
  display: none;
}
.menu :where(li > details > summary):after, .menu :where(li > .menu-dropdown-toggle):after {
  justify-self: flex-end;
  display: block;
  height: 0.375rem;
  width: 0.375rem;
  rotate: -135deg;
  translate: 0 -1px;
  transition-property: rotate, translate;
  transition-duration: 0.2s;
  content: "";
  transform-origin: 50% 50%;
  box-shadow: 2px 2px inset;
  pointer-events: none;
}
.menu :where(li > details[open] > summary):after, .menu :where(li > .menu-dropdown-toggle.menu-dropdown-show):after {
  rotate: 45deg;
  translate: 0 1px;
}
.menu :where( li:not(.menu-title, .disabled) > *:not(ul, details, .menu-title), li:not(.menu-title, .disabled) > details > summary:not(.menu-title) ):not(.menu-active, :active, .btn).menu-focus, .menu :where( li:not(.menu-title, .disabled) > *:not(ul, details, .menu-title), li:not(.menu-title, .disabled) > details > summary:not(.menu-title) ):not(.menu-active, :active, .btn):focus-visible {
  cursor: pointer;
  background-color: color-mix(in oklab, var(--color-base-content) 10%, transparent);
  color: var(--color-base-content);
  --tw-outline-style: none;
  outline-style: none;
}
@media (forced-colors: active) {

  .menu :where( li:not(.menu-title, .disabled) > *:not(ul, details, .menu-title), li:not(.menu-title, .disabled) > details > summary:not(.menu-title) ):not(.menu-active, :active, .btn).menu-focus, .menu :where( li:not(.menu-title, .disabled) > *:not(ul, details, .menu-title), li:not(.menu-title, .disabled) > details > summary:not(.menu-title) ):not(.menu-active, :active, .btn):focus-visible {
    outline: 2px solid transparent;
    outline-offset: 2px;
  }
}
.menu :where( li:not(.menu-title, .disabled) > *:not(ul, details, .menu-title):not(.menu-active, :active, .btn):hover, li:not(.menu-title, .disabled) > details > summary:not(.menu-title):not(.menu-active, :active, .btn):hover ) {
  cursor: pointer;
  background-color: color-mix(in oklab, var(--color-base-content) 10%, transparent);
  --tw-outline-style: none;
  outline-style: none;
}
@media (forced-colors: active) {

  .menu :where( li:not(.menu-title, .disabled) > *:not(ul, details, .menu-title):not(.menu-active, :active, .btn):hover, li:not(.menu-title, .disabled) > details > summary:not(.menu-title):not(.menu-active, :active, .btn):hover ) {
    outline: 2px solid transparent;
    outline-offset: 2px;
  }
}
.menu :where( li:not(.menu-title, .disabled) > *:not(ul, details, .menu-title):not(.menu-active, :active, .btn):hover, li:not(.menu-title, .disabled) > details > summary:not(.menu-title):not(.menu-active, :active, .btn):hover ) {
  box-shadow: 0 1px oklch(0% 0 0 / 0.01) inset, 0 -1px oklch(100% 0 0 / 0.01) inset;
}
.menu :where(li:empty) {
  background-color: var(--color-base-content);
  opacity: 10%;
  margin: 0.5rem 1rem;
  height: 1px;
}
.menu :where(li) {
  position: relative;
  display: flex;
  flex-shrink: 0;
  flex-direction: column;
  flex-wrap: wrap;
  align-items: stretch;
}
.menu :where(li) .badge {
  justify-self: flex-end;
}
.menu :where(li) > *:not(ul, .menu-title, details, .btn):active, .menu :where(li) > *:not(ul, .menu-title, details, .btn).menu-active, .menu :where(li) > details > summary:active {
  --tw-outline-style: none;
  outline-style: none;
}
@media (forced-colors: active) {

  .menu :where(li) > *:not(ul, .menu-title, details, .btn):active, .menu :where(li) > *:not(ul, .menu-title, details, .btn).menu-active, .menu :where(li) > details > summary:active {
    outline: 2px solid transparent;
    outline-offset: 2px;
  }
}
.menu :where(li) > *:not(ul, .menu-title, details, .btn):active, .menu :where(li) > *:not(ul, .menu-title, details, .btn).menu-active, .menu :where(li) > details > summary:active {
  color: var(--menu-active-fg);
  background-color: var(--menu-active-bg);
  background-size: auto, calc(var(--noise) * 100%);
  background-image: none, var(--fx-noise);
}
.menu :where(li) > *:not(ul, .menu-title, details, .btn):active:not(.menu :where(li) > *:not(ul, .menu-title, details, .btn):active:active), .menu :where(li) > *:not(ul, .menu-title, details, .btn).menu-active:not(.menu :where(li) > *:not(ul, .menu-title, details, .btn).menu-active:active), .menu :where(li) > details > summary:active:not(.menu :where(li) > details > summary:active:active) {
  box-shadow: 0 2px calc(var(--depth) * 3px) -2px var(--menu-active-bg);
}
.menu :where(li).menu-disabled {
  pointer-events: none;
  color: color-mix(in oklab, var(--color-base-content) 20%, transparent);
}
.menu .dropdown:focus-within .menu-dropdown-toggle:after {
  rotate: 45deg;
  translate: 0 1px;
}
.menu .dropdown-content {
  margin-top: calc(0.25rem * 2);
  padding: calc(0.25rem * 2);
}
.menu .dropdown-content:before {
  display: none;
}
.menu-title {
  padding-inline: calc(0.25rem * 3);
  padding-block: calc(0.25rem * 2);
  color: color-mix(in oklab, var(--color-base-content) 40%, transparent);
  font-size: 0.875rem;
  font-weight: 600;
}
.menu-xs :where(li:not(.menu-title) > *:not(ul, details, .menu-title)), .menu-xs :where(li:not(.menu-title) > details > summary:not(.menu-title)) {
  border-radius: var(--radius-field);
  padding-inline: calc(0.25rem * 2);
  padding-block: calc(0.25rem * 1);
  font-size: 0.6875rem;
}
.menu-xs .menu-title {
  padding-inline: calc(0.25rem * 2);
  padding-block: calc(0.25rem * 1);
}
.menu-sm :where(li:not(.menu-title) > *:not(ul, details, .menu-title)), .menu-sm :where(li:not(.menu-title) > details > summary:not(.menu-title)) {
  border-radius: var(--radius-field);
  padding-inline: calc(0.25rem * 2.5);
  padding-block: calc(0.25rem * 1);
  font-size: 0.75rem;
}
.menu-sm .menu-title {
  padding-inline: calc(0.25rem * 3);
  padding-block: calc(0.25rem * 2);
}
.menu-md :where(li:not(.menu-title) > *:not(ul, details, .menu-title)), .menu-md :where(li:not(.menu-title) > details > summary:not(.menu-title)) {
  border-radius: var(--radius-field);
  padding-inline: calc(0.25rem * 3);
  padding-block: calc(0.25rem * 1.5);
  font-size: 0.875rem;
}
.menu-md .menu-title {
  padding-inline: calc(0.25rem * 3);
  padding-block: calc(0.25rem * 2);
}
.menu-lg :where(li:not(.menu-title) > *:not(ul, details, .menu-title)), .menu-lg :where(li:not(.menu-title) > details > summary:not(.menu-title)) {
  border-radius: var(--radius-field);
  padding-inline: calc(0.25rem * 4);
  padding-block: calc(0.25rem * 1.5);
  font-size: 1.125rem;
}
.menu-lg .menu-title {
  padding-inline: calc(0.25rem * 6);
  padding-block: calc(0.25rem * 3);
}
.menu-xl :where(li:not(.menu-title) > *:not(ul, details, .menu-title)), .menu-xl :where(li:not(.menu-title) > details > summary:not(.menu-title)) {
  border-radius: var(--radius-field);
  padding-inline: calc(0.25rem * 5);
  padding-block: calc(0.25rem * 1.5);
  font-size: 1.375rem;
}
.menu-xl .menu-title {
  padding-inline: calc(0.25rem * 6);
  padding-block: calc(0.25rem * 3);
}
.select {
  border: var(--border) solid #0000;
  position: relative;
  display: inline-flex;
  flex-shrink: 1;
  -webkit-appearance: none;
     -moz-appearance: none;
          appearance: none;
  align-items: center;
  gap: calc(0.25rem * 1.5);
  background-color: var(--color-base-100);
  padding-inline-start: calc(0.25rem * 4);
  padding-inline-end: calc(0.25rem * 7);
  vertical-align: middle;
  width: clamp(3rem, 20rem, 100%);
  height: var(--size);
  font-size: 0.875rem;
  border-start-start-radius: var(--join-ss, var(--radius-field));
  border-start-end-radius: var(--join-se, var(--radius-field));
  border-end-start-radius: var(--join-es, var(--radius-field));
  border-end-end-radius: var(--join-ee, var(--radius-field));
  background-image: linear-gradient(45deg, #0000 50%, currentColor 50%), linear-gradient(135deg, currentColor 50%, #0000 50%);
  background-position: calc(100% - 20px) calc(1px + 50%), calc(100% - 16.1px) calc(1px + 50%);
  background-size: 4px 4px, 4px 4px;
  background-repeat: no-repeat;
  text-overflow: ellipsis;
  box-shadow: 0 1px color-mix(in oklab, var(--input-color) calc(var(--depth) * 10%), #0000) inset, 0 -1px oklch(100% 0 0 / calc(var(--depth) * 0.1)) inset;
  border-color: var(--input-color);
  --input-color: color-mix(in oklab, var(--color-base-content) 20%, #0000);
  --size: calc(var(--size-field, 0.25rem) * 10);
}
[dir="rtl"] .select {
  background-position: calc(0% + 12px) calc(1px + 50%), calc(0% + 16px) calc(1px + 50%);
}
.select select {
  margin-inline-start: calc(0.25rem * -4);
  margin-inline-end: calc(0.25rem * -7);
  width: calc(100% + 2.75rem);
  -webkit-appearance: none;
     -moz-appearance: none;
          appearance: none;
  padding-inline-start: calc(0.25rem * 4);
  padding-inline-end: calc(0.25rem * 7);
  height: calc(100% - 2px);
  background: inherit;
  border-radius: inherit;
  border-style: none;
}
.select select:focus, .select select:focus-within {
  --tw-outline-style: none;
  outline-style: none;
}
@media (forced-colors: active) {

  .select select:focus, .select select:focus-within {
    outline: 2px solid transparent;
    outline-offset: 2px;
  }
}
.select select:not(:last-child) {
  margin-inline-end: calc(0.25rem * -5.5);
  background-image: none;
}
.select:focus, .select:focus-within {
  --input-color: var(--color-base-content);
  box-shadow: 0 1px color-mix(in oklab, var(--input-color) calc(var(--depth) * 10%), #0000);
  outline: 2px solid var(--input-color);
  outline-offset: 2px;
}
.select:has(> select[disabled]), .select:is(:disabled, [disabled]) {
  cursor: not-allowed;
  border-color: var(--color-base-200);
  background-color: var(--color-base-200);
  color: color-mix(in oklab, var(--color-base-content) 40%, transparent);
}
.select:has(> select[disabled])::-moz-placeholder, .select:is(:disabled, [disabled])::-moz-placeholder {
  color: color-mix(in oklab, var(--color-base-content) 20%, transparent);
}
.select:has(> select[disabled])::placeholder, .select:is(:disabled, [disabled])::placeholder {
  color: color-mix(in oklab, var(--color-base-content) 20%, transparent);
}
.select:has(> select[disabled]) > select[disabled] {
  cursor: not-allowed;
}
.range {
  -webkit-appearance: none;
     -moz-appearance: none;
          appearance: none;
  webkit-appearance: none;
  --range-thumb: var(--color-base-100);
  --range-thumb-size: calc(var(--size-selector, 0.25rem) * 6);
  --range-progress: currentColor;
  --range-fill: 1;
  --range-p: 0.25rem;
  --range-bg: color-mix(in oklab, currentColor 10%, #0000);
  cursor: pointer;
  overflow: hidden;
  background-color: transparent;
  vertical-align: middle;
  width: clamp(3rem, 20rem, 100%);
  --radius-selector-max: calc(
    var(--radius-selector) + var(--radius-selector) + var(--radius-selector)
  );
  border-radius: calc(var(--radius-selector) + min(var(--range-p), var(--radius-selector-max)));
  border: none;
  height: var(--range-thumb-size);
}
[dir="rtl"] .range {
  --range-dir: -1;
}
.range:focus {
  outline: none;
}
.range:focus-visible {
  outline: 2px solid;
  outline-offset: 2px;
}
.range::-webkit-slider-runnable-track {
  width: 100%;
  background-color: var(--range-bg);
  border-radius: var(--radius-selector);
  height: calc(var(--range-thumb-size) * 0.5);
}
@media (forced-colors: active) {

  .range::-webkit-slider-runnable-track {
    border: 1px solid;
  }

  .range::-moz-range-track {
    border: 1px solid;
  }
}
.range::-webkit-slider-thumb {
  position: relative;
  box-sizing: border-box;
  border-radius: calc(var(--radius-selector) + min(var(--range-p), var(--radius-selector-max)));
  background-color: currentColor;
  height: var(--range-thumb-size);
  width: var(--range-thumb-size);
  border: var(--range-p) solid;
  -webkit-appearance: none;
          appearance: none;
  webkit-appearance: none;
  top: 50%;
  color: var(--range-progress);
  transform: translateY(-50%);
  box-shadow: 0 -1px oklch(0% 0 0 / calc(var(--depth) * 0.1)) inset, 0 8px 0 -4px oklch(100% 0 0 / calc(var(--depth) * 0.1)) inset, 0 1px color-mix(in oklab, currentColor calc(var(--depth) * 10%), #0000), 0 0 0 2rem var(--range-thumb) inset, calc((var(--range-dir, 1) * -100rem) - (var(--range-dir, 1) * var(--range-thumb-size) / 2)) 0 0 calc(100rem * var(--range-fill));
}
.range::-moz-range-track {
  width: 100%;
  background-color: var(--range-bg);
  border-radius: var(--radius-selector);
  height: calc(var(--range-thumb-size) * 0.5);
}
.range::-moz-range-thumb {
  position: relative;
  box-sizing: border-box;
  border-radius: calc(var(--radius-selector) + min(var(--range-p), var(--radius-selector-max)));
  background-color: currentColor;
  height: var(--range-thumb-size);
  width: var(--range-thumb-size);
  border: var(--range-p) solid;
  top: 50%;
  color: var(--range-progress);
  box-shadow: 0 -1px oklch(0% 0 0 / calc(var(--depth) * 0.1)) inset, 0 8px 0 -4px oklch(100% 0 0 / calc(var(--depth) * 0.1)) inset, 0 1px color-mix(in oklab, currentColor calc(var(--depth) * 10%), #0000), 0 0 0 2rem var(--range-thumb) inset, calc((var(--range-dir, 1) * -100rem) - (var(--range-dir, 1) * var(--range-thumb-size) / 2)) 0 0 calc(100rem * var(--range-fill));
}
.range:disabled {
  cursor: not-allowed;
  opacity: 30%;
}
.fieldset {
  display: grid;
  gap: calc(0.25rem * 1.5);
  padding-block: calc(0.25rem * 1);
  font-size: 0.75rem;
  grid-template-columns: 1fr;
  grid-auto-rows: max-content;
}
.modal {
  pointer-events: none;
  visibility: hidden;
  position: fixed;
  inset: calc(0.25rem * 0);
  margin: calc(0.25rem * 0);
  display: grid;
  height: 100%;
  max-height: none;
  width: 100%;
  max-width: none;
  align-items: center;
  justify-items: center;
  background-color: transparent;
  padding: calc(0.25rem * 0);
  color: inherit;
  overflow-x: hidden;
  transition: transform 0.3s ease-out, visibility 0.3s allow-discrete, background-color 0.3s ease-out, opacity 0.1s ease-out;
  overflow-y: hidden;
  overscroll-behavior: contain;
  z-index: 999;
}
.modal::backdrop {
  display: none;
}
.modal.modal-open, .modal[open], .modal:target {
  background-color: oklch(0% 0 0/ 0.4);
  transition: transform 0.3s ease-out, background-color 0.3s ease-out, opacity 0.1s ease-out;
  pointer-events: auto;
  visibility: visible;
  opacity: 100%;
}
.modal.modal-open .modal-box, .modal[open] .modal-box, .modal:target .modal-box {
  translate: 0 0;
  scale: 1;
  opacity: 1;
}
.modal {

  @starting-style {

    &.modal-open, &[open], &:target {
      visibility: hidden;
      opacity: 0%;
    }
  }
}
.modal-toggle:checked + .modal {
  pointer-events: auto;
  visibility: visible;
  opacity: 100%;
  background-color: oklch(0% 0 0/ 0.4);
}
.modal-toggle:checked + .modal .modal-box {
  translate: 0 0;
  scale: 1;
  opacity: 1;
}
.modal-box {
  grid-column-start: 1;
  grid-row-start: 1;
  max-height: 100vh;
  width: calc(11/12 * 100%);
  max-width: 32rem;
  background-color: var(--color-base-100);
  padding: calc(0.25rem * 6);
  transition: translate 0.3s ease-out, scale 0.3s ease-out, opacity 0.2s ease-out 0.05s, box-shadow 0.3s ease-out;
  border-top-left-radius: var(--modal-tl, var(--radius-box));
  border-top-right-radius: var(--modal-tr, var(--radius-box));
  border-bottom-left-radius: var(--modal-bl, var(--radius-box));
  border-bottom-right-radius: var(--modal-br, var(--radius-box));
  scale: 95%;
  opacity: 0;
  box-shadow: oklch(0% 0 0/ 0.25) 0px 25px 50px -12px;
  overflow-y: auto;
  overscroll-behavior: contain;
}
.modal-top {
  place-items: start;
}
.modal-top :where(.modal-box) {
  height: auto;
  width: 100%;
  max-width: none;
  max-height: calc(100vh - 5em);
  translate: 0 -100%;
  scale: 1;
  --modal-tl: 0;
  --modal-tr: 0;
  --modal-bl: var(--radius-box);
  --modal-br: var(--radius-box);
}
.modal-middle {
  place-items: center;
}
.modal-middle :where(.modal-box) {
  height: auto;
  width: calc(11/12 * 100%);
  max-width: 32rem;
  max-height: calc(100vh - 5em);
  translate: 0 2%;
  scale: 98%;
  --modal-tl: var(--radius-box);
  --modal-tr: var(--radius-box);
  --modal-bl: var(--radius-box);
  --modal-br: var(--radius-box);
}
.modal-bottom {
  place-items: end;
}
.modal-bottom :where(.modal-box) {
  height: auto;
  width: 100%;
  max-width: none;
  max-height: calc(100vh - 5em);
  translate: 0 100%;
  scale: 1;
  --modal-tl: var(--radius-box);
  --modal-tr: var(--radius-box);
  --modal-bl: 0;
  --modal-br: 0;
}
.modal-start {
  place-items: start;
}
.modal-start :where(.modal-box) {
  height: 100vh;
  max-height: none;
  width: auto;
  max-width: none;
  translate: -100% 0;
  scale: 1;
  --modal-tl: 0;
  --modal-tr: var(--radius-box);
  --modal-bl: 0;
  --modal-br: var(--radius-box);
}
.modal-end {
  place-items: end;
}
.modal-end :where(.modal-box) {
  height: 100vh;
  max-height: none;
  width: auto;
  max-width: none;
  translate: 100% 0;
  scale: 1;
  --modal-tl: var(--radius-box);
  --modal-tr: 0;
  --modal-bl: var(--radius-box);
  --modal-br: 0;
}
.sr-only {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  white-space: nowrap;
  border-width: 0;
}
.pointer-events-none {
  pointer-events: none;
}
.visible {
  visibility: visible;
}
.invisible {
  visibility: hidden;
}
.collapse {
  visibility: collapse;
}
.fixed {
  position: fixed;
}
.absolute {
  position: absolute;
}
.relative {
  position: relative;
}
.sticky {
  position: sticky;
}
.inset-0 {
  inset: 0px;
}
.bottom-0 {
  bottom: 0px;
}
.left-0 {
  left: 0px;
}
.left-1 {
  left: 0.25rem;
}
.left-1\/2 {
  left: 50%;
}
.left-2 {
  left: 0.5rem;
}
.left-5 {
  left: 1.25rem;
}
.left-\[max\(-7rem\2c calc\(50\%-52rem\)\)\] {
  left: max(-7rem,calc(50% - 52rem));
}
.left-\[max\(45rem\2c calc\(50\%\+8rem\)\)\] {
  left: max(45rem,calc(50% + 8rem));
}
.left-full {
  left: 100%;
}
.right-0 {
  right: 0px;
}
.right-2 {
  right: 0.5rem;
}
.right-5 {
  right: 1.25rem;
}
.top-0 {
  top: 0px;
}
.top-1 {
  top: 0.25rem;
}
.top-1\/2 {
  top: 50%;
}
.top-2 {
  top: 0.5rem;
}
.isolate {
  isolation: isolate;
}
.-z-10 {
  z-index: -10;
}
.z-10 {
  z-index: 10;
}
.z-20 {
  z-index: 20;
}
.z-40 {
  z-index: 40;
}
.z-50 {
  z-index: 50;
}
.z-\[99\] {
  z-index: 99;
}
.col-span-1 {
  grid-column: span 1 / span 1;
}
.-m-1 {
  margin: -0.25rem;
}
.-m-3 {
  margin: -0.75rem;
}
.m-0 {
  margin: 0px;
}
.m-2 {
  margin: 0.5rem;
}
.-mx-1 {
  margin-left: -0.25rem;
  margin-right: -0.25rem;
}
.-mx-3 {
  margin-left: -0.75rem;
  margin-right: -0.75rem;
}
.-mx-4 {
  margin-left: -1rem;
  margin-right: -1rem;
}
.-mx-px {
  margin-left: -1px;
  margin-right: -1px;
}
.mx-12 {
  margin-left: 3rem;
  margin-right: 3rem;
}
.mx-2 {
  margin-left: 0.5rem;
  margin-right: 0.5rem;
}
.mx-3 {
  margin-left: 0.75rem;
  margin-right: 0.75rem;
}
.mx-4 {
  margin-left: 1rem;
  margin-right: 1rem;
}
.mx-8 {
  margin-left: 2rem;
  margin-right: 2rem;
}
.mx-auto {
  margin-left: auto;
  margin-right: auto;
}
.my-0 {
  margin-top: 0px;
  margin-bottom: 0px;
}
.my-1 {
  margin-top: 0.25rem;
  margin-bottom: 0.25rem;
}
.my-12 {
  margin-top: 3rem;
  margin-bottom: 3rem;
}
.my-20 {
  margin-top: 5rem;
  margin-bottom: 5rem;
}
.my-24 {
  margin-top: 6rem;
  margin-bottom: 6rem;
}
.-ml-1 {
  margin-left: -0.25rem;
}
.mb-0 {
  margin-bottom: 0px;
}
.mb-1 {
  margin-bottom: 0.25rem;
}
.mb-10 {
  margin-bottom: 2.5rem;
}
.mb-2 {
  margin-bottom: 0.5rem;
}
.mb-24 {
  margin-bottom: 6rem;
}
.mb-3 {
  margin-bottom: 0.75rem;
}
.mb-32 {
  margin-bottom: 8rem;
}
.mb-4 {
  margin-bottom: 1rem;
}
.mb-5 {
  margin-bottom: 1.25rem;
}
.mb-6 {
  margin-bottom: 1.5rem;
}
.mb-8 {
  margin-bottom: 2rem;
}
.me-2 {
  margin-inline-end: 0.5rem;
}
.ml-0 {
  margin-left: 0px;
}
.ml-1 {
  margin-left: 0.25rem;
}
.ml-10 {
  margin-left: 2.5rem;
}
.ml-2 {
  margin-left: 0.5rem;
}
.ml-3 {
  margin-left: 0.75rem;
}
.ml-4 {
  margin-left: 1rem;
}
.ml-6 {
  margin-left: 1.5rem;
}
.ml-auto {
  margin-left: auto;
}
.mr-0 {
  margin-right: 0px;
}
.mr-1 {
  margin-right: 0.25rem;
}
.mr-10 {
  margin-right: 2.5rem;
}
.mr-2 {
  margin-right: 0.5rem;
}
.mr-3 {
  margin-right: 0.75rem;
}
.mr-4 {
  margin-right: 1rem;
}
.mr-5 {
  margin-right: 1.25rem;
}
.mr-6 {
  margin-right: 1.5rem;
}
.mt-0 {
  margin-top: 0px;
}
.mt-1 {
  margin-top: 0.25rem;
}
.mt-10 {
  margin-top: 2.5rem;
}
.mt-12 {
  margin-top: 3rem;
}
.mt-16 {
  margin-top: 4rem;
}
.mt-2 {
  margin-top: 0.5rem;
}
.mt-3 {
  margin-top: 0.75rem;
}
.mt-4 {
  margin-top: 1rem;
}
.mt-5 {
  margin-top: 1.25rem;
}
.mt-6 {
  margin-top: 1.5rem;
}
.mt-8 {
  margin-top: 2rem;
}
.box-content {
  box-sizing: content-box;
}
.block {
  display: block;
}
.inline-block {
  display: inline-block;
}
.inline {
  display: inline;
}
.flex {
  display: flex;
}
.inline-flex {
  display: inline-flex;
}
.table {
  display: table;
}
.grid {
  display: grid;
}
.contents {
  display: contents;
}
.hidden {
  display: none;
}
.aspect-\[577\/310\] {
  aspect-ratio: 577/310;
}
.size-4 {
  width: 1rem;
  height: 1rem;
}
.h-0 {
  height: 0px;
}
.h-0\.5 {
  height: 0.125rem;
}
.h-10 {
  height: 2.5rem;
}
.h-12 {
  height: 3rem;
}
.h-16 {
  height: 4rem;
}
.h-2 {
  height: 0.5rem;
}
.h-20 {
  height: 5rem;
}
.h-24 {
  height: 6rem;
}
.h-3 {
  height: 0.75rem;
}
.h-4 {
  height: 1rem;
}
.h-5 {
  height: 1.25rem;
}
.h-6 {
  height: 1.5rem;
}
.h-60 {
  height: 15rem;
}
.h-8 {
  height: 2rem;
}
.h-9 {
  height: 2.25rem;
}
.h-96 {
  height: 24rem;
}
.h-auto {
  height: auto;
}
.h-full {
  height: 100%;
}
.h-px {
  height: 1px;
}
.h-screen {
  height: 100vh;
}
.min-h-\[80px\] {
  min-height: 80px;
}
.min-h-screen {
  min-height: 100vh;
}
.w-0 {
  width: 0px;
}
.w-0\.5 {
  width: 0.125rem;
}
.w-1 {
  width: 0.25rem;
}
.w-10 {
  width: 2.5rem;
}
.w-10\/12 {
  width: 83.333333%;
}
.w-11 {
  width: 2.75rem;
}
.w-12 {
  width: 3rem;
}
.w-16 {
  width: 4rem;
}
.w-2 {
  width: 0.5rem;
}
.w-2\/12 {
  width: 16.666667%;
}
.w-20 {
  width: 5rem;
}
.w-28 {
  width: 7rem;
}
.w-3 {
  width: 0.75rem;
}
.w-32 {
  width: 8rem;
}
.w-4 {
  width: 1rem;
}
.w-40 {
  width: 10rem;
}
.w-48 {
  width: 12rem;
}
.w-5 {
  width: 1.25rem;
}
.w-56 {
  width: 14rem;
}
.w-6 {
  width: 1.5rem;
}
.w-60 {
  width: 15rem;
}
.w-64 {
  width: 16rem;
}
.w-7 {
  width: 1.75rem;
}
.w-8 {
  width: 2rem;
}
.w-96 {
  width: 24rem;
}
.w-\[36\.0625rem\] {
  width: 36.0625rem;
}
.w-auto {
  width: auto;
}
.w-full {
  width: 100%;
}
.w-screen {
  width: 100vw;
}
.min-w-full {
  min-width: 100%;
}
.max-w-3xl {
  max-width: 48rem;
}
.max-w-4xl {
  max-width: 56rem;
}
.max-w-5xl {
  max-width: 64rem;
}
.max-w-6xl {
  max-width: 72rem;
}
.max-w-7xl {
  max-width: 80rem;
}
.max-w-lg {
  max-width: 32rem;
}
.max-w-md {
  max-width: 28rem;
}
.max-w-screen-xl {
  max-width: 1280px;
}
.max-w-sm {
  max-width: 24rem;
}
.max-w-xl {
  max-width: 36rem;
}
.max-w-xs {
  max-width: 20rem;
}
.flex-1 {
  flex: 1 1 0%;
}
.flex-shrink {
  flex-shrink: 1;
}
.flex-shrink-0 {
  flex-shrink: 0;
}
.flex-grow {
  flex-grow: 1;
}
.border-collapse {
  border-collapse: collapse;
}
.-translate-x-0 {
  --tw-translate-x: -0px;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}
.-translate-x-1 {
  --tw-translate-x: -0.25rem;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}
.-translate-x-1\/2 {
  --tw-translate-x: -50%;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}
.-translate-x-full {
  --tw-translate-x: -100%;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}
.-translate-y-1 {
  --tw-translate-y: -0.25rem;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}
.-translate-y-1\/2 {
  --tw-translate-y: -50%;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}
.-translate-y-full {
  --tw-translate-y: -100%;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}
.-translate-y-px {
  --tw-translate-y: -1px;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}
.translate-x-0 {
  --tw-translate-x: 0px;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}
.translate-x-2 {
  --tw-translate-x: 0.5rem;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}
.translate-x-full {
  --tw-translate-x: 100%;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}
.translate-y-0 {
  --tw-translate-y: 0px;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}
.translate-y-1 {
  --tw-translate-y: 0.25rem;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}
.translate-y-1\.5 {
  --tw-translate-y: 0.375rem;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}
.translate-y-2 {
  --tw-translate-y: 0.5rem;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}
.translate-y-full {
  --tw-translate-y: 100%;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}
.translate-y-px {
  --tw-translate-y: 1px;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}
.scale-100 {
  --tw-scale-x: 1;
  --tw-scale-y: 1;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}
.scale-90 {
  --tw-scale-x: .9;
  --tw-scale-y: .9;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}
.transform {
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}
.transform-gpu {
  transform: translate3d(var(--tw-translate-x), var(--tw-translate-y), 0) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}
.cursor-default {
  cursor: default;
}
.cursor-pointer {
  cursor: pointer;
}
.select-none {
  -webkit-user-select: none;
     -moz-user-select: none;
          user-select: none;
}
.resize {
  resize: both;
}
.grid-cols-1 {
  grid-template-columns: repeat(1, minmax(0, 1fr));
}
.grid-cols-2 {
  grid-template-columns: repeat(2, minmax(0, 1fr));
}
.grid-cols-3 {
  grid-template-columns: repeat(3, minmax(0, 1fr));
}
.grid-cols-subgrid {
  grid-template-columns: subgrid;
}
.grid-rows-2 {
  grid-template-rows: repeat(2, minmax(0, 1fr));
}
.flex-row {
  flex-direction: row;
}
.flex-col {
  flex-direction: column;
}
.flex-col-reverse {
  flex-direction: column-reverse;
}
.flex-wrap {
  flex-wrap: wrap;
}
.place-items-center {
  place-items: center;
}
.items-start {
  align-items: flex-start;
}
.items-end {
  align-items: flex-end;
}
.items-center {
  align-items: center;
}
.justify-start {
  justify-content: flex-start;
}
.justify-end {
  justify-content: flex-end;
}
.justify-center {
  justify-content: center;
}
.justify-between {
  justify-content: space-between;
}
.justify-around {
  justify-content: space-around;
}
.gap-4 {
  gap: 1rem;
}
.gap-6 {
  gap: 1.5rem;
}
.gap-8 {
  gap: 2rem;
}
.gap-x-4 {
  -moz-column-gap: 1rem;
       column-gap: 1rem;
}
.gap-x-6 {
  -moz-column-gap: 1.5rem;
       column-gap: 1.5rem;
}
.gap-y-2 {
  row-gap: 0.5rem;
}
.space-x-1 > :not([hidden]) ~ :not([hidden]) {
  --tw-space-x-reverse: 0;
  margin-right: calc(0.25rem * var(--tw-space-x-reverse));
  margin-left: calc(0.25rem * calc(1 - var(--tw-space-x-reverse)));
}
.space-x-2 > :not([hidden]) ~ :not([hidden]) {
  --tw-space-x-reverse: 0;
  margin-right: calc(0.5rem * var(--tw-space-x-reverse));
  margin-left: calc(0.5rem * calc(1 - var(--tw-space-x-reverse)));
}
.space-x-3 > :not([hidden]) ~ :not([hidden]) {
  --tw-space-x-reverse: 0;
  margin-right: calc(0.75rem * var(--tw-space-x-reverse));
  margin-left: calc(0.75rem * calc(1 - var(--tw-space-x-reverse)));
}
.space-x-4 > :not([hidden]) ~ :not([hidden]) {
  --tw-space-x-reverse: 0;
  margin-right: calc(1rem * var(--tw-space-x-reverse));
  margin-left: calc(1rem * calc(1 - var(--tw-space-x-reverse)));
}
.space-x-5 > :not([hidden]) ~ :not([hidden]) {
  --tw-space-x-reverse: 0;
  margin-right: calc(1.25rem * var(--tw-space-x-reverse));
  margin-left: calc(1.25rem * calc(1 - var(--tw-space-x-reverse)));
}
.space-y-0 > :not([hidden]) ~ :not([hidden]) {
  --tw-space-y-reverse: 0;
  margin-top: calc(0px * calc(1 - var(--tw-space-y-reverse)));
  margin-bottom: calc(0px * var(--tw-space-y-reverse));
}
.space-y-2 > :not([hidden]) ~ :not([hidden]) {
  --tw-space-y-reverse: 0;
  margin-top: calc(0.5rem * calc(1 - var(--tw-space-y-reverse)));
  margin-bottom: calc(0.5rem * var(--tw-space-y-reverse));
}
.space-y-4 > :not([hidden]) ~ :not([hidden]) {
  --tw-space-y-reverse: 0;
  margin-top: calc(1rem * calc(1 - var(--tw-space-y-reverse)));
  margin-bottom: calc(1rem * var(--tw-space-y-reverse));
}
.space-y-5 > :not([hidden]) ~ :not([hidden]) {
  --tw-space-y-reverse: 0;
  margin-top: calc(1.25rem * calc(1 - var(--tw-space-y-reverse)));
  margin-bottom: calc(1.25rem * var(--tw-space-y-reverse));
}
.space-y-6 > :not([hidden]) ~ :not([hidden]) {
  --tw-space-y-reverse: 0;
  margin-top: calc(1.5rem * calc(1 - var(--tw-space-y-reverse)));
  margin-bottom: calc(1.5rem * var(--tw-space-y-reverse));
}
.space-y-8 > :not([hidden]) ~ :not([hidden]) {
  --tw-space-y-reverse: 0;
  margin-top: calc(2rem * calc(1 - var(--tw-space-y-reverse)));
  margin-bottom: calc(2rem * var(--tw-space-y-reverse));
}
.space-y-9 > :not([hidden]) ~ :not([hidden]) {
  --tw-space-y-reverse: 0;
  margin-top: calc(2.25rem * calc(1 - var(--tw-space-y-reverse)));
  margin-bottom: calc(2.25rem * var(--tw-space-y-reverse));
}
.divide-x > :not([hidden]) ~ :not([hidden]) {
  --tw-divide-x-reverse: 0;
  border-right-width: calc(1px * var(--tw-divide-x-reverse));
  border-left-width: calc(1px * calc(1 - var(--tw-divide-x-reverse)));
}
.divide-y > :not([hidden]) ~ :not([hidden]) {
  --tw-divide-y-reverse: 0;
  border-top-width: calc(1px * calc(1 - var(--tw-divide-y-reverse)));
  border-bottom-width: calc(1px * var(--tw-divide-y-reverse));
}
.self-center {
  align-self: center;
}
.overflow-auto {
  overflow: auto;
}
.overflow-hidden {
  overflow: hidden;
}
.overflow-x-auto {
  overflow-x: auto;
}
.overflow-y-auto {
  overflow-y: auto;
}
.whitespace-nowrap {
  white-space: nowrap;
}
.text-wrap {
  text-wrap: wrap;
}
.rounded {
  border-radius: 0.25rem;
}
.rounded-full {
  border-radius: 9999px;
}
.rounded-lg {
  border-radius: var(--radius);
}
.rounded-md {
  border-radius: calc(var(--radius) - 2px);
}
.rounded-none {
  border-radius: 0px;
}
.rounded-xl {
  border-radius: 0.75rem;
}
.rounded-l {
  border-top-left-radius: 0.25rem;
  border-bottom-left-radius: 0.25rem;
}
.rounded-s-lg {
  border-start-start-radius: var(--radius);
  border-end-start-radius: var(--radius);
}
.rounded-t-lg {
  border-top-left-radius: var(--radius);
  border-top-right-radius: var(--radius);
}
.border {
  border-width: 1px;
}
.border-0 {
  border-width: 0px;
}
.border-2 {
  border-width: 2px;
}
.border-b {
  border-bottom-width: 1px;
}
.border-b-2 {
  border-bottom-width: 2px;
}
.border-l {
  border-left-width: 1px;
}
.border-r {
  border-right-width: 1px;
}
.border-r-2 {
  border-right-width: 2px;
}
.border-dashed {
  border-style: dashed;
}
.bg-blue {
  --tw-bg-opacity: 1;
  background-color: rgb(31 182 255 / var(--tw-bg-opacity));
}
.bg-gray-light {
  --tw-bg-opacity: 1;
  background-color: rgb(211 220 230 / var(--tw-bg-opacity));
}
.bg-secondary {
  --tw-bg-opacity: 1;
  background-color: hsl(var(--secondary) / var(--tw-bg-opacity));
}
.bg-opacity-50 {
  --tw-bg-opacity: 0.5;
}
.bg-opacity-90 {
  --tw-bg-opacity: 0.9;
}
.bg-gradient-to-br {
  background-image: linear-gradient(to bottom right, var(--tw-gradient-stops));
}
.bg-gradient-to-r {
  background-image: linear-gradient(to right, var(--tw-gradient-stops));
}
.from-\[\#ff80b5\] {
  --tw-gradient-from: #ff80b5 var(--tw-gradient-from-position);
  --tw-gradient-to: rgb(255 128 181 / 0) var(--tw-gradient-to-position);
  --tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to);
}
.to-\[\#9089fc\] {
  --tw-gradient-to: #9089fc var(--tw-gradient-to-position);
}
.bg-cover {
  background-size: cover;
}
.bg-clip-text {
  -webkit-background-clip: text;
          background-clip: text;
}
.stroke-2 {
  stroke-width: 2;
}
.object-cover {
  -o-object-fit: cover;
     object-fit: cover;
}
.p-0 {
  padding: 0px;
}
.p-1 {
  padding: 0.25rem;
}
.p-10 {
  padding: 2.5rem;
}
.p-16 {
  padding: 4rem;
}
.p-2 {
  padding: 0.5rem;
}
.p-24 {
  padding: 6rem;
}
.p-3 {
  padding: 0.75rem;
}
.p-4 {
  padding: 1rem;
}
.p-6 {
  padding: 1.5rem;
}
.p-8 {
  padding: 2rem;
}
.px-0 {
  padding-left: 0px;
  padding-right: 0px;
}
.px-10 {
  padding-left: 2.5rem;
  padding-right: 2.5rem;
}
.px-12 {
  padding-left: 3rem;
  padding-right: 3rem;
}
.px-16 {
  padding-left: 4rem;
  padding-right: 4rem;
}
.px-2 {
  padding-left: 0.5rem;
  padding-right: 0.5rem;
}
.px-24 {
  padding-left: 6rem;
  padding-right: 6rem;
}
.px-3 {
  padding-left: 0.75rem;
  padding-right: 0.75rem;
}
.px-4 {
  padding-left: 1rem;
  padding-right: 1rem;
}
.px-5 {
  padding-left: 1.25rem;
  padding-right: 1.25rem;
}
.px-6 {
  padding-left: 1.5rem;
  padding-right: 1.5rem;
}
.px-7 {
  padding-left: 1.75rem;
  padding-right: 1.75rem;
}
.px-8 {
  padding-left: 2rem;
  padding-right: 2rem;
}
.py-0 {
  padding-top: 0px;
  padding-bottom: 0px;
}
.py-1 {
  padding-top: 0.25rem;
  padding-bottom: 0.25rem;
}
.py-10 {
  padding-top: 2.5rem;
  padding-bottom: 2.5rem;
}
.py-12 {
  padding-top: 3rem;
  padding-bottom: 3rem;
}
.py-16 {
  padding-top: 4rem;
  padding-bottom: 4rem;
}
.py-2 {
  padding-top: 0.5rem;
  padding-bottom: 0.5rem;
}
.py-2\.5 {
  padding-top: 0.625rem;
  padding-bottom: 0.625rem;
}
.py-24 {
  padding-top: 6rem;
  padding-bottom: 6rem;
}
.py-3 {
  padding-top: 0.75rem;
  padding-bottom: 0.75rem;
}
.py-32 {
  padding-top: 8rem;
  padding-bottom: 8rem;
}
.py-4 {
  padding-top: 1rem;
  padding-bottom: 1rem;
}
.py-5 {
  padding-top: 1.25rem;
  padding-bottom: 1.25rem;
}
.py-6 {
  padding-top: 1.5rem;
  padding-bottom: 1.5rem;
}
.py-8 {
  padding-top: 2rem;
  padding-bottom: 2rem;
}
.pb-0 {
  padding-bottom: 0px;
}
.pb-2 {
  padding-bottom: 0.5rem;
}
.pb-3 {
  padding-bottom: 0.75rem;
}
.pb-3\.5 {
  padding-bottom: 0.875rem;
}
.pb-4 {
  padding-bottom: 1rem;
}
.pb-6 {
  padding-bottom: 1.5rem;
}
.pb-8 {
  padding-bottom: 2rem;
}
.pl-0 {
  padding-left: 0px;
}
.pl-2 {
  padding-left: 0.5rem;
}
.pl-4 {
  padding-left: 1rem;
}
.pl-5 {
  padding-left: 1.25rem;
}
.pl-6 {
  padding-left: 1.5rem;
}
.pl-8 {
  padding-left: 2rem;
}
.pr-0 {
  padding-right: 0px;
}
.pr-2 {
  padding-right: 0.5rem;
}
.pr-4 {
  padding-right: 1rem;
}
.pr-5 {
  padding-right: 1.25rem;
}
.pr-8 {
  padding-right: 2rem;
}
.pt-10 {
  padding-top: 2.5rem;
}
.pt-2 {
  padding-top: 0.5rem;
}
.pt-4 {
  padding-top: 1rem;
}
.text-left {
  text-align: left;
}
.text-center {
  text-align: center;
}
.text-right {
  text-align: right;
}
.align-middle {
  vertical-align: middle;
}
.font-lato {
  font-family: Lato, sans-serif;
}
.text-2xl {
  font-size: 1.5rem;
  line-height: 2rem;
}
.text-3xl {
  font-size: 1.875rem;
  line-height: 2.25rem;
}
.text-4xl {
  font-size: 2.25rem;
  line-height: 2.5rem;
}
.text-5xl {
  font-size: 3rem;
  line-height: 1;
}
.text-6xl {
  font-size: 3.75rem;
  line-height: 1;
}
.text-7xl {
  font-size: 4.5rem;
  line-height: 1;
}
.text-base {
  font-size: 1rem;
  line-height: 1.5rem;
}
.text-lg {
  font-size: 1.125rem;
  line-height: 1.75rem;
}
.text-sm {
  font-size: 0.875rem;
  line-height: 1.25rem;
}
.text-xl {
  font-size: 1.25rem;
  line-height: 1.75rem;
}
.text-xs {
  font-size: 0.75rem;
  line-height: 1rem;
}
.font-bold {
  font-weight: 700;
}
.font-extrabold {
  font-weight: 800;
}
.font-medium {
  font-weight: 500;
}
.font-normal {
  font-weight: 400;
}
.font-semibold {
  font-weight: 600;
}
.uppercase {
  text-transform: uppercase;
}
.italic {
  font-style: italic;
}
.leading-10 {
  line-height: 2.5rem;
}
.leading-6 {
  line-height: 1.5rem;
}
.leading-none {
  line-height: 1;
}
.leading-normal {
  line-height: 1.5;
}
.leading-tight {
  line-height: 1.25;
}
.tracking-normal {
  letter-spacing: 0em;
}
.tracking-tight {
  letter-spacing: -0.025em;
}
.tracking-wide {
  letter-spacing: 0.025em;
}
.tracking-wider {
  letter-spacing: 0.05em;
}
.tracking-widest {
  letter-spacing: 0.1em;
}
.text-blue {
  --tw-text-opacity: 1;
  color: rgb(31 182 255 / var(--tw-text-opacity));
}
.text-error {
  color: var(--color-error);
}
.text-primary {
  --tw-text-opacity: 1;
  color: hsl(var(--primary) / var(--tw-text-opacity));
}
.text-secondary {
  --tw-text-opacity: 1;
  color: hsl(var(--secondary) / var(--tw-text-opacity));
}
.text-success {
  color: var(--color-success);
}
.underline {
  text-decoration-line: underline;
}
.antialiased {
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}
.opacity-0 {
  opacity: 0;
}
.opacity-100 {
  opacity: 1;
}
.opacity-30 {
  opacity: 0.3;
}
.opacity-70 {
  opacity: 0.7;
}
.opacity-90 {
  opacity: 0.9;
}
.shadow {
  --tw-shadow: 0 1px 3px 0 rgb(0 0 0 / 0.1), 0 1px 2px -1px rgb(0 0 0 / 0.1);
  --tw-shadow-colored: 0 1px 3px 0 var(--tw-shadow-color), 0 1px 2px -1px var(--tw-shadow-color);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
}
.shadow-2xl {
  --tw-shadow: 0 25px 50px -12px rgb(0 0 0 / 0.25);
  --tw-shadow-colored: 0 25px 50px -12px var(--tw-shadow-color);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
}
.shadow-\[0_4px_9px_-4px_\#3b71ca\] {
  --tw-shadow: 0 4px 9px -4px #3b71ca;
  --tw-shadow-colored: 0 4px 9px -4px var(--tw-shadow-color);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
}
.shadow-lg {
  --tw-shadow: 0 10px 15px -3px rgb(0 0 0 / 0.1), 0 4px 6px -4px rgb(0 0 0 / 0.1);
  --tw-shadow-colored: 0 10px 15px -3px var(--tw-shadow-color), 0 4px 6px -4px var(--tw-shadow-color);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
}
.shadow-md {
  --tw-shadow: 0 4px 6px -1px rgb(0 0 0 / 0.1), 0 2px 4px -2px rgb(0 0 0 / 0.1);
  --tw-shadow-colored: 0 4px 6px -1px var(--tw-shadow-color), 0 2px 4px -2px var(--tw-shadow-color);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
}
.shadow-sm {
  --tw-shadow: 0 1px 2px 0 rgb(0 0 0 / 0.05);
  --tw-shadow-colored: 0 1px 2px 0 var(--tw-shadow-color);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
}
.shadow-xl {
  --tw-shadow: 0 20px 25px -5px rgb(0 0 0 / 0.1), 0 8px 10px -6px rgb(0 0 0 / 0.1);
  --tw-shadow-colored: 0 20px 25px -5px var(--tw-shadow-color), 0 8px 10px -6px var(--tw-shadow-color);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
}
.outline-none {
  outline: 2px solid transparent;
  outline-offset: 2px;
}
.outline {
  outline-style: solid;
}
.ring-1 {
  --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
  --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(1px + var(--tw-ring-offset-width)) var(--tw-ring-color);
  box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow, 0 0 #0000);
}
.ring-2 {
  --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
  --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(2px + var(--tw-ring-offset-width)) var(--tw-ring-color);
  box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow, 0 0 #0000);
}
.ring-inset {
  --tw-ring-inset: inset;
}
.blur {
  --tw-blur: blur(8px);
  filter: var(--tw-blur) var(--tw-brightness) var(--tw-contrast) var(--tw-grayscale) var(--tw-hue-rotate) var(--tw-invert) var(--tw-saturate) var(--tw-sepia) var(--tw-drop-shadow);
}
.blur-2xl {
  --tw-blur: blur(40px);
  filter: var(--tw-blur) var(--tw-brightness) var(--tw-contrast) var(--tw-grayscale) var(--tw-hue-rotate) var(--tw-invert) var(--tw-saturate) var(--tw-sepia) var(--tw-drop-shadow);
}
.drop-shadow {
  --tw-drop-shadow: drop-shadow(0 1px 2px rgb(0 0 0 / 0.1)) drop-shadow(0 1px 1px rgb(0 0 0 / 0.06));
  filter: var(--tw-blur) var(--tw-brightness) var(--tw-contrast) var(--tw-grayscale) var(--tw-hue-rotate) var(--tw-invert) var(--tw-saturate) var(--tw-sepia) var(--tw-drop-shadow);
}
.drop-shadow-md {
  --tw-drop-shadow: drop-shadow(0 4px 3px rgb(0 0 0 / 0.07)) drop-shadow(0 2px 2px rgb(0 0 0 / 0.06));
  filter: var(--tw-blur) var(--tw-brightness) var(--tw-contrast) var(--tw-grayscale) var(--tw-hue-rotate) var(--tw-invert) var(--tw-saturate) var(--tw-sepia) var(--tw-drop-shadow);
}
.grayscale {
  --tw-grayscale: grayscale(100%);
  filter: var(--tw-blur) var(--tw-brightness) var(--tw-contrast) var(--tw-grayscale) var(--tw-hue-rotate) var(--tw-invert) var(--tw-saturate) var(--tw-sepia) var(--tw-drop-shadow);
}
.filter {
  filter: var(--tw-blur) var(--tw-brightness) var(--tw-contrast) var(--tw-grayscale) var(--tw-hue-rotate) var(--tw-invert) var(--tw-saturate) var(--tw-sepia) var(--tw-drop-shadow);
}
.backdrop-blur-lg {
  --tw-backdrop-blur: blur(16px);
  -webkit-backdrop-filter: var(--tw-backdrop-blur) var(--tw-backdrop-brightness) var(--tw-backdrop-contrast) var(--tw-backdrop-grayscale) var(--tw-backdrop-hue-rotate) var(--tw-backdrop-invert) var(--tw-backdrop-opacity) var(--tw-backdrop-saturate) var(--tw-backdrop-sepia);
          backdrop-filter: var(--tw-backdrop-blur) var(--tw-backdrop-brightness) var(--tw-backdrop-contrast) var(--tw-backdrop-grayscale) var(--tw-backdrop-hue-rotate) var(--tw-backdrop-invert) var(--tw-backdrop-opacity) var(--tw-backdrop-saturate) var(--tw-backdrop-sepia);
}
.backdrop-blur-sm {
  --tw-backdrop-blur: blur(4px);
  -webkit-backdrop-filter: var(--tw-backdrop-blur) var(--tw-backdrop-brightness) var(--tw-backdrop-contrast) var(--tw-backdrop-grayscale) var(--tw-backdrop-hue-rotate) var(--tw-backdrop-invert) var(--tw-backdrop-opacity) var(--tw-backdrop-saturate) var(--tw-backdrop-sepia);
          backdrop-filter: var(--tw-backdrop-blur) var(--tw-backdrop-brightness) var(--tw-backdrop-contrast) var(--tw-backdrop-grayscale) var(--tw-backdrop-hue-rotate) var(--tw-backdrop-invert) var(--tw-backdrop-opacity) var(--tw-backdrop-saturate) var(--tw-backdrop-sepia);
}
.backdrop-filter {
  -webkit-backdrop-filter: var(--tw-backdrop-blur) var(--tw-backdrop-brightness) var(--tw-backdrop-contrast) var(--tw-backdrop-grayscale) var(--tw-backdrop-hue-rotate) var(--tw-backdrop-invert) var(--tw-backdrop-opacity) var(--tw-backdrop-saturate) var(--tw-backdrop-sepia);
          backdrop-filter: var(--tw-backdrop-blur) var(--tw-backdrop-brightness) var(--tw-backdrop-contrast) var(--tw-backdrop-grayscale) var(--tw-backdrop-hue-rotate) var(--tw-backdrop-invert) var(--tw-backdrop-opacity) var(--tw-backdrop-saturate) var(--tw-backdrop-sepia);
}
.transition {
  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, -webkit-backdrop-filter;
  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter;
  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter, -webkit-backdrop-filter;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 150ms;
}
.transition-all {
  transition-property: all;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 150ms;
}
.transition-colors {
  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 150ms;
}
.transition-transform {
  transition-property: transform;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 150ms;
}
.duration-100 {
  transition-duration: 100ms;
}
.duration-150 {
  transition-duration: 150ms;
}
.duration-200 {
  transition-duration: 200ms;
}
.duration-300 {
  transition-duration: 300ms;
}
.ease-in {
  transition-timing-function: cubic-bezier(0.4, 0, 1, 1);
}
.ease-in-out {
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
}
.ease-linear {
  transition-timing-function: linear;
}
.ease-out {
  transition-timing-function: cubic-bezier(0, 0, 0.2, 1);
}
.glass {
  border: none;
  -webkit-backdrop-filter: blur(var(--glass-blur, 40px));
          backdrop-filter: blur(var(--glass-blur, 40px));
  background-color: #0000;
  background-image: linear-gradient( 135deg, oklch(100% 0 0 / var(--glass-opacity, 30%)) 0%, oklch(0% 0 0 / 0%) 100% ), linear-gradient( var(--glass-reflect-degree, 100deg), oklch(100% 0 0 / var(--glass-reflect-opacity, 5%)) 25%, oklch(0% 0 0 / 0%) 25% );
  box-shadow: 0 0 0 1px oklch(100% 0 0 / var(--glass-border-opacity, 20%)) inset, 0 0 0 2px oklch(0% 0 0 / 5%);
  text-shadow: 0 1px oklch(0% 0 0 / var(--glass-text-shadow-opacity, 5%));
}
:root .prose {
  --tw-prose-body: color-mix(in oklab, var(--color-base-content) 80%, #0000);
  --tw-prose-headings: var(--color-base-content);
  --tw-prose-lead: var(--color-base-content);
  --tw-prose-links: var(--color-base-content);
  --tw-prose-bold: var(--color-base-content);
  --tw-prose-counters: var(--color-base-content);
  --tw-prose-bullets: color-mix(in oklab, var(--color-base-content) 50%, #0000);
  --tw-prose-hr: color-mix(in oklab, var(--color-base-content) 20%, #0000);
  --tw-prose-quotes: var(--color-base-content);
  --tw-prose-quote-borders: color-mix(in oklab, var(--color-base-content) 20%, #0000);
  --tw-prose-captions: color-mix(in oklab, var(--color-base-content) 50%, #0000);
  --tw-prose-code: var(--color-base-content);
  --tw-prose-pre-code: var(--color-neutral-content);
  --tw-prose-pre-bg: var(--color-neutral);
  --tw-prose-th-borders: color-mix(in oklab, var(--color-base-content) 50%, #0000);
  --tw-prose-td-borders: color-mix(in oklab, var(--color-base-content) 20%, #0000);
  --tw-prose-kbd: color-mix(in oklab, var(--color-base-content) 80%, #0000);
}
:root .prose :where(code):not(pre > code) {
  background-color: var(--color-base-200);
  border-radius: var(--radius-selector);
  border: var(--border) solid var(--color-base-300);
  padding-inline: 0.5em;
  font-weight: inherit;
}
:root .prose :where(code):not(pre > code):before, :root .prose :where(code):not(pre > code):after {
  display: none;
}
.join {
  display: inline-flex;
  align-items: stretch;
  --join-ss: 0;
  --join-se: 0;
  --join-es: 0;
  --join-ee: 0;
}
.join :where(.join-item) {
  border-start-start-radius: var(--join-ss, 0);
  border-start-end-radius: var(--join-se, 0);
  border-end-start-radius: var(--join-es, 0);
  border-end-end-radius: var(--join-ee, 0);
}
.join :where(.join-item) * {
  --join-ss: var(--radius-field);
  --join-se: var(--radius-field);
  --join-es: var(--radius-field);
  --join-ee: var(--radius-field);
}
.join > .join-item:where(:first-child) {
  --join-ss: var(--radius-field);
  --join-se: 0;
  --join-es: var(--radius-field);
  --join-ee: 0;
}
.join :first-child:not(:last-child) :where(.join-item) {
  --join-ss: var(--radius-field);
  --join-se: 0;
  --join-es: var(--radius-field);
  --join-ee: 0;
}
.join > .join-item:where(:last-child) {
  --join-ss: 0;
  --join-se: var(--radius-field);
  --join-es: 0;
  --join-ee: var(--radius-field);
}
.join :last-child:not(:first-child) :where(.join-item) {
  --join-ss: 0;
  --join-se: var(--radius-field);
  --join-es: 0;
  --join-ee: var(--radius-field);
}
.join > .join-item:where(:only-child) {
  --join-ss: var(--radius-field);
  --join-se: var(--radius-field);
  --join-es: var(--radius-field);
  --join-ee: var(--radius-field);
}
.join :only-child :where(.join-item) {
  --join-ss: var(--radius-field);
  --join-se: var(--radius-field);
  --join-es: var(--radius-field);
  --join-ee: var(--radius-field);
}
.join-item:where(*:not(:first-child)) {
  margin-inline-start: calc(var(--border, 1px) * -1);
  margin-block-start: 0;
}
.join-vertical {
  flex-direction: column;
}
.join-vertical > .join-item:first-child {
  --join-ss: var(--radius-field);
  --join-se: var(--radius-field);
  --join-es: 0;
  --join-ee: 0;
}
.join-vertical :first-child:not(:last-child) .join-item {
  --join-ss: var(--radius-field);
  --join-se: var(--radius-field);
  --join-es: 0;
  --join-ee: 0;
}
.join-vertical > .join-item:last-child {
  --join-ss: 0;
  --join-se: 0;
  --join-es: var(--radius-field);
  --join-ee: var(--radius-field);
}
.join-vertical :last-child:not(:first-child) .join-item {
  --join-ss: 0;
  --join-se: 0;
  --join-es: var(--radius-field);
  --join-ee: var(--radius-field);
}
.join-vertical > .join-item:only-child {
  --join-ss: var(--radius-field);
  --join-se: var(--radius-field);
  --join-es: var(--radius-field);
  --join-ee: var(--radius-field);
}
.join-vertical :only-child .join-item {
  --join-ss: var(--radius-field);
  --join-se: var(--radius-field);
  --join-es: var(--radius-field);
  --join-ee: var(--radius-field);
}
.join-vertical .join-item:where(*:not(:first-child)) {
  margin-inline-start: 0;
  margin-block-start: calc(var(--border, 1px) * -1);
}
.join-horizontal {
  flex-direction: row;
}
.join-horizontal > .join-item:first-child {
  --join-ss: var(--radius-field);
  --join-se: 0;
  --join-es: var(--radius-field);
  --join-ee: 0;
}
.join-horizontal :first-child:not(:last-child) .join-item {
  --join-ss: var(--radius-field);
  --join-se: 0;
  --join-es: var(--radius-field);
  --join-ee: 0;
}
.join-horizontal > .join-item:last-child {
  --join-ss: 0;
  --join-se: var(--radius-field);
  --join-es: 0;
  --join-ee: var(--radius-field);
}
.join-horizontal :last-child:not(:first-child) .join-item {
  --join-ss: 0;
  --join-se: var(--radius-field);
  --join-es: 0;
  --join-ee: var(--radius-field);
}
.join-horizontal > .join-item:only-child {
  --join-ss: var(--radius-field);
  --join-se: var(--radius-field);
  --join-es: var(--radius-field);
  --join-ee: var(--radius-field);
}
.join-horizontal :only-child .join-item {
  --join-ss: var(--radius-field);
  --join-se: var(--radius-field);
  --join-es: var(--radius-field);
  --join-ee: var(--radius-field);
}
.join-horizontal .join-item:where(*:not(:first-child)) {
  margin-inline-start: calc(var(--border, 1px) * -1);
  margin-block-start: 0;
}
.\[a-zA-Z\:\\-\\\.\] {
  a-z-a--z: \-\.;
}
:root {
  --background: 0 0% 100%;
  --foreground: 240 10% 3.9%;
  --card: 0 0% 100%;
  --card-foreground: 240 10% 3.9%;
  --popover: 0 0% 100%;
  --popover-foreground: 240 10% 3.9%;
  --primary: 240 5.9% 10%;
  --primary-foreground: 0 0% 98%;
  --secondary: 240 4.8% 95.9%;
  --secondary-foreground: 240 5.9% 10%;
  --muted: 240 4.8% 95.9%;
  --muted-foreground: 240 3.8% 46.1%;
  --accent: 240 4.8% 95.9%;
  --accent-foreground: 240 5.9% 10%;
  --destructive: 0 72.22% 50.59%;
  --destructive-foreground: 0 0% 98%;
  --border: 240 5.9% 90%;
  --input: 240 5.9% 90%;
  --ring: 240 5.9% 10%;
  --radius: 0.5rem;
}
[data-theme='dark'] {
  --background: 240 10% 3.9%;
  --foreground: 0 0% 98%;
  --card: 240 10% 3.9%;
  --card-foreground: 0 0% 98%;
  --popover: 240 10% 3.9%;
  --popover-foreground: 0 0% 98%;
  --primary: 0 0% 98%;
  --primary-foreground: 240 5.9% 10%;
  --secondary: 240 3.7% 15.9%;
  --secondary-foreground: 0 0% 98%;
  --muted: 240 3.7% 15.9%;
  --muted-foreground: 240 5% 64.9%;
  --accent: 240 3.7% 15.9%;
  --accent-foreground: 0 0% 98%;
  --destructive: 0 62.8% 30.6%;
  --destructive-foreground: 0 0% 98%;
  --border: 240 3.7% 15.9%;
  --input: 240 3.7% 15.9%;
  --ring: 240 4.9% 83.9%;
}
.fade-me-out.htmx-swapping {
  opacity: 0;
  transition: opacity 1s ease-out;
}
#logo {
  color: darkorange;
}
.hover\:bg-opacity-10:hover {
  --tw-bg-opacity: 0.1;
}
.hover\:shadow-\[0_8px_9px_-4px_rgba\(59\2c 113\2c 202\2c 0\.3\)\2c 0_4px_18px_0_rgba\(59\2c 113\2c 202\2c 0\.2\)\]:hover {
  --tw-shadow: 0 8px 9px -4px rgba(59,113,202,0.3),0 4px 18px 0 rgba(59,113,202,0.2);
  --tw-shadow-colored: 0 8px 9px -4px var(--tw-shadow-color), 0 4px 18px 0 var(--tw-shadow-color);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
}
.focus\:shadow-\[0_8px_9px_-4px_rgba\(59\2c 113\2c 202\2c 0\.3\)\2c 0_4px_18px_0_rgba\(59\2c 113\2c 202\2c 0\.2\)\]:focus {
  --tw-shadow: 0 8px 9px -4px rgba(59,113,202,0.3),0 4px 18px 0 rgba(59,113,202,0.2);
  --tw-shadow-colored: 0 8px 9px -4px var(--tw-shadow-color), 0 4px 18px 0 var(--tw-shadow-color);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
}
.focus\:outline-none:focus {
  outline: 2px solid transparent;
  outline-offset: 2px;
}
.focus\:ring-0:focus {
  --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
  --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(0px + var(--tw-ring-offset-width)) var(--tw-ring-color);
  box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow, 0 0 #0000);
}
.focus\:ring-2:focus {
  --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
  --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(2px + var(--tw-ring-offset-width)) var(--tw-ring-color);
  box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow, 0 0 #0000);
}
.focus\:ring-4:focus {
  --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
  --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(4px + var(--tw-ring-offset-width)) var(--tw-ring-color);
  box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow, 0 0 #0000);
}
.focus\:ring-offset-2:focus {
  --tw-ring-offset-width: 2px;
}
.active\:shadow-\[0_8px_9px_-4px_rgba\(59\2c 113\2c 202\2c 0\.3\)\2c 0_4px_18px_0_rgba\(59\2c 113\2c 202\2c 0\.2\)\]:active {
  --tw-shadow: 0 8px 9px -4px rgba(59,113,202,0.3),0 4px 18px 0 rgba(59,113,202,0.2);
  --tw-shadow-colored: 0 8px 9px -4px var(--tw-shadow-color), 0 4px 18px 0 var(--tw-shadow-color);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
}
.disabled\:cursor-not-allowed:disabled {
  cursor: not-allowed;
}
.disabled\:opacity-50:disabled {
  opacity: 0.5;
}
.peer:focus ~ .peer-focus\:m-0 {
  margin: 0px;
}
.peer:focus ~ .peer-focus\:translate-x-0 {
  --tw-translate-x: 0px;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}
.peer:focus ~ .peer-focus\:translate-y-0 {
  --tw-translate-y: 0px;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}
@media (min-width: 640px) {

  .sm\:mt-0 {
    margin-top: 0px;
  }

  .sm\:h-12 {
    height: 3rem;
  }

  .sm\:w-12 {
    width: 3rem;
  }

  .sm\:max-w-lg {
    max-width: 32rem;
  }

  .sm\:translate-x-0 {
    --tw-translate-x: 0px;
    transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
  }

  .sm\:rounded-lg {
    border-radius: var(--radius);
  }

  .sm\:px-3 {
    padding-left: 0.75rem;
    padding-right: 0.75rem;
  }

  .sm\:px-3\.5 {
    padding-left: 0.875rem;
    padding-right: 0.875rem;
  }

  .sm\:px-4 {
    padding-left: 1rem;
    padding-right: 1rem;
  }

  .sm\:text-center {
    text-align: center;
  }

  .sm\:before\:flex-1::before {
    content: var(--tw-content);
    flex: 1 1 0%;
  }
}
@media (min-width: 768px) {

  .md\:relative {
    position: relative;
  }

  .md\:mb-0 {
    margin-bottom: 0px;
  }

  .md\:mr-1 {
    margin-right: 0.25rem;
  }

  .md\:mr-2 {
    margin-right: 0.5rem;
  }

  .md\:mr-3 {
    margin-right: 0.75rem;
  }

  .md\:flex {
    display: flex;
  }

  .md\:hidden {
    display: none;
  }

  .md\:h-10 {
    height: 2.5rem;
  }

  .md\:h-16 {
    height: 4rem;
  }

  .md\:h-24 {
    height: 6rem;
  }

  .md\:h-auto {
    height: auto;
  }

  .md\:w-1\/2 {
    width: 50%;
  }

  .md\:w-16 {
    width: 4rem;
  }

  .md\:w-auto {
    width: auto;
  }

  .md\:w-full {
    width: 100%;
  }

  .md\:grid-cols-3 {
    grid-template-columns: repeat(3, minmax(0, 1fr));
  }

  .md\:flex-row {
    flex-direction: row;
  }

  .md\:items-center {
    align-items: center;
  }

  .md\:justify-between {
    justify-content: space-between;
  }

  .md\:overflow-auto {
    overflow: auto;
  }

  .md\:rounded-full {
    border-radius: 9999px;
  }

  .md\:rounded-none {
    border-radius: 0px;
  }

  .md\:p-0 {
    padding: 0px;
  }

  .md\:px-12 {
    padding-left: 3rem;
    padding-right: 3rem;
  }

  .md\:px-2 {
    padding-left: 0.5rem;
    padding-right: 0.5rem;
  }

  .md\:px-4 {
    padding-left: 1rem;
    padding-right: 1rem;
  }

  .md\:py-0 {
    padding-top: 0px;
    padding-bottom: 0px;
  }

  .md\:py-1 {
    padding-top: 0.25rem;
    padding-bottom: 0.25rem;
  }

  .md\:py-1\.5 {
    padding-top: 0.375rem;
    padding-bottom: 0.375rem;
  }

  .md\:py-2 {
    padding-top: 0.5rem;
    padding-bottom: 0.5rem;
  }

  .md\:pl-0 {
    padding-left: 0px;
  }

  .md\:text-center {
    text-align: center;
  }
}
@media (min-width: 1024px) {

  .lg\:mx-3 {
    margin-left: 0.75rem;
    margin-right: 0.75rem;
  }

  .lg\:my-0 {
    margin-top: 0px;
    margin-bottom: 0px;
  }

  .lg\:mr-5 {
    margin-right: 1.25rem;
  }

  .lg\:h-20 {
    height: 5rem;
  }

  .lg\:w-20 {
    width: 5rem;
  }

  .lg\:w-6\/12 {
    width: 50%;
  }

  .lg\:max-w-3xl {
    max-width: 48rem;
  }

  .lg\:flex-row {
    flex-direction: row;
  }

  .lg\:p-16 {
    padding: 4rem;
  }

  .lg\:px-16 {
    padding-left: 4rem;
    padding-right: 4rem;
  }

  .lg\:px-4 {
    padding-left: 1rem;
    padding-right: 1rem;
  }

  .lg\:px-8 {
    padding-left: 2rem;
    padding-right: 2rem;
  }
}
@media (min-width: 1280px) {

  .xl\:w-5\/12 {
    width: 41.666667%;
  }

  .xl\:w-7\/12 {
    width: 58.333333%;
  }

  .xl\:p-24 {
    padding: 6rem;
  }

  .xl\:text-4xl {
    font-size: 2.25rem;
    line-height: 2.5rem;
  }

  .xl\:text-6xl {
    font-size: 3.75rem;
    line-height: 1;
  }
}
@media (prefers-color-scheme: dark) {

  .dark\:shadow-\[0_4px_9px_-4px_rgba\(59\2c 113\2c 202\2c 0\.5\)\] {
    --tw-shadow: 0 4px 9px -4px rgba(59,113,202,0.5);
    --tw-shadow-colored: 0 4px 9px -4px var(--tw-shadow-color);
    box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
  }

  .dark\:hover\:bg-opacity-40:hover {
    --tw-bg-opacity: 0.4;
  }

  .dark\:hover\:shadow-\[0_8px_9px_-4px_rgba\(59\2c 113\2c 202\2c 0\.2\)\2c 0_4px_18px_0_rgba\(59\2c 113\2c 202\2c 0\.1\)\]:hover {
    --tw-shadow: 0 8px 9px -4px rgba(59,113,202,0.2),0 4px 18px 0 rgba(59,113,202,0.1);
    --tw-shadow-colored: 0 8px 9px -4px var(--tw-shadow-color), 0 4px 18px 0 var(--tw-shadow-color);
    box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
  }

  .dark\:focus\:shadow-\[0_8px_9px_-4px_rgba\(59\2c 113\2c 202\2c 0\.2\)\2c 0_4px_18px_0_rgba\(59\2c 113\2c 202\2c 0\.1\)\]:focus {
    --tw-shadow: 0 8px 9px -4px rgba(59,113,202,0.2),0 4px 18px 0 rgba(59,113,202,0.1);
    --tw-shadow-colored: 0 8px 9px -4px var(--tw-shadow-color), 0 4px 18px 0 var(--tw-shadow-color);
    box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
  }

  .dark\:active\:shadow-\[0_8px_9px_-4px_rgba\(59\2c 113\2c 202\2c 0\.2\)\2c 0_4px_18px_0_rgba\(59\2c 113\2c 202\2c 0\.1\)\]:active {
    --tw-shadow: 0 8px 9px -4px rgba(59,113,202,0.2),0 4px 18px 0 rgba(59,113,202,0.1);
    --tw-shadow-colored: 0 8px 9px -4px var(--tw-shadow-color), 0 4px 18px 0 var(--tw-shadow-color);
    box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
  }
}
